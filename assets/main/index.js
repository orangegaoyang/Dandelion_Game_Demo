System.register("chunks:///_virtual/AudioHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var e,n,t,r,i,s,c,u;return{setters:[function(o){e=o.inheritsLoose},function(o){n=o.cclegacy,t=o._decorator,r=o.director,i=o.AudioSource,s=o.resources,c=o.AudioClip,u=o.Component}],execute:function(){var l,a;n._RF.push({},"2585c4z1GBJD67FFVHpfHq5","AudioHelper",void 0);var d=t.ccclass;t.property,o("AudioHelper",d("AudioHelper")(((a=function(o){function n(){for(var e,n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return(e=o.call.apply(o,[this].concat(t))||this)._bgm=void 0,e._sfx=void 0,e}e(n,o);var t=n.prototype;return t.onLoad=function(){n.instance=this,r.addPersistRootNode(this.node),this._bgm=this.node.addComponent(i),this._bgm.volume=.5,this._sfx=this.node.addComponent(i),this._sfx.volume=1},t.playBGM=function(){var o=this;s.load("Sounds/bgm",c,(function(e,n){if(e)return console.error(e);o._bgm.clip=n,o._bgm.loop=!0,o._bgm.play()}))},t.playSFX=function(o){var e=this;s.load("Sounds/"+o,c,(function(o,n){if(o)return console.error(o);e._sfx.playOneShot(n)}))},n}(u)).instance=void 0,l=a))||l);n._RF.pop()}}}));

System.register("chunks:///_virtual/CompassAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./IdleAnimations.ts","./EffectsHelper.ts"],(function(n){var t,e,i,r,o,a,s,c,l,u,p,f,m,d,y;return{setters:[function(n){t=n.applyDecoratedDescriptor,e=n.inheritsLoose,i=n.initializerDefineProperty,r=n.assertThisInitialized,o=n.asyncToGenerator,a=n.regeneratorRuntime},function(n){s=n.cclegacy,c=n._decorator,l=n.Node,u=n.ParticleSystem2D,p=n.tween,f=n.Component},function(n){m=n.AudioHelper},function(n){d=n.IdelAnimations},function(n){y=n.EffectsHelper}],execute:function(){var g,v,b,h,w,A,S;s._RF.push({},"c1543ts8bNFvbOQsJSx0vum","CompassAnimation",void 0);var E=c.ccclass,C=c.property;n("CompassAnimation",(g=E("CompassAnimation"),v=C(l),b=C(l),g((A=t((w=function(n){function t(){for(var t,e=arguments.length,o=new Array(e),a=0;a<e;a++)o[a]=arguments[a];return t=n.call.apply(n,[this].concat(o))||this,i(t,"pointer",A,r(t)),i(t,"windEffect",S,r(t)),t.angleMap={N:0,NE:315,E:270,SE:225,S:180,SW:135,W:90,NW:45},t.rotationOffset=0,t}e(t,n);var s=t.prototype;return s.blow=function(n){var t,e=this.windEffect.getComponent(u),i=null!=(t=this.angleMap[n])?t:0;e.angle=i+180,e.resetSystem()},s.pointAnimate=function(n){var t=this;return new Promise((function(e){var i;m.instance.playSFX("spin");var r=(null!=(i=t.angleMap[n])?i:0)+720+t.rotationOffset;t.rotationOffset+=720,d.instance.stopIdle(t.pointer),p(t.pointer).to(3,{angle:r},{easing:"cubicOut"}).call((function(){m.instance.playSFX("blowing"),d.instance.idleCompass(),e()})).start()}))},s.patchAnimate=function(){var n=o(a().mark((function n(t){return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,y.bounceScale(t);case 2:case"end":return n.stop()}}),n)})));return function(t){return n.apply(this,arguments)}}(),t}(f)).prototype,"pointer",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=t(w.prototype,"windEffect",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=w))||h));s._RF.pop()}}}));

System.register("chunks:///_virtual/CompassController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassAnimation.ts"],(function(e){var t,i,r,n,o,s,a,c,u,p,l,h,m,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized,o=e.createForOfIteratorHelperLoose,s=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,p=e.Sprite,l=e.Node,h=e.Component,m=e.director},function(e){f=e.CompassAnimation}],execute:function(){var d,v,S,b,y,C,g,D,w,W,x;c._RF.push({},"ed321HgZiBLGKDTC9/hdyVu","CompassController",void 0);var A=u.ccclass,N=u.property,E=function(e){return e[e.N=0]="N",e[e.NE=1]="NE",e[e.E=2]="E",e[e.SE=3]="SE",e[e.S=4]="S",e[e.SW=5]="SW",e[e.W=6]="W",e[e.NW=7]="NW",e}(E||{});e("CompassController",(d=A("CompassController"),v=N(f),S=N([p]),b=N(l),y=N(l),d((D=t((g=function(e){function t(){for(var t,i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,r(t,"compassAnimation",D,n(t)),r(t,"coverSprites",w,n(t)),r(t,"compass4Sprite",W,n(t)),r(t,"compass8Sprite",x,n(t)),t.directions8=[E.N,E.NE,E.E,E.SE,E.S,E.SW,E.W,E.NW],t.directions4=[E.N,E.E,E.S,E.W],t.allDirections=[],t.usedDirections=[],t}i(t,e);var c=t.prototype;return c.init=function(e){this.compass4Sprite.setSiblingIndex(0),this.compass8Sprite.setSiblingIndex(0),4==e?(this.compass4Sprite.active=!0,this.compass8Sprite.active=!1,this.allDirections=this.directions4):8==e&&(this.compass8Sprite.active=!0,this.compass4Sprite.active=!1,this.allDirections=this.directions8)},c.hideAllCovers=function(){for(var e,t=o(this.coverSprites);!(e=t()).done;){e.value.node.active=!1}},c.showCover=function(){var e=s(a().mark((function e(t){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!=(i=this.coverSprites[t].node).active){e.next=5;break}return i.active=!0,e.next=5,this.compassAnimation.patchAnimate(i);case 5:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.autoBlowWind=function(){var e=s(a().mark((function e(){var t,i,r,n,s,c=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=o(this.usedDirections);case 1:if((i=t()).done){e.next=7;break}return r=i.value,e.next=5,this.showCover(r);case 5:e.next=1;break;case 7:if(0!==(n=this.allDirections.filter((function(e){return!c.usedDirections.includes(e)}))).length){e.next=10;break}return e.abrupt("return");case 10:return s=n[Math.floor(Math.random()*n.length)],this.usedDirections.push(s),e.next=14,this.compassAnimation.pointAnimate(E[s]);case 14:this.compassAnimation.blow(E[s]),m.emit("WIND_BLOW",E[s]);case 16:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.reset=function(){this.usedDirections=[],this.hideAllCovers()},t}(h)).prototype,"compassAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=t(g.prototype,"coverSprites",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),W=t(g.prototype,"compass4Sprite",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=t(g.prototype,"compass8Sprite",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=g))||C));c._RF.pop()}}}));

System.register("chunks:///_virtual/EffectsHelper.ts",["cc"],(function(e){var n,t,c;return{setters:[function(e){n=e.cclegacy,t=e.Vec3,c=e.tween}],execute:function(){n._RF.push({},"07256waQwhMU6vjhrECp4MJ","EffectsHelper",void 0);e("EffectsHelper",function(){function e(){}return e.bounceScale=function(e,n){return void 0===n&&(n={}),new Promise((function(r){var u,s,i=null!=(u=n.duration)?u:.25,a=null!=(s=n.scale)?s:1.2;e.setScale(new t(.5,.5,1)),e.active=!0,c(e).to(i,{scale:new t(a,a,1)},{easing:"backOut"}).to(.1,{scale:new t(1,1,1)},{easing:"sineIn"}).call((function(){return r()})).start()}))},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(e){var o,t,n,r,i,l,a,c,s,p,u;return{setters:[function(e){o=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,l=e._decorator,a=e.Node,c=e.tween,s=e.UITransform,p=e.Component},function(e){u=e.AudioHelper}],execute:function(){var f,y,w,d,F;i._RF.push({},"53b63mRvBJHhIQccMJUmJaX","FlowerAnimation",void 0);var v=l.ccclass,m=l.property;e("FlowerAnimation",(f=v("FlowerAnimation"),y=m(a),f((F=o((d=function(e){function o(){for(var o,t=arguments.length,i=new Array(t),l=0;l<t;l++)i[l]=arguments[l];return o=e.call.apply(e,[this].concat(i))||this,n(o,"flyFlower",F,r(o)),o}return t(o,e),o.prototype.plant=function(e,o){var t=this;return new Promise((function(n){u.instance.playSFX("bubble-pop");var r=e.getWorldPosition(),i=o.getWorldPosition();t.flyFlower.active=!0,t.flyFlower.setWorldPosition(r);var l=r.clone();l.y+=10,l.x+=10,c(t.flyFlower).to(.2,{position:t.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(l)},{easing:"quadOut"}).to(.5,{position:t.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(i)},{easing:"quadInOut"}).call((function(){t.flyFlower.active=!1,n()})).start()}))},o}(p)).prototype,"flyFlower",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=d))||w));i._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./FlowerAnimation.ts","./TileController.ts","./IdleAnimations.ts"],(function(n){var e,t,o,r,i,l,a,s,c,u,f,p,w;return{setters:[function(n){e=n.applyDecoratedDescriptor,t=n.inheritsLoose,o=n.initializerDefineProperty,r=n.assertThisInitialized,i=n.asyncToGenerator,l=n.regeneratorRuntime},function(n){a=n.cclegacy,s=n._decorator,c=n.Node,u=n.Component},function(n){f=n.FlowerAnimation},function(n){p=n.TileController},function(n){w=n.IdelAnimations}],execute:function(){var h,d,I,m,v,y,C;a._RF.push({},"cf16aSCRT1PuJqI4iQAmW4b","FlowerController",void 0);var F=s.ccclass,g=s.property;n("FlowerController",(h=F("FlowerController"),d=g(c),I=g(f),h((y=e((v=function(n){function e(){for(var e,t=arguments.length,i=new Array(t),l=0;l<t;l++)i[l]=arguments[l];return e=n.call.apply(n,[this].concat(i))||this,o(e,"flowerContainer",y,r(e)),o(e,"flowerAnimation",C,r(e)),e.flowerIcons=void 0,e._lastFlowerIndex=9,e}t(e,n);var a=e.prototype;return a.onLoad=function(){this.flowerIcons=this.flowerContainer.children},a.init=function(n){this._lastFlowerIndex=n-1;for(var e=0;e<this.flowerIcons.length;e++)this.flowerIcons[e].active=e<n,e<=n-1&&this.flowerIcons[e].active?w.instance.idleIndicator(this.flowerIcons[e]):w.instance.stopIdle(this.flowerIcons[e])},a.plant=function(){var n=i(l().mark((function n(e){var t,o;return l().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return o=this.flowerIcons[this._lastFlowerIndex--],n.next=3,this.flowerAnimation.plant(o,e);case 3:o.active=!1,w.instance.stopIdle(o),null==(t=e.getComponent(p))||t.setFlower();case 6:case"end":return n.stop()}}),n,this)})));return function(e){return n.apply(this,arguments)}}(),e}(u)).prototype,"flowerContainer",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=e(v.prototype,"flowerAnimation",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));a._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlantController.ts","./ResultPopup.ts","./LevelManager.ts","./CompassController.ts","./AudioHelper.ts"],(function(t){var e,n,r,i,o,s,a,l,u,c,h,p,f,m,g,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,r=t.initializerDefineProperty,i=t.assertThisInitialized,o=t.asyncToGenerator,s=t.regeneratorRuntime},function(t){a=t.cclegacy,l=t._decorator,u=t.Label,c=t.director,h=t.Component},function(t){p=t.PlantController},function(t){f=t.ResultPopup},function(t){m=t.getLevelConfig},function(t){g=t.CompassController},function(t){d=t.AudioHelper}],execute:function(){var v,w,b,C,P,R,k,y,L,x,G,B;a._RF.push({},"a0000YzmrZNq6jS+N1zVPFc","GameManager",void 0);var I=l.ccclass,M=l.property,z=function(t){return t[t.Planting=0]="Planting",t[t.Blowing=1]="Blowing",t[t.GameOver=2]="GameOver",t}(z||{});t("GameManager",(v=I("GameManager"),w=M(p),b=M(u),C=M(f),P=M(g),v(((B=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return(e=t.call.apply(t,[this].concat(o))||this).currentRound=0,e.maxRounds=7,e.isClickable=!0,e.phase=z.Planting,r(e,"plantController",y,i(e)),r(e,"instructionLabel",L,i(e)),r(e,"resultPopup",x,i(e)),r(e,"compassController",G,i(e)),e}n(e,t);var a=e.prototype;return a.onLoad=function(){e.instance=this,d.instance.playBGM()},a.start=function(){this.initGame(),c.on("TILE_CLICKED",this.plant,this),c.on("WIND_BLOW",this.blow,this)},a.initGame=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1"),e=m(t);this.maxRounds=e.windCount,this.plantController.init(e.rows,e.windCount),this.compassController.init(e.direction),this.resetGame()},a.resetGame=function(){this.plantController.reset(),this.compassController.reset(),this.currentRound=0,this.enterPlantingPhase()},a.nextLevel=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1");localStorage.setItem("currentLevel",(t+1).toString()),this.initGame()},a.enterPlantingPhase=function(){this.currentRound++,this.setPhase(z.Planting)},a.enterBlowingPhase=function(){this.checkMediumResult()||(this.setPhase(z.Blowing),this.compassController.autoBlowWind())},a.plant=function(){var t=o(s().mark((function t(e){var n=this;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.phase!=z.Planting||!this.isClickable){t.next=5;break}return this.isClickable=!1,t.next=4,this.plantController.plant(e);case 4:setTimeout((function(){n.enterBlowingPhase(),n.isClickable=!0}),1e3);case 5:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),a.blow=function(){var t=o(s().mark((function t(e){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.phase!=z.Blowing){t.next=4;break}return t.next=3,this.plantController.blow(e);case 3:this.checkRoundResult();case 4:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),a.setPhase=function(t){switch(this.phase=t,t){case z.Planting:this.instructionLabel.string="Click on a tile to plant a dandelion";break;case z.GameOver:this.instructionLabel.string="";break;case z.Blowing:this.instructionLabel.string="Tap a direction on the compass to blow the wind"}},a.checkRoundResult=function(){var t=o(s().mark((function t(){var e;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=this.plantController.isBoardFullyCovered(),!(this.currentRound>=this.maxRounds||e)){t.next=8;break}return this.setPhase(z.GameOver),t.next=5,this.plantController.roundOver();case 5:e?this.showResult(!0):this.showResult(!1),t.next=9;break;case 8:this.enterPlantingPhase();case 9:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),a.checkMediumResult=function(){var t=this.plantController.isBoardFullyCovered();return t&&(this.setPhase(z.GameOver),this.showResult(!0)),t},a.showResult=function(){var t=o(s().mark((function t(e){var n=this;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e?this.resultPopup.show(!0,(function(){n.nextLevel()})):this.resultPopup.show(!1,(function(){n.resetGame()}));case 1:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),e}(h)).instance=void 0,y=e((k=B).prototype,"plantController",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(k.prototype,"instructionLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=e(k.prototype,"resultPopup",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=e(k.prototype,"compassController",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=k))||R));a._RF.pop()}}}));

System.register("chunks:///_virtual/GridAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,n,o,r,i,a,l,c,s,d,p,u,f,y,v;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,o=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Prefab,c=e.Node,s=e.instantiate,d=e.director,p=e.UITransform,u=e.UIOpacity,f=e.tween,y=e.Vec3,v=e.Component}],execute:function(){var m,g,b,h,P,w,A;i._RF.push({},"b36e8kkMb9Mla9EpFZ/lAEs","GridAnimation",void 0);var C=a.ccclass,F=a.property;e("GridAnimation",(m=C("GridAnimation"),g=F(l),b=F(c),m((w=t((P=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return t=e.call.apply(e,[this].concat(i))||this,o(t,"seedFlyPrefab",w,r(t)),o(t,"windEffect",A,r(t)),t}return n(t,e),t.prototype.seedFly=function(e,t){var n=this;return new Promise((function(o){if(n.seedFlyPrefab){var r=s(n.seedFlyPrefab);n.node.addChild(r);var i=d.getScene().getChildByName("Canvas");i.addChild(r);var a=e.getWorldPosition(),l=t.getWorldPosition(),c=a.clone().lerp(l,.5);c.x+=80*(Math.random()-.5),c.y+=80*(Math.random()-.5),r.setWorldPosition(a);var v=i.getComponent(p).convertToNodeSpaceAR(a),m=i.getComponent(p).convertToNodeSpaceAR(c),g=i.getComponent(p).convertToNodeSpaceAR(l);r.setPosition(v);var b={value:0},h=360+360*Math.random(),P=r.getComponent(u);P&&(P.opacity=255),f(b).to(2,{value:1},{onUpdate:function(){var e=b.value,t=1-e,n=t*t*v.x+2*t*e*m.x+e*e*g.x,o=t*t*v.y+2*t*e*m.y+e*e*g.y;r.setPosition(new y(n,o,0)),r.angle=0+(h-0)*e;var i=1+(1.2-1)*e;r.setScale(new y(i,i,1)),P&&(P.opacity=255-75*e)}}).call((function(){r.destroy(),o()})).start()}}))},t}(v)).prototype,"seedFlyPrefab",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(P.prototype,"windEffect",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=P))||h));i._RF.pop()}}}));

System.register("chunks:///_virtual/GridController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileController.ts","./GridAnimation.ts"],(function(i){var e,t,r,n,o,s,l,a,d,u,c,f,h;return{setters:[function(i){e=i.applyDecoratedDescriptor,t=i.inheritsLoose,r=i.initializerDefineProperty,n=i.assertThisInitialized,o=i.createForOfIteratorHelperLoose},function(i){s=i.cclegacy,l=i._decorator,a=i.Prefab,d=i.instantiate,u=i.Vec3,c=i.Component},function(i){f=i.TileController},function(i){h=i.GridAnimation}],execute:function(){var g,p,v,S,z,m,C;s._RF.push({},"927d1nKTBBLgqY5/Ep52e2i","GridController",void 0);var y=l.ccclass,b=l.property,N={N:[-1,0],NE:[-1,1],E:[0,1],SE:[1,1],S:[1,0],SW:[1,-1],W:[0,-1],NW:[-1,-1]};i("GridController",(g=y("GridController"),p=b(a),v=b(h),g((m=e((z=function(i){function e(){for(var e,t=arguments.length,o=new Array(t),s=0;s<t;s++)o[s]=arguments[s];return(e=i.call.apply(i,[this].concat(o))||this).tileSize=100,e.spacing=2,r(e,"tilePrefab",m,n(e)),r(e,"gridAnimation",C,n(e)),e.tileNodes=[],e.gridSize=5,e}t(e,i);var s=e.prototype;return s.init=function(i){this.node.removeAllChildren(),this.gridSize=i;for(var e=-(this.gridSize*this.tileSize+(this.gridSize-1)*this.spacing)/2+this.tileSize/2,t=(this.gridSize*this.tileSize+(this.gridSize-1)*this.spacing)/2-this.tileSize/2,r=0;r<this.gridSize;r++){this.tileNodes[r]=[];for(var n=0;n<this.gridSize;n++){var o=d(this.tilePrefab);o.setPosition(new u(e+n*(this.tileSize+this.spacing),t-r*(this.tileSize+this.spacing),0)),this.node.addChild(o),this.tileNodes[r][n]=o,o.getComponent(f).init(r,n)}}},s.reset=function(){for(var i=0;i<mud;i++)for(var e=0;e<this.gridSize;e++){this.tileNodes[i][e].getComponent(f).setEmpty()}},s.spawnMuds=function(i){for(var e=0;e<i;e++){this.tileNodes[Math.floor(100*Math.random())%this.gridSize][Math.floor(100*Math.random())%this.gridSize].getComponent(f).setEmpty()}},s.roundOver=function(){var i=this;return new Promise((function(e){for(var t=1,r=0;r<i.gridSize;r++)for(var n=function(){var e=i.tileNodes[r][o].getComponent(f);e.isSeed()&&(i.scheduleOnce((function(){e.setFinalFlower()}),.3*t),t++)},o=0;o<i.gridSize;o++)n();i.scheduleOnce((function(){e()}),.3*t+1)}))},s.blowSeeds=function(i){var e=this;return new Promise((function(t){for(var r=[],n=N[i],o=n[0],s=n[1],l=0;l<e.gridSize;l++)for(var a=0;a<e.gridSize;a++){var d=e.tileNodes[l][a].getComponent(f);if(d.isFlower())for(var u=l+o,c=a+s,h=function(){var i=e.tileNodes[u][c].getComponent(f);if(!i.isFlower()){var t=e.gridAnimation.seedFly(d.node,i.node).then((function(){i.setSeed()}));r.push(t)}u+=o,c+=s};e.inBounds(u,c);)h()}0===r.length?t():Promise.all(r).then((function(){t()}))}))},s.inBounds=function(i,e){return i>=0&&i<this.gridSize&&e>=0&&e<this.gridSize},s.isBoardFullyCovered=function(){for(var i,e=o(this.tileNodes);!(i=e()).done;)for(var t,r=i.value,n=o(r);!(t=n()).done;){if(t.value.getComponent(f).isEmpty())return!1}return!0},e}(c)).prototype,"tilePrefab",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=e(z.prototype,"gridAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=z))||S));s._RF.pop()}}}));

System.register("chunks:///_virtual/IdleAnimations.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(n){var e,i,t,o,s,a,r;return{setters:[function(n){e=n.inheritsLoose},function(n){i=n.cclegacy,t=n._decorator,o=n.find,s=n.tween,a=n.Vec3,r=n.Component}],execute:function(){var u,l;i._RF.push({},"cdd78pOz89KMKUEUB7o2RDu","IdleAnimations",void 0);var p=t.ccclass;t.property,n("IdelAnimations",p("IdelAnimations")(((l=function(n){function i(){return n.apply(this,arguments)||this}e(i,n);var t=i.prototype;return t.onLoad=function(){i.instance=this,this.idleCloud(),this.idleCompass()},t.idleCloud=function(){var n=o("Canvas/Center/RightPanel/Wind");n&&s(n).repeatForever(s().by(3,{position:new a(20,0,0)},{easing:"sineInOut"}).by(3,{position:new a(-20,0,0)},{easing:"sineInOut"})).start()},t.idleCompass=function(){var n=o("Canvas/Center/RightPanel/CompassPanel/Pointer");n&&s(n).repeatForever(s().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},t.stopIdle=function(n){s(n).stop()},t.idleIndicator=function(n){var e=Math.random();s(n).delay(e).repeatForever(s().by(1,{position:new a(0,5,0)},{easing:"sineInOut"}).by(1,{position:new a(0,-5,0)},{easing:"sineInOut"})).start()},t.idleTileFlower=function(n){s(n).repeatForever(s().by(1.4,{position:new a(0,4,0)},{easing:"sineInOut"}).by(1.4,{position:new a(0,-4,0)},{easing:"sineInOut"})).start()},t.idleTileSeed=function(n){s(n).repeatForever(s().by(2,{position:new a(0,3,0)},{easing:"sineInOut"}).by(2,{position:new a(0,-3,0)},{easing:"sineInOut"})).start()},i}(r)).instance=void 0,u=l))||u);i._RF.pop()}}}));

System.register("chunks:///_virtual/LevelManager.ts",["cc"],(function(n){var e;return{setters:[function(n){e=n.cclegacy}],execute:function(){n("getLevelConfig",(function(n){return t[Math.min(n-1,t.length-1)]})),e._RF.push({},"0135eEnWntLcpY2ffWv6jeY","LevelManager",void 0);var t=n("LevelConfigs",[{rows:2,windCount:2,direction:4},{rows:3,windCount:3,direction:4},{rows:4,windCount:6,direction:8},{rows:5,windCount:7,direction:8},{rows:5,windCount:7,direction:8,mud:1}]);e._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./EffectsHelper.ts","./OneShotParticle.ts","./CompassController.ts","./FlowerController.ts","./GridController.ts","./PlantController.ts","./ResultPopup.ts","./TileController.ts","./CompassAnimation.ts","./FlowerAnimation.ts","./GridAnimation.ts","./IdleAnimations.ts","./ResultPopupAnimation.ts","./TileAnimation.ts","./GameManager.ts","./LevelManager.ts","./SceneSwitchAnimation.ts","./StartManager.ts","./AudioHelper.ts","./TimelineHelper.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/OneShotParticle.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.ParticleSystem2D,c=t.Component}],execute:function(){var i;r._RF.push({},"2a606wOyVpItYUnzW74HPaB","OneShotParticle",void 0);var s=o.ccclass;o.property,t("VictoryParticle",s("VictoryParticle")(i=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this,e=this.getComponent(n);e&&e.resetSystem(),setTimeout((function(){t.node.destroy()}),4e3)},r}(c))||i);r._RF.pop()}}}));

System.register("chunks:///_virtual/PlantController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridController.ts","./FlowerController.ts"],(function(r){var t,n,e,o,i,l,u,c,a,s,f;return{setters:[function(r){t=r.applyDecoratedDescriptor,n=r.inheritsLoose,e=r.initializerDefineProperty,o=r.assertThisInitialized,i=r.asyncToGenerator,l=r.regeneratorRuntime},function(r){u=r.cclegacy,c=r._decorator,a=r.Component},function(r){s=r.GridController},function(r){f=r.FlowerController}],execute:function(){var p,h,d,C,w,v,y;u._RF.push({},"856dcU59lJIR7+xm/FGgHiW","PlantController",void 0);var g=c.ccclass,b=c.property;r("PlantController",(p=g("PlantController"),h=b(f),d=b(s),p((v=t((w=function(r){function t(){for(var t,n=arguments.length,i=new Array(n),l=0;l<n;l++)i[l]=arguments[l];return t=r.call.apply(r,[this].concat(i))||this,e(t,"flowerController",v,o(t)),e(t,"gridController",y,o(t)),t.count=0,t.currentCount=0,t}n(t,r);var u=t.prototype;return u.init=function(r,t){this.count=t,this.flowerController.init(t),this.gridController.init(r)},u.reset=function(){this.flowerController.init(this.count),this.gridController.reset()},u.plant=function(){var r=i(l().mark((function r(t){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.flowerController.plant(t);case 2:this.currentCount--;case 3:case"end":return r.stop()}}),r,this)})));return function(t){return r.apply(this,arguments)}}(),u.blow=function(){var r=i(l().mark((function r(t){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.gridController.blowSeeds(t);case 2:case"end":return r.stop()}}),r,this)})));return function(t){return r.apply(this,arguments)}}(),u.roundOver=function(){var r=i(l().mark((function r(){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.gridController.roundOver();case 2:case"end":return r.stop()}}),r,this)})));return function(){return r.apply(this,arguments)}}(),u.isBoardFullyCovered=function(){return this.gridController.isBoardFullyCovered()},t}(a)).prototype,"flowerController",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=t(w.prototype,"gridController",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=w))||C));u._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopup.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupAnimation.ts"],(function(t){var e,n,i,r,o,a,s,u,l,c,p,h;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized,o=t.asyncToGenerator,a=t.regeneratorRuntime},function(t){s=t.cclegacy,u=t._decorator,l=t.Label,c=t.Button,p=t.Component},function(t){h=t.ResultPopupAnimation}],execute:function(){var f,b,d,m,y,L,R,g,v;s._RF.push({},"67522KS9wNPBaNKMCQj6MEU","ResultPopup",void 0);var w=u.ccclass,E=u.property;t("ResultPopup",(f=w("ResultPopup"),b=E(l),d=E(c),m=E(h),f((R=e((L=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"titleLabel",R,r(e)),i(e,"restartButton",g,r(e)),i(e,"animation",v,r(e)),e._onRestart=null,e}n(e,t);var s=e.prototype;return s.start=function(){this.node.active=!1,this.restartButton.node.on(c.EventType.CLICK,this.endShow,this)},s.endShow=function(){this.node.active=!1,this._onRestart&&this._onRestart()},s.show=function(){var t=o(a().mark((function t(e,n){var i,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i=this.restartButton.node.getChildByName("Label"),r=null==i?void 0:i.getComponent(l),this._onRestart=n,!e){t.next=10;break}return this.titleLabel.string="YOU WIN!",r.string="NEXT LEVEL",t.next=8,this.animation.showWin(this.node);case 8:t.next=14;break;case 10:return this.titleLabel.string="LEVEL FAILED",r.string="RETRY",t.next=14,this.animation.showLose(this.node);case 14:case"end":return t.stop()}}),t,this)})));return function(e,n){return t.apply(this,arguments)}}(),e}(p)).prototype,"titleLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=e(L.prototype,"restartButton",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=e(L.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=L))||y));s._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./TimelineHelper.ts","./EffectsHelper.ts"],(function(e){var t,n,r,i,o,a,c,u,s,p,l,f,h,y,d;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,s=e.Prefab,p=e.sp,l=e.instantiate,f=e.Component},function(e){h=e.AudioHelper},function(e){y=e.wait},function(e){d=e.EffectsHelper}],execute:function(){var P,v,b,m,w,R,g;c._RF.push({},"50650YKPRlHZKhjTHtXKRcC","ResultPopupAnimation",void 0);var k=u.ccclass,x=u.property;e("ResultPopupAnimation",(P=k("ResultPopupAnimation"),v=x(s),b=x(p.Skeleton),P((R=t((w=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"victoryParticlePrefab",R,i(t)),r(t,"backgroundSpine",g,i(t)),t}n(t,e);var c=t.prototype;return c.showWin=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.showVictoryParticles(),h.instance.playSFX("tadaa"),e.next=4,y(2e3);case 4:return t.active=!0,this.backgroundSpine.setAnimation(0,"idle",!0),e.next=8,this.popupResultPanel(t);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showLose=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h.instance.playSFX("lose"),e.next=3,y(2e3);case 3:return t.active=!0,this.backgroundSpine.setAnimation(0,"fail",!1),e.next=7,this.popupResultPanel(t);case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showVictoryParticles=function(){var e=l(this.victoryParticlePrefab);e.setPosition(0,0),this.node.addChild(e)},c.popupResultPanel=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d.bounceScale(t);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),t}(f)).prototype,"victoryParticlePrefab",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=t(w.prototype,"backgroundSpine",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=w))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/SceneSwitchAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(t){var e,n,o,i,r,a,c,u,s,l,p,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,o=t.initializerDefineProperty,i=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,c=t.Node,u=t.UIOpacity,s=t.tween,l=t.Vec3,p=t.Component},function(t){d=t.AudioHelper}],execute:function(){var f,h,m,y,w;r._RF.push({},"ad974rHdelF87WmmoGkUViU","SceneSwitchAnimation",void 0);var S=a.ccclass,v=a.property;t("SceneSwitchAnimation",(f=S("SceneSwitchAnimation"),h=v(c),f((w=e((y=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r))||this,o(e,"rootNode",w,i(e)),e}n(e,t);var r=e.prototype;return r.start=function(){},r.update=function(t){},r.switch=function(){var t=this;return new Promise((function(e){d.instance.playSFX("swish");var n=t.rootNode.getComponent(u);n||(n=t.rootNode.addComponent(u)),s(t.rootNode).to(.5,{scale:new l(.3,.3,1)},{easing:"quadInOut"}).start(),s(n).to(.5,{opacity:0},{easing:"quadInOut"}).call((function(){e()})).start()}))},e}(p)).prototype,"rootNode",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=y))||m));r._RF.pop()}}}));

System.register("chunks:///_virtual/StartManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SceneSwitchAnimation.ts"],(function(t){var n,e,r,a,i,o,c,s,u,l,p;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,r=t.initializerDefineProperty,a=t.assertThisInitialized,i=t.asyncToGenerator,o=t.regeneratorRuntime},function(t){c=t.cclegacy,s=t._decorator,u=t.Component,l=t.director},function(t){p=t.SceneSwitchAnimation}],execute:function(){var f,h,m,d,g;c._RF.push({},"b7820Ibl8lE8a/m7g4FqHbp","StartManager",void 0);var y=s.ccclass,S=s.property;t("StartManager",(f=y("StartManager"),h=S(p),f((g=n((d=function(t){function n(){for(var n,e=arguments.length,i=new Array(e),o=0;o<e;o++)i[o]=arguments[o];return n=t.call.apply(t,[this].concat(i))||this,r(n,"sceneAnimation",g,a(n)),n}e(n,t);var c=n.prototype;return c.start=function(){},c.update=function(t){},c.onStartGame=function(){var t=i(o().mark((function t(){return o().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.sceneAnimation.switch();case 2:l.loadScene("dandelion");case 3:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),n}(u)).prototype,"sceneAnimation",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=d))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/TileAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,r,o,i,c,s,u;return{setters:[function(e){n=e.inheritsLoose,t=e.asyncToGenerator,r=e.regeneratorRuntime},function(e){o=e.cclegacy,i=e._decorator,c=e.Component},function(e){s=e.AudioHelper},function(e){u=e.EffectsHelper}],execute:function(){var a;o._RF.push({},"773624mcfpELo13mt1ts7jO","TileAnimation",void 0);var p=i.ccclass;i.property,e("TileAnimation",p("TileAnimation")(a=function(e){function o(){return e.apply(this,arguments)||this}return n(o,e),o.prototype.switchToFlower=function(){var e=t(r().mark((function e(n){return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s.instance.playSFX("sparkle"),e.next=3,u.bounceScale(n);case 3:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o}(c))||a);o._RF.pop()}}}));

System.register("chunks:///_virtual/TileController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileAnimation.ts"],(function(e){var t,i,n,o,s,a,r,l,d,c;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){s=e.cclegacy,a=e._decorator,r=e.Node,l=e.director,d=e.Component},function(e){c=e.TileAnimation}],execute:function(){var p,h,u,S,m;s._RF.push({},"c0f27p3AoRMq76p18EoW8hV","TileController",void 0);var N=a.ccclass,f=a.property,y=function(e){return e[e.Empty=0]="Empty",e[e.Dandelion=1]="Dandelion",e[e.Seed=2]="Seed",e}(y||{});e("TileController",(p=N("TileController"),h=f(c),p((m=t((S=function(e){function t(){for(var t,i=arguments.length,s=new Array(i),a=0;a<i;a++)s[a]=arguments[a];return t=e.call.apply(e,[this].concat(s))||this,n(t,"tileAnimation",m,o(t)),t.state=y.Empty,t.maskSpriteNode=null,t.flowerSpriteNode=null,t.seedSpriteNode=null,t.dandelionSpriteNode=null,t}i(t,e);var s=t.prototype;return s.onLoad=function(){this.maskSpriteNode=this.node.getChildByName("MaskSprite"),this.flowerSpriteNode=this.node.getChildByName("FlowerNode"),this.seedSpriteNode=this.node.getChildByName("SeedNode"),this.dandelionSpriteNode=this.node.getChildByName("DandelionNode"),this.updateVisual()},s.init=function(e,t){this.node.on(r.EventType.TOUCH_END,this.onClick,this)},s.onClick=function(){this.state!==y.Empty&&this.state!==y.Seed||l.emit("TILE_CLICKED",this.node)},s.updateVisual=function(){switch(this.maskSpriteNode.active=!1,this.flowerSpriteNode.active=!1,this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!1,this.state){case y.Empty:this.maskSpriteNode.active=!1;break;case y.Dandelion:this.maskSpriteNode.active=!0,this.dandelionSpriteNode.active=!0;break;case y.Seed:this.seedSpriteNode.active=!0}},s.setFlower=function(){this.state=y.Dandelion,this.updateVisual()},s.setSeed=function(){this.state=y.Seed,this.updateVisual()},s.setEmpty=function(){this.state=y.Empty,this.updateVisual()},s.setFinalFlower=function(){this.seedSpriteNode.active=!1,this.maskSpriteNode.active=!0,this.dandelionSpriteNode.active=!0,this.tileAnimation.switchToFlower(this.node)},s.isFlower=function(){return this.state==y.Dandelion},s.isEmpty=function(){return this.state==y.Empty},s.isSeed=function(){return this.state==y.Seed},t}(d)).prototype,"tileAnimation",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),u=S))||u));s._RF.pop()}}}));

System.register("chunks:///_virtual/TimelineHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t,r,i;return{setters:[function(e){n=e.asyncToGenerator,t=e.regeneratorRuntime,r=e.createForOfIteratorHelperLoose},function(e){i=e.cclegacy}],execute:function(){e("wait",(function(e){return new Promise((function(n){return setTimeout(n,e)}))})),i._RF.push({},"5d487VIxChIOa4+/vgmMhyl","TimelineHelper",void 0);e("TimelineHelper",function(){function e(){}return e.run=function(){var e=n(t().mark((function e(n,i){var u,a,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===i&&(i=0),u=r(n);case 2:if((a=u()).done){e.next=11;break}return o=a.value,e.next=6,o();case 6:if(!(i>0)){e.next=9;break}return e.next=9,this.wait(i);case 9:e.next=2;break;case 11:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}(),e.wait=function(e){return new Promise((function(n){return setTimeout(n,e)}))},e.runWithDelays=function(){var e=n(t().mark((function e(n){var i,u,a,o,c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=r(n);case 1:if((u=i()).done){e.next=10;break}return a=u.value,o=a[0],c=a[1],e.next=5,o();case 5:if(void 0===c){e.next=8;break}return e.next=8,this.wait(c);case 8:e.next=1;break;case 10:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),e}());i._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,