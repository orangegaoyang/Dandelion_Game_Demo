System.register("chunks:///_virtual/AudioHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var e,n,t,r,i,s,c,u;return{setters:[function(o){e=o.inheritsLoose},function(o){n=o.cclegacy,t=o._decorator,r=o.director,i=o.AudioSource,s=o.resources,c=o.AudioClip,u=o.Component}],execute:function(){var l,a;n._RF.push({},"2585c4z1GBJD67FFVHpfHq5","AudioHelper",void 0);var d=t.ccclass;t.property,o("AudioHelper",d("AudioHelper")(((a=function(o){function n(){for(var e,n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return(e=o.call.apply(o,[this].concat(t))||this)._bgm=void 0,e._sfx=void 0,e}e(n,o);var t=n.prototype;return t.onLoad=function(){n.instance=this,r.addPersistRootNode(this.node),this._bgm=this.node.addComponent(i),this._bgm.volume=.5,this._sfx=this.node.addComponent(i),this._sfx.volume=1},t.playBGM=function(){var o=this;s.load("Sounds/bgm",c,(function(e,n){if(e)return console.error(e);o._bgm.clip=n,o._bgm.loop=!0,o._bgm.play()}))},t.playSFX=function(o){var e=this;s.load("Sounds/"+o,c,(function(o,n){if(o)return console.error(o);e._sfx.playOneShot(n)}))},n}(u)).instance=void 0,l=a))||l);n._RF.pop()}}}));

System.register("chunks:///_virtual/BackgroundController.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,i,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.Sprite,i=t.view,c=t.Component}],execute:function(){var a;r._RF.push({},"6a130iNz3dA1J7bzQMtValq","BackgroundController",void 0);var s=o.ccclass;o.property,t("BackgroundController",s("BackgroundController")(a=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this.getComponent(n);if(t&&t.spriteFrame){var e=i.getVisibleSize(),r=t.spriteFrame.rect.width,o=t.spriteFrame.rect.height,c=e.width/r,a=e.height/o,s=Math.max(c,a);this.node.setScale(s,s)}},r}(c))||a);r._RF.pop()}}}));

System.register("chunks:///_virtual/CellState.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"61874ADHPdAnZJz7xSGitiy","CellState",void 0);e("CellState",function(e){return e[e.Empty=0]="Empty",e[e.Dandelion=1]="Dandelion",e[e.Seed=2]="Seed",e}({})),e("TileModifier",function(e){return e[e.Normal=0]="Normal",e[e.Mud=1]="Mud",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/CompassAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./IdleAnimations.ts","./EffectsHelper.ts"],(function(n){var t,e,i,r,o,a,s,c,l,u,p,f,m,d,y;return{setters:[function(n){t=n.applyDecoratedDescriptor,e=n.inheritsLoose,i=n.initializerDefineProperty,r=n.assertThisInitialized,o=n.asyncToGenerator,a=n.regeneratorRuntime},function(n){s=n.cclegacy,c=n._decorator,l=n.Node,u=n.ParticleSystem2D,p=n.tween,f=n.Component},function(n){m=n.AudioHelper},function(n){d=n.IdelAnimations},function(n){y=n.EffectsHelper}],execute:function(){var g,v,b,h,w,A,S;s._RF.push({},"c1543ts8bNFvbOQsJSx0vum","CompassAnimation",void 0);var E=c.ccclass,C=c.property;n("CompassAnimation",(g=E("CompassAnimation"),v=C(l),b=C(l),g((A=t((w=function(n){function t(){for(var t,e=arguments.length,o=new Array(e),a=0;a<e;a++)o[a]=arguments[a];return t=n.call.apply(n,[this].concat(o))||this,i(t,"pointer",A,r(t)),i(t,"windEffect",S,r(t)),t.angleMap={N:0,NE:315,E:270,SE:225,S:180,SW:135,W:90,NW:45},t.rotationOffset=0,t}e(t,n);var s=t.prototype;return s.blow=function(n){var t,e=this.windEffect.getComponent(u),i=null!=(t=this.angleMap[n])?t:0;e.angle=i+180,e.resetSystem()},s.pointAnimate=function(n){var t=this;return new Promise((function(e){var i;m.instance.playSFX("spin");var r=(null!=(i=t.angleMap[n])?i:0)+720+t.rotationOffset;t.rotationOffset+=720,d.instance.stopIdle(t.pointer),p(t.pointer).to(3,{angle:r},{easing:"cubicOut"}).call((function(){m.instance.playSFX("blowing"),d.instance.idleCompass(),e()})).start()}))},s.patchAnimate=function(){var n=o(a().mark((function n(t){return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,y.bounceScale(t);case 2:case"end":return n.stop()}}),n)})));return function(t){return n.apply(this,arguments)}}(),t}(f)).prototype,"pointer",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=t(w.prototype,"windEffect",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=w))||h));s._RF.pop()}}}));

System.register("chunks:///_virtual/CompassController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassAnimation.ts"],(function(e){var t,i,r,n,o,s,a,c,u,l,p,h,d,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized,o=e.createForOfIteratorHelperLoose,s=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,l=e.Sprite,p=e.Node,h=e.Component,d=e.director},function(e){f=e.CompassAnimation}],execute:function(){var m,v,S,b,g,D,y,C,N,w,W,x,A;c._RF.push({},"ed321HgZiBLGKDTC9/hdyVu","CompassController",void 0);var E=u.ccclass,k=u.property,z=function(e){return e[e.N=0]="N",e[e.NE=1]="NE",e[e.E=2]="E",e[e.SE=3]="SE",e[e.S=4]="S",e[e.SW=5]="SW",e[e.W=6]="W",e[e.NW=7]="NW",e}(z||{});e("CompassController",(m=E("CompassController"),v=k(f),S=k([l]),b=k(p),g=k(p),D=k(p),m((N=t((C=function(e){function t(){for(var t,i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,r(t,"compassAnimation",N,n(t)),r(t,"coverSprites",w,n(t)),r(t,"pointerNode",W,n(t)),r(t,"compass4Sprite",x,n(t)),r(t,"compass8Sprite",A,n(t)),t.directions8=[z.N,z.NE,z.E,z.SE,z.S,z.SW,z.W,z.NW],t.directions4=[z.N,z.E,z.S,z.W],t.allDirections=[],t.designedDirections=[],t.usedDirections=[],t}i(t,e);var c=t.prototype;return c.init=function(e,t){if(this.designedDirections=[],t)for(var i,r=o(t);!(i=r()).done;){var n=i.value;this.designedDirections.push(z[n])}this.pointerNode.angle=0,this.compass4Sprite.setSiblingIndex(0),this.compass8Sprite.setSiblingIndex(0),4==e?(this.compass4Sprite.active=!0,this.compass8Sprite.active=!1,this.allDirections=this.directions4):8==e&&(this.compass8Sprite.active=!0,this.compass4Sprite.active=!1,this.allDirections=this.directions8)},c.hideAllCovers=function(){for(var e,t=o(this.coverSprites);!(e=t()).done;){e.value.node.active=!1}},c.showCover=function(){var e=s(a().mark((function e(t){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!=(i=this.coverSprites[t].node).active){e.next=5;break}return i.active=!0,e.next=5,this.compassAnimation.patchAnimate(i);case 5:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.autoBlowWind=function(){var e=s(a().mark((function e(){var t,i,r,n,s,c=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=o(this.usedDirections);case 1:if((i=t()).done){e.next=7;break}return r=i.value,e.next=5,this.showCover(r);case 5:e.next=1;break;case 7:if(0!==(n=this.allDirections.filter((function(e){return!c.usedDirections.includes(e)}))).length){e.next=10;break}return e.abrupt("return");case 10:return s=z.E,s=this.usedDirections.length<this.designedDirections.length?this.designedDirections[this.usedDirections.length]:n[Math.floor(Math.random()*n.length)],this.usedDirections.push(s),e.next=15,this.compassAnimation.pointAnimate(z[s]);case 15:this.compassAnimation.blow(z[s]),d.emit("WIND_BLOW",z[s]);case 17:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.reset=function(){this.usedDirections=[],this.hideAllCovers()},t}(h)).prototype,"compassAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=t(C.prototype,"coverSprites",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),W=t(C.prototype,"pointerNode",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=t(C.prototype,"compass4Sprite",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(C.prototype,"compass8Sprite",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=C))||y));c._RF.pop()}}}));

System.register("chunks:///_virtual/Direction.ts",["cc"],(function(d){var e;return{setters:[function(d){e=d.cclegacy}],execute:function(){var t;e._RF.push({},"16eefORzrhC9JFlNqVmXGa9","Direction",void 0);var r=d("Direction",function(d){return d.N="N",d.NE="NE",d.E="E",d.SE="SE",d.S="S",d.SW="SW",d.W="W",d.NW="NW",d}({}));d("DIRECTION_OFFSETS",((t={})[r.N]={dx:0,dy:-1},t[r.NE]={dx:1,dy:-1},t[r.E]={dx:1,dy:0},t[r.SE]={dx:1,dy:1},t[r.S]={dx:0,dy:1},t[r.SW]={dx:-1,dy:1},t[r.W]={dx:-1,dy:0},t[r.NW]={dx:-1,dy:-1},t)),d("FOUR_DIRECTIONS",[r.N,r.E,r.S,r.W]);e._RF.pop()}}}));

System.register("chunks:///_virtual/EffectsHelper.ts",["cc"],(function(e){var n,t,c;return{setters:[function(e){n=e.cclegacy,t=e.Vec3,c=e.tween}],execute:function(){n._RF.push({},"07256waQwhMU6vjhrECp4MJ","EffectsHelper",void 0);e("EffectsHelper",function(){function e(){}return e.bounceScale=function(e,n){return void 0===n&&(n={}),new Promise((function(r){var u,s,i=null!=(u=n.duration)?u:.25,a=null!=(s=n.scale)?s:1.2;e.setScale(new t(.5,.5,1)),e.active=!0,c(e).to(i,{scale:new t(a,a,1)},{easing:"backOut"}).to(.1,{scale:new t(1,1,1)},{easing:"sineIn"}).call((function(){return r()})).start()}))},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(e){var o,t,n,r,i,l,a,c,s,p,u;return{setters:[function(e){o=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,l=e._decorator,a=e.Node,c=e.tween,s=e.UITransform,p=e.Component},function(e){u=e.AudioHelper}],execute:function(){var f,y,w,d,F;i._RF.push({},"53b63mRvBJHhIQccMJUmJaX","FlowerAnimation",void 0);var v=l.ccclass,m=l.property;e("FlowerAnimation",(f=v("FlowerAnimation"),y=m(a),f((F=o((d=function(e){function o(){for(var o,t=arguments.length,i=new Array(t),l=0;l<t;l++)i[l]=arguments[l];return o=e.call.apply(e,[this].concat(i))||this,n(o,"flyFlower",F,r(o)),o}return t(o,e),o.prototype.plant=function(e,o){var t=this;return new Promise((function(n){u.instance.playSFX("bubble-pop");var r=e.getWorldPosition(),i=o.getWorldPosition();t.flyFlower.active=!0,t.flyFlower.setWorldPosition(r);var l=r.clone();l.y+=10,l.x+=10,c(t.flyFlower).to(.2,{position:t.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(l)},{easing:"quadOut"}).to(.5,{position:t.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(i)},{easing:"quadInOut"}).call((function(){t.flyFlower.active=!1,n()})).start()}))},o}(p)).prototype,"flyFlower",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=d))||w));i._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./FlowerAnimation.ts","./TileController.ts","./IdleAnimations.ts"],(function(e){var n,t,r,o,i,l,a,s,c,u,f,p,w;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,o=e.assertThisInitialized,i=e.asyncToGenerator,l=e.regeneratorRuntime},function(e){a=e.cclegacy,s=e._decorator,c=e.Node,u=e.Component},function(e){f=e.FlowerAnimation},function(e){p=e.TileController},function(e){w=e.IdelAnimations}],execute:function(){var h,d,I,m,v,b,y;a._RF.push({},"cf16aSCRT1PuJqI4iQAmW4b","FlowerController",void 0);var C=s.ccclass,F=s.property;e("FlowerController",(h=C("FlowerController"),d=F(c),I=F(f),h((b=n((v=function(e){function n(){for(var n,t=arguments.length,i=new Array(t),l=0;l<t;l++)i[l]=arguments[l];return n=e.call.apply(e,[this].concat(i))||this,r(n,"flowerContainer",b,o(n)),r(n,"flowerAnimation",y,o(n)),n.flowerIcons=void 0,n._lastFlowerIndex=9,n}t(n,e);var a=n.prototype;return a.onLoad=function(){this.flowerIcons=this.flowerContainer.children},a.init=function(e){this._lastFlowerIndex=e-1;for(var n=0;n<this.flowerIcons.length;n++)this.flowerIcons[n].active=n<e,n<=e-1&&this.flowerIcons[n].active?w.instance.idleIndicator(this.flowerIcons[n]):w.instance.stopIdle(this.flowerIcons[n])},a.plant=function(){var e=i(l().mark((function e(n){var t,r;return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((t=n.getComponent(p)).isPlantable()){e.next=3;break}return e.abrupt("return",!1);case 3:return r=this.flowerIcons[this._lastFlowerIndex--],e.next=6,this.flowerAnimation.plant(r,n);case 6:return r.active=!1,w.instance.stopIdle(r),t.setFlower(),e.abrupt("return",!0);case 10:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),n}(u)).prototype,"flowerContainer",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=n(v.prototype,"flowerAnimation",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));a._RF.pop()}}}));

System.register("chunks:///_virtual/GameEnums.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"7a4afkuam5EaqgbSuhQGOgS","GameEnums",void 0);e("GamePhase",function(e){return e.Plant="plant",e.Blow="blow",e}({}));n._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlantController.ts","./ResultPopup.ts","./LevelManager.ts","./CompassController.ts","./AudioHelper.ts","./TopBoardController.ts","./InstructionController.ts","./TimelineHelper.ts"],(function(t){var e,n,r,i,o,s,a,l,u,c,h,p,f,d,m,C,g,b,w,v;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,r=t.initializerDefineProperty,i=t.assertThisInitialized,o=t.asyncToGenerator,s=t.regeneratorRuntime},function(t){a=t.cclegacy,l=t._decorator,u=t.Label,c=t.director,h=t.Component},function(t){p=t.PlantController},function(t){f=t.ResultPopup},function(t){d=t.isLastLevel,m=t.getLevelConfig},function(t){C=t.CompassController},function(t){g=t.AudioHelper},function(t){b=t.TopBoardController},function(t){w=t.InstructionController},function(t){v=t.wait}],execute:function(){var P,k,y,R,L,x,B,G,I,z,M,O,S,T,_,D;a._RF.push({},"a0000YzmrZNq6jS+N1zVPFc","GameManager",void 0);var F=l.ccclass,H=l.property,A=function(t){return t[t.Planting=0]="Planting",t[t.Blowing=1]="Blowing",t[t.GameOver=2]="GameOver",t}(A||{});t("GameManager",(P=F("GameManager"),k=H(p),y=H(b),R=H(w),L=H(u),x=H(f),B=H(C),P(((D=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return(e=t.call.apply(t,[this].concat(o))||this).currentRound=0,e.maxRounds=7,e.isClickable=!0,e.phase=A.Planting,r(e,"plantController",z,i(e)),r(e,"topBoardController",M,i(e)),r(e,"instructionController",O,i(e)),r(e,"instructionLabel",S,i(e)),r(e,"resultPopup",T,i(e)),r(e,"compassController",_,i(e)),e}n(e,t);var a=e.prototype;return a.onLoad=function(){e.instance=this,g.instance.playBGM()},a.start=function(){this.initGame(),c.on("TILE_CLICKED",this.plant,this),c.on("WIND_BLOW",this.blow,this)},a.initGame=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1"),e=m(t);this.maxRounds=e.windCount,this.topBoardController.init(t,e.windCount),this.plantController.init(e.rows,e.windCount,e.mud),this.compassController.init(e.direction,e.windSequence),this.instructionController.init(t),this.resetGame()},a.resetGame=function(){this.plantController.reset(),this.compassController.reset(),this.currentRound=0,this.enterPlantingPhase()},a.nextLevel=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1");d(t)&&(t=1),localStorage.setItem("currentLevel",(t+1).toString()),this.initGame()},a.enterPlantingPhase=function(){this.currentRound++,this.setPhase(A.Planting)},a.enterBlowingPhase=function(){this.checkMediumResult()||(this.setPhase(A.Blowing),this.compassController.autoBlowWind())},a.plant=function(){var t=o(s().mark((function t(e){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.instructionController.hide(),this.phase!=A.Planting||!this.isClickable){t.next=14;break}return this.isClickable=!1,t.next=5,this.plantController.plant(e);case 5:if(!t.sent){t.next=13;break}return t.next=9,v(1e3);case 9:this.enterBlowingPhase(),this.isClickable=!0,t.next=14;break;case 13:this.isClickable=!0;case 14:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),a.blow=function(){var t=o(s().mark((function t(e){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.phase!=A.Blowing){t.next=4;break}return t.next=3,this.plantController.blow(e);case 3:this.checkRoundResult();case 4:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),a.setPhase=function(t){switch(this.phase=t,t){case A.Planting:this.instructionLabel.string="Click on a tile to plant a dandelion";break;case A.GameOver:this.instructionLabel.string="";break;case A.Blowing:this.instructionLabel.string="Tap a direction on the compass to blow the wind"}},a.checkRoundResult=function(){var t=o(s().mark((function t(){var e;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=this.plantController.isBoardFullyCovered(),!(this.currentRound>=this.maxRounds||e)){t.next=8;break}return this.setPhase(A.GameOver),t.next=5,this.plantController.roundOver();case 5:e?this.showResult(!0):this.showResult(!1),t.next=9;break;case 8:this.enterPlantingPhase();case 9:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),a.checkMediumResult=function(){var t=this.plantController.isBoardFullyCovered();return t&&(this.setPhase(A.GameOver),this.showResult(!0)),t},a.showResult=function(){var t=o(s().mark((function t(e){var n=this;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e?this.resultPopup.show(!0,(function(){n.nextLevel()})):this.resultPopup.show(!1,(function(){n.resetGame()}));case 1:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),e}(h)).instance=void 0,z=e((I=D).prototype,"plantController",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),M=e(I.prototype,"topBoardController",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),O=e(I.prototype,"instructionController",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=e(I.prototype,"instructionLabel",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=e(I.prototype,"resultPopup",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_=e(I.prototype,"compassController",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=I))||G));a._RF.pop()}}}));

System.register("chunks:///_virtual/GridAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,n,o,r,i,a,l,c,s,d,p,u,f,y,v;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,o=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Prefab,c=e.Node,s=e.instantiate,d=e.director,p=e.UITransform,u=e.UIOpacity,f=e.tween,y=e.Vec3,v=e.Component}],execute:function(){var m,g,b,h,P,w,A;i._RF.push({},"b36e8kkMb9Mla9EpFZ/lAEs","GridAnimation",void 0);var C=a.ccclass,F=a.property;e("GridAnimation",(m=C("GridAnimation"),g=F(l),b=F(c),m((w=t((P=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return t=e.call.apply(e,[this].concat(i))||this,o(t,"seedFlyPrefab",w,r(t)),o(t,"windEffect",A,r(t)),t}return n(t,e),t.prototype.seedFly=function(e,t){var n=this;return new Promise((function(o){if(n.seedFlyPrefab){var r=s(n.seedFlyPrefab);n.node.addChild(r);var i=d.getScene().getChildByName("Canvas");i.addChild(r);var a=e.getWorldPosition(),l=t.getWorldPosition(),c=a.clone().lerp(l,.5);c.x+=80*(Math.random()-.5),c.y+=80*(Math.random()-.5),r.setWorldPosition(a);var v=i.getComponent(p).convertToNodeSpaceAR(a),m=i.getComponent(p).convertToNodeSpaceAR(c),g=i.getComponent(p).convertToNodeSpaceAR(l);r.setPosition(v);var b={value:0},h=360+360*Math.random(),P=r.getComponent(u);P&&(P.opacity=255),f(b).to(2,{value:1},{onUpdate:function(){var e=b.value,t=1-e,n=t*t*v.x+2*t*e*m.x+e*e*g.x,o=t*t*v.y+2*t*e*m.y+e*e*g.y;r.setPosition(new y(n,o,0)),r.angle=0+(h-0)*e;var i=1+(1.2-1)*e;r.setScale(new y(i,i,1)),P&&(P.opacity=255-75*e)}}).call((function(){r.destroy(),o()})).start()}}))},t}(v)).prototype,"seedFlyPrefab",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(P.prototype,"windEffect",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=P))||h));i._RF.pop()}}}));

System.register("chunks:///_virtual/GridController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileController.ts","./GridAnimation.ts","./CellState.ts"],(function(i){var e,t,r,n,o,s,l,a,d,c,u,h,f,g;return{setters:[function(i){e=i.applyDecoratedDescriptor,t=i.inheritsLoose,r=i.initializerDefineProperty,n=i.assertThisInitialized,o=i.createForOfIteratorHelperLoose},function(i){s=i.cclegacy,l=i._decorator,a=i.Prefab,d=i.instantiate,c=i.Vec3,u=i.Component},function(i){h=i.TileController},function(i){f=i.GridAnimation},function(i){g=i.TileModifier}],execute:function(){var p,S,v,m,z,C,y;s._RF.push({},"927d1nKTBBLgqY5/Ep52e2i","GridController",void 0);var b=l.ccclass,M=l.property,N={N:[-1,0],NE:[-1,1],E:[0,1],SE:[1,1],S:[1,0],SW:[1,-1],W:[0,-1],NW:[-1,-1]};i("GridController",(p=b("GridController"),S=M(a),v=M(f),p((C=e((z=function(i){function e(){for(var e,t=arguments.length,o=new Array(t),s=0;s<t;s++)o[s]=arguments[s];return(e=i.call.apply(i,[this].concat(o))||this).tileSize=100,e.spacing=2,r(e,"tilePrefab",C,n(e)),r(e,"gridAnimation",y,n(e)),e.tileNodes=[],e.gridSize=5,e}t(e,i);var s=e.prototype;return s.init=function(i,e){this.node.removeAllChildren(),this.gridSize=i;var t=this.gridSize*this.tileSize+(this.gridSize-1)*this.spacing,r=Math.min(540/t,1.8),n=-(this.gridSize*this.tileSize+(this.gridSize-1)*this.spacing)/2+this.tileSize/2,o=(this.gridSize*this.tileSize+(this.gridSize-1)*this.spacing)/2-this.tileSize/2,s=[];e&&(s=this.getRandomIndices(i,e)),console.log(s);for(var l=0;l<this.gridSize;l++){this.tileNodes[l]=[];for(var a=0;a<this.gridSize;a++){var u=d(this.tilePrefab);u.setPosition(new c(n+a*(this.tileSize+this.spacing),o-l*(this.tileSize+this.spacing),0)),this.node.setScale(r,r),this.node.addChild(u),this.tileNodes[l][a]=u;var f=u.getComponent(h),p=l*this.gridSize+a;s.includes(p)&&(console.log("add modifier mud"),f.addModifier(g.Mud)),u.getComponent(h).init(l,a)}}},s.getRandomIndices=function(i,e){for(var t=i*i,r=Array.from({length:t},(function(i,e){return e})),n=r.length-1;n>0;n--){var o=Math.floor(Math.random()*(n+1)),s=[r[o],r[n]];r[n]=s[0],r[o]=s[1]}return r.slice(0,e)},s.reset=function(){for(var i=0;i<this.gridSize;i++)for(var e=0;e<this.gridSize;e++){this.tileNodes[i][e].getComponent(h).setEmpty()}},s.spawnMuds=function(i){for(var e=0;e<i;e++){this.tileNodes[Math.floor(100*Math.random())%this.gridSize][Math.floor(100*Math.random())%this.gridSize].getComponent(h).setEmpty()}},s.roundOver=function(){var i=this;return new Promise((function(e){for(var t=1,r=0;r<i.gridSize;r++)for(var n=function(){var e=i.tileNodes[r][o].getComponent(h);e.isSeed()&&(i.scheduleOnce((function(){e.setFinalFlower()}),.3*t),t++)},o=0;o<i.gridSize;o++)n();i.scheduleOnce((function(){e()}),.3*t+1)}))},s.blowSeeds=function(i){var e=this;return new Promise((function(t){for(var r=[],n=N[i],o=n[0],s=n[1],l=0;l<e.gridSize;l++)for(var a=0;a<e.gridSize;a++){var d=e.tileNodes[l][a].getComponent(h);if(d.isFlower())for(var c=l+o,u=a+s,f=function(){var i=e.tileNodes[c][u].getComponent(h);if(i.canHoldSeed()){var t=e.gridAnimation.seedFly(d.node,i.node).then((function(){i.setSeed()}));r.push(t)}c+=o,u+=s};e.inBounds(c,u);)f()}0===r.length?t():Promise.all(r).then((function(){t()}))}))},s.inBounds=function(i,e){return i>=0&&i<this.gridSize&&e>=0&&e<this.gridSize},s.isBoardFullyCovered=function(){for(var i,e=o(this.tileNodes);!(i=e()).done;)for(var t,r=i.value,n=o(r);!(t=n()).done;){if(t.value.getComponent(h).isEmpty())return!1}return!0},e}(u)).prototype,"tilePrefab",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=e(z.prototype,"gridAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=z))||m));s._RF.pop()}}}));

System.register("chunks:///_virtual/IdleAnimations.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,i,t,o,r,s,a,l,u,c;return{setters:[function(e){n=e.applyDecoratedDescriptor,i=e.inheritsLoose,t=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,s=e._decorator,a=e.Node,l=e.tween,u=e.Vec3,c=e.Component}],execute:function(){var p,d,y,f,g,b,I,h;r._RF.push({},"cdd78pOz89KMKUEUB7o2RDu","IdleAnimations",void 0);var v=s.ccclass,w=s.property;e("IdelAnimations",(p=v("IdelAnimations"),d=w(a),y=w(a),p(((h=function(e){function n(){for(var n,i=arguments.length,r=new Array(i),s=0;s<i;s++)r[s]=arguments[s];return n=e.call.apply(e,[this].concat(r))||this,t(n,"cloudFace",b,o(n)),t(n,"pointer",I,o(n)),n}i(n,e);var r=n.prototype;return r.onLoad=function(){n.instance=this,this.idleCloud(),this.idleCompass()},r.idleCloud=function(){this.cloudFace&&l(this.cloudFace).repeatForever(l().by(3,{position:new u(20,0,0)},{easing:"sineInOut"}).by(3,{position:new u(-20,0,0)},{easing:"sineInOut"})).start()},r.idleCompass=function(){this.pointer&&l(this.pointer).repeatForever(l().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},r.stopIdle=function(e){l(e).stop()},r.idleIndicator=function(e){var n=Math.random();l(e).delay(n).repeatForever(l().by(1,{position:new u(0,5,0)},{easing:"sineInOut"}).by(1,{position:new u(0,-5,0)},{easing:"sineInOut"})).start()},r.idleTileFlower=function(e){l(e).repeatForever(l().by(1.4,{position:new u(0,4,0)},{easing:"sineInOut"}).by(1.4,{position:new u(0,-4,0)},{easing:"sineInOut"})).start()},r.idleTileSeed=function(e){l(e).repeatForever(l().by(2,{position:new u(0,3,0)},{easing:"sineInOut"}).by(2,{position:new u(0,-3,0)},{easing:"sineInOut"})).start()},n}(c)).instance=void 0,b=n((g=h).prototype,"cloudFace",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=n(g.prototype,"pointer",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=g))||f));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var n,e,i,o,r,a,s,c,u,p,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,i=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,s=t.Node,c=t.tween,u=t.UIOpacity,p=t.Vec3,l=t.Component}],execute:function(){var f,g,d,h,y;r._RF.push({},"809d6F3gqxDZK/7JbNVkEZN","InstructionAnimation",void 0);var v=a.ccclass,N=a.property;t("InstructionAnimation",(f=v("InstructionAnimation"),g=N(s),f((y=n((h=function(t){function n(){for(var n,e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return n=t.call.apply(t,[this].concat(r))||this,i(n,"fingerNode",y,o(n)),n}e(n,t);var r=n.prototype;return r.hideFinger=function(){var t=this;c(this.fingerNode).stop(),c(this.fingerNode.getComponent(u)).to(.3,{opacity:0}).call((function(){return t.fingerNode.active=!1})).start()},r.idleFinger=function(){var t=this.fingerNode.position;this.fingerNode.active=!0,c(this.fingerNode).repeatForever(c().to(.4,{position:new p(t.x,t.y-15)},{easing:"sineInOut"}).to(.4,{position:new p(t.x,t.y)},{easing:"sineInOut"})).start()},n}(l)).prototype,"fingerNode",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=h))||d));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./InstructionAnimation.ts"],(function(t){var n,i,o,r,e,a,c,s;return{setters:[function(t){n=t.applyDecoratedDescriptor,i=t.inheritsLoose,o=t.initializerDefineProperty,r=t.assertThisInitialized},function(t){e=t.cclegacy,a=t._decorator,c=t.Component},function(t){s=t.InstructionAnimation}],execute:function(){var l,u,p,h,f;e._RF.push({},"a8b3dhBlYNIYKU91I5oB63w","InstructionController",void 0);var d=a.ccclass,v=a.property;t("InstructionController",(l=d("InstructionController"),u=v(s),l((f=n((h=function(t){function n(){for(var n,i=arguments.length,e=new Array(i),a=0;a<i;a++)e[a]=arguments[a];return n=t.call.apply(t,[this].concat(e))||this,o(n,"animation",f,r(n)),n}i(n,t);var e=n.prototype;return e.start=function(){this.node.active=!1},e.hide=function(){this.animation.hideFinger()},e.init=function(t){1!=t?this.node.active=!1:(this.node.active=!0,this.animation.idleFinger())},n}(c)).prototype,"animation",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),p=h))||p));e._RF.pop()}}}));

System.register("chunks:///_virtual/LevelManager.ts",["cc"],(function(n){var e;return{setters:[function(n){e=n.cclegacy}],execute:function(){n({getLevelConfig:function(n){return i[Math.min(n-1,i.length-1)]},isLastLevel:function(n){return n>=i.length}}),e._RF.push({},"0135eEnWntLcpY2ffWv6jeY","LevelManager",void 0);var i=n("LevelConfigs",[{rows:2,windCount:3,direction:4,windSequence:["W"]},{rows:2,windCount:2,direction:4,windSequence:["W","E"]},{rows:4,windCount:6,direction:8},{rows:5,windCount:6,direction:8},{rows:5,windCount:6,direction:8,mud:1},{rows:5,windCount:6,direction:8,mud:2},{rows:5,windCount:6,direction:8,mud:3},{rows:5,windCount:6,direction:8,mud:4},{rows:5,windCount:6,direction:8,mud:5}]);e._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./TileAnimation.ts","./TileController.ts","./TileController_Thomas.ts","./CellState.ts","./Direction.ts","./GameEnums.ts","./EffectsHelper.ts","./OneShotParticle.ts","./BackgroundController.ts","./CompassController.ts","./FlowerController.ts","./GridController.ts","./InstructionController.ts","./PlantController.ts","./ResultPopup.ts","./TopBoardController.ts","./CompassAnimation.ts","./FlowerAnimation.ts","./GridAnimation.ts","./IdleAnimations.ts","./InstructionAnimation.ts","./ResultPopupAnimation.ts","./TopBoardAnimation.ts","./GameManager.ts","./LevelManager.ts","./SceneSwitchAnimation.ts","./StartManager.ts","./WindStrategy.ts","./AudioHelper.ts","./TimelineHelper.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/OneShotParticle.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.ParticleSystem2D,c=t.Component}],execute:function(){var i;r._RF.push({},"2a606wOyVpItYUnzW74HPaB","OneShotParticle",void 0);var s=o.ccclass;o.property,t("VictoryParticle",s("VictoryParticle")(i=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this,e=this.getComponent(n);e&&e.resetSystem(),setTimeout((function(){t.node.destroy()}),4e3)},r}(c))||i);r._RF.pop()}}}));

System.register("chunks:///_virtual/PlantController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridController.ts","./FlowerController.ts"],(function(r){var t,n,e,o,i,l,u,c,a,s,p;return{setters:[function(r){t=r.applyDecoratedDescriptor,n=r.inheritsLoose,e=r.initializerDefineProperty,o=r.assertThisInitialized,i=r.asyncToGenerator,l=r.regeneratorRuntime},function(r){u=r.cclegacy,c=r._decorator,a=r.Component},function(r){s=r.GridController},function(r){p=r.FlowerController}],execute:function(){var f,h,d,C,v,w,y;u._RF.push({},"856dcU59lJIR7+xm/FGgHiW","PlantController",void 0);var g=c.ccclass,b=c.property;r("PlantController",(f=g("PlantController"),h=b(p),d=b(s),f((w=t((v=function(r){function t(){for(var t,n=arguments.length,i=new Array(n),l=0;l<n;l++)i[l]=arguments[l];return t=r.call.apply(r,[this].concat(i))||this,e(t,"flowerController",w,o(t)),e(t,"gridController",y,o(t)),t.count=0,t.currentCount=0,t}n(t,r);var u=t.prototype;return u.init=function(r,t,n){this.count=t,this.flowerController.init(t),this.gridController.init(r,n)},u.reset=function(){this.flowerController.init(this.count),this.gridController.reset()},u.plant=function(){var r=i(l().mark((function r(t){var n;return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.flowerController.plant(t);case 2:return(n=r.sent)&&this.currentCount--,r.abrupt("return",n);case 5:case"end":return r.stop()}}),r,this)})));return function(t){return r.apply(this,arguments)}}(),u.blow=function(){var r=i(l().mark((function r(t){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.gridController.blowSeeds(t);case 2:case"end":return r.stop()}}),r,this)})));return function(t){return r.apply(this,arguments)}}(),u.roundOver=function(){var r=i(l().mark((function r(){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.gridController.roundOver();case 2:case"end":return r.stop()}}),r,this)})));return function(){return r.apply(this,arguments)}}(),u.isBoardFullyCovered=function(){return this.gridController.isBoardFullyCovered()},t}(a)).prototype,"flowerController",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=t(v.prototype,"gridController",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=v))||C));u._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopup.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupAnimation.ts"],(function(t){var e,n,i,r,o,a,s,u,l,c,p,h,f;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized,o=t.asyncToGenerator,a=t.regeneratorRuntime},function(t){s=t.cclegacy,u=t._decorator,l=t.Label,c=t.Button,p=t.Node,h=t.Component},function(t){f=t.ResultPopupAnimation}],execute:function(){var b,d,R,m,y,g,v,L,w;s._RF.push({},"67522KS9wNPBaNKMCQj6MEU","ResultPopup",void 0);var E=u.ccclass,P=u.property;t("ResultPopup",(b=E("ResultPopup"),d=P(l),R=P(c),m=P(f),b((v=e((g=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"titleLabel",v,r(e)),i(e,"restartButton",L,r(e)),i(e,"animation",w,r(e)),e._onRestart=null,e}n(e,t);var s=e.prototype;return s.start=function(){this.node.active=!1,this.restartButton.node.on(p.EventType.TOUCH_START,this.endShow,this)},s.endShow=function(){this.node.active=!1,this._onRestart&&this._onRestart()},s.show=function(){var t=o(a().mark((function t(e,n){var i,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i=this.restartButton.node.getChildByName("Label"),r=null==i?void 0:i.getComponent(l),this._onRestart=n,!e){t.next=10;break}return this.titleLabel.string="YOU WIN!",r.string="NEXT LEVEL",t.next=8,this.animation.showWin(this.node);case 8:t.next=14;break;case 10:return this.titleLabel.string="LEVEL FAILED",r.string="RETRY",t.next=14,this.animation.showLose(this.node);case 14:case"end":return t.stop()}}),t,this)})));return function(e,n){return t.apply(this,arguments)}}(),e}(h)).prototype,"titleLabel",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(g.prototype,"restartButton",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=e(g.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=g))||y));s._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./TimelineHelper.ts","./EffectsHelper.ts"],(function(e){var t,n,r,i,o,a,c,u,s,p,l,f,h,d,y;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,s=e.Prefab,p=e.sp,l=e.instantiate,f=e.Component},function(e){h=e.AudioHelper},function(e){d=e.wait},function(e){y=e.EffectsHelper}],execute:function(){var P,v,b,m,w,g,R;c._RF.push({},"50650YKPRlHZKhjTHtXKRcC","ResultPopupAnimation",void 0);var k=u.ccclass,x=u.property;e("ResultPopupAnimation",(P=k("ResultPopupAnimation"),v=x(s),b=x(p.Skeleton),P((g=t((w=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"victoryParticlePrefab",g,i(t)),r(t,"backgroundSpine",R,i(t)),t}n(t,e);var c=t.prototype;return c.showWin=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.showVictoryParticles(),h.instance.playSFX("tadaa"),e.next=4,d(1500);case 4:return t.active=!0,this.backgroundSpine.setAnimation(0,"thomasHedgedogWin",!0),e.next=8,this.popupResultPanel(t);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showLose=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h.instance.playSFX("lose"),e.next=3,d(1500);case 3:return t.active=!0,this.backgroundSpine.setAnimation(0,"fail",!1),e.next=7,this.popupResultPanel(t);case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showVictoryParticles=function(){var e=l(this.victoryParticlePrefab);e.setPosition(0,0),this.node.addChild(e)},c.popupResultPanel=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y.bounceScale(t);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),t}(f)).prototype,"victoryParticlePrefab",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(w.prototype,"backgroundSpine",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=w))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/SceneSwitchAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(t){var e,n,o,i,r,a,c,u,s,l,p,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,o=t.initializerDefineProperty,i=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,c=t.Node,u=t.UIOpacity,s=t.tween,l=t.Vec3,p=t.Component},function(t){d=t.AudioHelper}],execute:function(){var f,h,m,y,w;r._RF.push({},"ad974rHdelF87WmmoGkUViU","SceneSwitchAnimation",void 0);var S=a.ccclass,v=a.property;t("SceneSwitchAnimation",(f=S("SceneSwitchAnimation"),h=v(c),f((w=e((y=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r))||this,o(e,"rootNode",w,i(e)),e}n(e,t);var r=e.prototype;return r.start=function(){},r.update=function(t){},r.switch=function(){var t=this;return new Promise((function(e){d.instance.playSFX("swish");var n=t.rootNode.getComponent(u);n||(n=t.rootNode.addComponent(u)),s(t.rootNode).to(.5,{scale:new l(.3,.3,1)},{easing:"quadInOut"}).start(),s(n).to(.5,{opacity:0},{easing:"quadInOut"}).call((function(){e()})).start()}))},e}(p)).prototype,"rootNode",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=y))||m));r._RF.pop()}}}));

System.register("chunks:///_virtual/StartManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SceneSwitchAnimation.ts"],(function(e){var n,t,r,i,a,o,c,s,u,l,p,f,h;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,a=e.asyncToGenerator,o=e.regeneratorRuntime},function(e){c=e.cclegacy,s=e._decorator,u=e.view,l=e.ResolutionPolicy,p=e.Component,f=e.director},function(e){h=e.SceneSwitchAnimation}],execute:function(){var S,d,g,m,y;c._RF.push({},"b7820Ibl8lE8a/m7g4FqHbp","StartManager",void 0);var v=s.ccclass,w=s.property;e("StartManager",(S=v("StartManager"),d=w(h),S((y=n((m=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return n=e.call.apply(e,[this].concat(a))||this,r(n,"sceneAnimation",y,i(n)),n}t(n,e);var c=n.prototype;return c.start=function(){},c.onLoad=function(){u.setDesignResolutionSize(1280,720,l.SHOW_ALL),u.resizeWithBrowserSize(!0)},c.update=function(e){},c.onStartGame=function(){var e=a(o().mark((function e(){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.sceneAnimation.switch();case 2:f.loadScene("dandelion");case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),n}(p)).prototype,"sceneAnimation",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=m))||g));c._RF.pop()}}}));

System.register("chunks:///_virtual/TileAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,r,o,i,c,s,u;return{setters:[function(e){n=e.inheritsLoose,t=e.asyncToGenerator,r=e.regeneratorRuntime},function(e){o=e.cclegacy,i=e._decorator,c=e.Component},function(e){s=e.AudioHelper},function(e){u=e.EffectsHelper}],execute:function(){var a;o._RF.push({},"773624mcfpELo13mt1ts7jO","TileAnimation",void 0);var p=i.ccclass;i.property,e("TileAnimation",p("TileAnimation")(a=function(e){function o(){return e.apply(this,arguments)||this}return n(o,e),o.prototype.switchToFlower=function(){var e=t(r().mark((function e(n){return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s.instance.playSFX("sparkle"),e.next=3,u.bounceScale(n);case 3:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o}(c))||a);o._RF.pop()}}}));

System.register("chunks:///_virtual/TileController_Thomas.ts",["cc"],(function(){var e;return{setters:[function(o){e=o.cclegacy}],execute:function(){e._RF.push({},"86427KO3S1LyK7oJzopwv8e","TileController_Thomas",void 0),e._RF.pop()}}}));

System.register("chunks:///_virtual/TileController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileAnimation.ts","./CellState.ts"],(function(e){var t,i,o,s,n,a,d,r,l,h,p,u;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,o=e.initializerDefineProperty,s=e.assertThisInitialized},function(e){n=e.cclegacy,a=e._decorator,d=e.Node,r=e.director,l=e.Component},function(e){h=e.TileAnimation},function(e){p=e.CellState,u=e.TileModifier}],execute:function(){var c,f,m,S,N;n._RF.push({},"c0f27p3AoRMq76p18EoW8hV","TileController",void 0);var y=a.ccclass,v=a.property;e("TileController",(c=y("TileController"),f=v(h),c((N=t((S=function(e){function t(){for(var t,i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return t=e.call.apply(e,[this].concat(n))||this,o(t,"tileAnimation",N,s(t)),t.state=p.Empty,t.modifiers=new Set,t.maskSpriteNode=null,t.flowerSpriteNode=null,t.seedSpriteNode=null,t.dandelionSpriteNode=null,t.mudSpriteNode=null,t.emptySpriteNode=null,t}i(t,e);var n=t.prototype;return n.onLoad=function(){this.maskSpriteNode=this.node.getChildByName("MaskSprite"),this.flowerSpriteNode=this.node.getChildByName("FlowerNode"),this.seedSpriteNode=this.node.getChildByName("SeedNode"),this.dandelionSpriteNode=this.node.getChildByName("DandelionNode"),this.mudSpriteNode=this.node.getChildByName("MudNode"),this.emptySpriteNode=this.node.getChildByName("EmptySprite"),this.state=p.Empty,this.updateBaseTile()},n.addModifier=function(e){this.modifiers.add(e),this.updateBaseTile()},n.removeModifier=function(e){this.modifiers.delete(e),this.updateBaseTile()},n.hasModifier=function(e){return this.modifiers.has(e)},n.clearModifiers=function(){this.modifiers.clear(),this.updateBaseTile()},n.isPlantable=function(){return!(this.state===p.Dandelion||this.hasModifier(u.Mud))},n.canHoldSeed=function(){return this.state===p.Empty||this.state===p.Seed||this.hasModifier(u.Mud)},n.init=function(e,t){this.node.on(d.EventType.TOUCH_END,this.onClick,this)},n.onClick=function(){this.state!==p.Empty&&this.state!==p.Seed||r.emit("TILE_CLICKED",this.node)},n.updateBaseTile=function(){this.hasModifier(u.Mud)?(this.emptySpriteNode.active=!1,this.mudSpriteNode.active=!0):(this.emptySpriteNode.active=!0,this.mudSpriteNode.active=!1)},n.updateVisual=function(){switch(this.maskSpriteNode.active=!1,this.flowerSpriteNode.active=!1,this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!1,this.state){case p.Empty:this.maskSpriteNode.active=!1;break;case p.Dandelion:this.maskSpriteNode.active=!0,this.dandelionSpriteNode.active=!0;break;case p.Seed:this.seedSpriteNode.active=!0}},n.setFlower=function(){this.isPlantable()&&(this.state=p.Dandelion,this.updateVisual())},n.setSeed=function(){this.canHoldSeed()&&(this.state=p.Seed,this.updateVisual())},n.setEmpty=function(){this.state=p.Empty,this.updateVisual()},n.setFinalFlower=function(){this.seedSpriteNode.active=!1,this.maskSpriteNode.active=!0,this.dandelionSpriteNode.active=!0,this.tileAnimation.switchToFlower(this.node)},n.isFlower=function(){return this.state==p.Dandelion},n.isEmpty=function(){return this.state==p.Empty},n.isSeed=function(){return this.state==p.Seed},t}(l)).prototype,"tileAnimation",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=S))||m));n._RF.pop()}}}));

System.register("chunks:///_virtual/TimelineHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t,r,i;return{setters:[function(e){n=e.asyncToGenerator,t=e.regeneratorRuntime,r=e.createForOfIteratorHelperLoose},function(e){i=e.cclegacy}],execute:function(){e("wait",(function(e){return new Promise((function(n){return setTimeout(n,e)}))})),i._RF.push({},"5d487VIxChIOa4+/vgmMhyl","TimelineHelper",void 0);e("TimelineHelper",function(){function e(){}return e.run=function(){var e=n(t().mark((function e(n,i){var u,a,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===i&&(i=0),u=r(n);case 2:if((a=u()).done){e.next=11;break}return o=a.value,e.next=6,o();case 6:if(!(i>0)){e.next=9;break}return e.next=9,this.wait(i);case 9:e.next=2;break;case 11:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}(),e.wait=function(e){return new Promise((function(n){return setTimeout(n,e)}))},e.runWithDelays=function(){var e=n(t().mark((function e(n){var i,u,a,o,c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=r(n);case 1:if((u=i()).done){e.next=10;break}return a=u.value,o=a[0],c=a[1],e.next=5,o();case 5:if(void 0===c){e.next=8;break}return e.next=8,this.wait(c);case 8:e.next=1;break;case 10:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),e}());i._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TimelineHelper.ts","./AudioHelper.ts"],(function(e){var n,t,r,i,a,o,c,l,s,u,p,h,d,f;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,a=e.asyncToGenerator,o=e.regeneratorRuntime},function(e){c=e.cclegacy,l=e._decorator,s=e.Node,u=e.tween,p=e.Vec3,h=e.Component},function(e){d=e.wait},function(e){f=e.AudioHelper}],execute:function(){var g,y,m,v,w;c._RF.push({},"b66f4u1kghK8bQ4VIqpz/gx","TopBoardAnimation",void 0);var A=l.ccclass,T=l.property;e("TopBoardAnimation",(g=A("TopBoardAnimation"),y=T(s),g((w=n((v=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return n=e.call.apply(e,[this].concat(a))||this,r(n,"challengeNode",w,i(n)),n}t(n,e);var c=n.prototype;return c.start=function(){},c.showChallenge=function(){var e=a(o().mark((function e(){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f.instance.playSFX("paper-rip"),u(this.challengeNode).to(1,{scale:new p(1,1,1)},{easing:"quadOut"}).start(),e.next=4,d(3e3);case 4:this.hideChallenge();case 5:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.hideChallenge=function(){f.instance.playSFX("paper-collect"),u(this.challengeNode).to(1,{scale:new p(1,0,1)},{easing:"quadIn"}).start()},n}(h)).prototype,"challengeNode",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TopBoardAnimation.ts"],(function(e){var n,t,o,l,i,r,a,c,s,h,u,p;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,o=e.initializerDefineProperty,l=e.assertThisInitialized},function(e){i=e.cclegacy,r=e._decorator,a=e.Node,c=e.Label,s=e.UITransform,h=e.Vec3,u=e.Component},function(e){p=e.TopBoardAnimation}],execute:function(){var g,d,b,f,m,v,y,C,T,w,L;i._RF.push({},"3b4abkQmoRHdrp1eMH60YjY","TopBoardController",void 0);var N=r.ccclass,B=r.property;e("TopBoardController",(g=N("TopBoardController"),d=B(a),b=B(c),f=B(c),m=B(p),g((C=n((y=function(e){function n(){for(var n,t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=arguments[r];return(n=e.call.apply(e,[this].concat(i))||this).level=0,o(n,"challengeNode",C,l(n)),o(n,"levelLabel",T,l(n)),o(n,"challengeLabel",w,l(n)),o(n,"animation",L,l(n)),n}t(n,e);var i=n.prototype;return i.start=function(){var e=this.node.getComponent(s).convertToWorldSpaceAR(h.ZERO),n=this.node.getComponent(s).height,t=this.challengeNode.getComponent(s).convertToNodeSpaceAR(e);this.challengeNode.getComponent(s).height;this.challengeNode.setPosition(t.x,t.y-n/2+22),this.challengeNode.setScale(new h(1,0,1)),this.node.on(a.EventType.TOUCH_END,this.showChallenge,this)},i.init=function(e,n){this.levelLabel.string=e.toString(),this.challengeLabel.string="only "+n+" moves!",e>1&&this.showChallenge()},i.showChallenge=function(){this.animation.showChallenge()},i.update=function(e){},n}(u)).prototype,"challengeNode",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=n(y.prototype,"levelLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=n(y.prototype,"challengeLabel",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=n(y.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=y))||v));i._RF.pop()}}}));

System.register("chunks:///_virtual/WindStrategy.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Direction.ts"],(function(t){var e,n,r,i,o;return{setters:[function(t){e=t.createForOfIteratorHelperLoose},function(t){n=t.cclegacy},function(t){r=t.Direction,i=t.FOUR_DIRECTIONS,o=t.DIRECTION_OFFSETS}],execute:function(){n._RF.push({},"54b126FrOFCc7OqLLLq/8jt","WindStrategy",void 0);t("WindStrategy",function(){function t(){}return t.getBestWindDirection=function(t,n,c){for(var u,s=r.N,a=-1,f=e(i);!(u=f()).done;){for(var l=u.value,d=o[l],g=d.dx,F=d.dy,p=n+g,y=c+F,O=0;p>=0&&p<t.length&&y>=0&&y<t.length;)t[y][p].isEmpty()&&O++,p+=g,y+=F;O>a&&(a=O,s=l)}return s},t}());n._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,