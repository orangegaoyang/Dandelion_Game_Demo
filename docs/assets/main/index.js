System.register("chunks:///_virtual/AudioHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var e,n,t,r,i,s,c,u;return{setters:[function(o){e=o.inheritsLoose},function(o){n=o.cclegacy,t=o._decorator,r=o.director,i=o.AudioSource,s=o.resources,c=o.AudioClip,u=o.Component}],execute:function(){var l,a;n._RF.push({},"2585c4z1GBJD67FFVHpfHq5","AudioHelper",void 0);var d=t.ccclass;t.property,o("AudioHelper",d("AudioHelper")(((a=function(o){function n(){for(var e,n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return(e=o.call.apply(o,[this].concat(t))||this)._bgm=void 0,e._sfx=void 0,e}e(n,o);var t=n.prototype;return t.onLoad=function(){n.instance=this,r.addPersistRootNode(this.node),this._bgm=this.node.addComponent(i),this._bgm.volume=.5,this._sfx=this.node.addComponent(i),this._sfx.volume=1},t.playBGM=function(){var o=this;s.load("Sounds/bgm",c,(function(e,n){if(e)return console.error(e);o._bgm.clip=n,o._bgm.loop=!0,o._bgm.play()}))},t.playSFX=function(o){var e=this;s.load("Sounds/"+o,c,(function(o,n){if(o)return console.error(o);e._sfx.playOneShot(n)}))},n}(u)).instance=void 0,l=a))||l);n._RF.pop()}}}));

System.register("chunks:///_virtual/BackgroundController.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,i,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.Sprite,i=t.view,c=t.Component}],execute:function(){var a;r._RF.push({},"6a130iNz3dA1J7bzQMtValq","BackgroundController",void 0);var s=o.ccclass;o.property,t("BackgroundController",s("BackgroundController")(a=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this.getComponent(n);if(t&&t.spriteFrame){var e=i.getVisibleSize(),r=t.spriteFrame.rect.width,o=t.spriteFrame.rect.height,c=e.width/r,a=e.height/o,s=Math.max(c,a);this.node.setScale(s,s)}},r}(c))||a);r._RF.pop()}}}));

System.register("chunks:///_virtual/CellState.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"61874ADHPdAnZJz7xSGitiy","CellState",void 0);e("CellState",function(e){return e[e.Empty=0]="Empty",e[e.Dandelion=1]="Dandelion",e[e.Seed=2]="Seed",e}({})),e("TileModifier",function(e){return e[e.Normal=1]="Normal",e[e.Mud=2]="Mud",e[e.Grass=3]="Grass",e[e.Rock=4]="Rock",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/CompassAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,i,r,o,a,s,c,l,p,u,f,m,g;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){s=e.cclegacy,c=e._decorator,l=e.Node,p=e.ParticleSystem2D,u=e.tween,f=e.Component},function(e){m=e.AudioHelper},function(e){g=e.EffectsHelper}],execute:function(){var y,d,v,b,h,w,S;s._RF.push({},"c1543ts8bNFvbOQsJSx0vum","CompassAnimation",void 0);var A=c.ccclass,C=c.property;e("CompassAnimation",(y=A("CompassAnimation"),d=C(l),v=C(l),y((w=n((h=function(e){function n(){for(var n,t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];return n=e.call.apply(e,[this].concat(o))||this,i(n,"pointer",w,r(n)),i(n,"windEffect",S,r(n)),n.angleMap={N:0,NE:315,E:270,SE:225,S:180,SW:135,W:90,NW:45},n.rotationOffset=0,n}t(n,e);var s=n.prototype;return s.blow=function(e){var n,t=this.windEffect.getComponent(p),i=null!=(n=this.angleMap[e])?n:0;t.angle=i+180,t.resetSystem()},s.stopIdle=function(e){u(e).stop()},s.idleCompass=function(){this.pointer&&u(this.pointer).repeatForever(u().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},s.pointAnimate=function(e){var n=this;return new Promise((function(t){var i;m.instance.playSFX("spin");var r=(null!=(i=n.angleMap[e])?i:0)+720+n.rotationOffset;n.rotationOffset+=720,n.stopIdle(n.pointer),u(n.pointer).to(3,{angle:r},{easing:"cubicOut"}).call((function(){m.instance.playSFX("blowing"),n.idleCompass(),t()})).start()}))},s.patchAnimate=function(){var e=o(a().mark((function e(n){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g.bounceScale(n);case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),n}(f)).prototype,"pointer",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=n(h.prototype,"windEffect",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=h))||b));s._RF.pop()}}}));

System.register("chunks:///_virtual/CompassController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassView.ts"],(function(e){var r,t,n,i,o,s,a,c,l,u;return{setters:[function(e){r=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,s=e.regeneratorRuntime},function(e){a=e.cclegacy,c=e._decorator,l=e.Component},function(e){u=e.CompassView}],execute:function(){var p,f,v,h,w;a._RF.push({},"ae7c7YrzmRKA5Za+aea/vDG","CompassController",void 0);var m=c.ccclass,y=c.property;e("CompassController",(p=m("CompassController"),f=y(u),p((w=r((h=function(e){function r(){for(var r,t=arguments.length,o=new Array(t),s=0;s<t;s++)o[s]=arguments[s];return r=e.call.apply(e,[this].concat(o))||this,n(r,"view",w,i(r)),r}t(r,e);var a=r.prototype;return a.init=function(e){this.view&&this.view.init(e)},a.reset=function(){this.view.reset()},a.blowWind=function(){var e=o(s().mark((function e(r){var t;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,null==(t=this.view)?void 0:t.blowWind(r);case 2:case"end":return e.stop()}}),e,this)})));return function(r){return e.apply(this,arguments)}}(),r}(l)).prototype,"view",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=h))||v));a._RF.pop()}}}));

System.register("chunks:///_virtual/CompassView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassAnimation.ts","./Direction.ts"],(function(e){var t,i,r,n,o,s,a,c,p,u,l,m,f,h;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized,o=e.createForOfIteratorHelperLoose,s=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,p=e._decorator,u=e.Sprite,l=e.Node,m=e.Component},function(e){f=e.CompassAnimation},function(e){h=e.Direction}],execute:function(){var v,b,d,w,S,y,g,A,C,x,z,D,V;c._RF.push({},"ed321HgZiBLGKDTC9/hdyVu","CompassView",void 0);var k=p.ccclass,I=p.property;e("CompassView",(v=k("CompassView"),b=I(f),d=I([u]),w=I(l),S=I(l),y=I(l),v((C=t((A=function(e){function t(){for(var t,i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,r(t,"compassAnimation",C,n(t)),r(t,"coverSprites",x,n(t)),r(t,"pointerNode",z,n(t)),r(t,"compass4Sprite",D,n(t)),r(t,"compass8Sprite",V,n(t)),t}i(t,e);var c=t.prototype;return c.init=function(e){this.reset(),this.compass4Sprite.setSiblingIndex(0),this.compass8Sprite.setSiblingIndex(0),4==e?(this.compass4Sprite.active=!0,this.compass8Sprite.active=!1):(this.compass8Sprite.active=!0,this.compass4Sprite.active=!1)},c.hideAllCovers=function(){for(var e,t=o(this.coverSprites);!(e=t()).done;){e.value.node.active=!1}},c.showCover=function(){var e=s(a().mark((function e(t){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!=(i=this.coverSprites[t].node).active){e.next=5;break}return i.active=!0,e.next=5,this.compassAnimation.patchAnimate(i);case 5:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.blowWind=function(){var e=s(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.compassAnimation.pointAnimate(h[t]);case 2:return this.compassAnimation.blow(h[t]),e.next=5,this.showCover(t);case 5:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.reset=function(){this.pointerNode.angle=0,this.hideAllCovers()},t}(m)).prototype,"compassAnimation",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=t(A.prototype,"coverSprites",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),z=t(A.prototype,"pointerNode",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),D=t(A.prototype,"compass4Sprite",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V=t(A.prototype,"compass8Sprite",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=A))||g));c._RF.pop()}}}));

System.register("chunks:///_virtual/Direction.ts",["cc"],(function(E){var S;return{setters:[function(E){S=E.cclegacy}],execute:function(){var d;S._RF.push({},"16eefORzrhC9JFlNqVmXGa9","Direction",void 0);var N=E("Direction",function(E){return E[E.N=0]="N",E[E.NE=1]="NE",E[E.E=2]="E",E[E.SE=3]="SE",E[E.S=4]="S",E[E.SW=5]="SW",E[E.W=6]="W",E[E.NW=7]="NW",E}({}));E("DIRECTION_OFFSETS",((d={})[N.N]={dx:-1,dy:0},d[N.NE]={dx:-1,dy:1},d[N.E]={dx:0,dy:1},d[N.SE]={dx:1,dy:1},d[N.S]={dx:1,dy:0},d[N.SW]={dx:1,dy:-1},d[N.W]={dx:0,dy:-1},d[N.NW]={dx:-1,dy:-1},d)),E("FOUR_DIRECTIONS",[N.N,N.E,N.S,N.W]),E("EIGHT_DIRECTIONS",[N.N,N.NE,N.E,N.SE,N.S,N.SW,N.W,N.NW]);S._RF.pop()}}}));

System.register("chunks:///_virtual/EffectsHelper.ts",["cc"],(function(e){var n,t,c;return{setters:[function(e){n=e.cclegacy,t=e.Vec3,c=e.tween}],execute:function(){n._RF.push({},"07256waQwhMU6vjhrECp4MJ","EffectsHelper",void 0);e("EffectsHelper",function(){function e(){}return e.bounceScale=function(e,n){return void 0===n&&(n={}),new Promise((function(r){var u,s,i=null!=(u=n.duration)?u:.25,a=null!=(s=n.scale)?s:1.2;e.setScale(new t(.5,.5,1)),e.active=!0,c(e).to(i,{scale:new t(a,a,1)},{easing:"backOut"}).to(.1,{scale:new t(1,1,1)},{easing:"sineIn"}).call((function(){return r()})).start()}))},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(e){var o,n,t,r,i,a,l,c,s,p,u,f;return{setters:[function(e){o=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Node,c=e.tween,s=e.UITransform,p=e.Vec3,u=e.Component},function(e){f=e.AudioHelper}],execute:function(){var y,d,w,v,F;i._RF.push({},"53b63mRvBJHhIQccMJUmJaX","FlowerAnimation",void 0);var m=a.ccclass,g=a.property;e("FlowerAnimation",(y=m("FlowerAnimation"),d=g(l),y((F=o((v=function(e){function o(){for(var o,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return o=e.call.apply(e,[this].concat(i))||this,t(o,"flyFlower",F,r(o)),o}n(o,e);var i=o.prototype;return i.plant=function(e,o){var n=this;return new Promise((function(t){f.instance.playSFX("bubble-pop");var r=e.getWorldPosition(),i=o.getWorldPosition();n.flyFlower.active=!0,n.flyFlower.setWorldPosition(r);var a=r.clone();a.y+=10,a.x+=10,c(n.flyFlower).to(.2,{position:n.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(a)},{easing:"quadOut"}).to(.5,{position:n.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(i)},{easing:"quadInOut"}).call((function(){n.flyFlower.active=!1,t()})).start()}))},i.stopIdle=function(e){c(e).stop()},i.idleIndicator=function(e){var o=Math.random();c(e).delay(o).repeatForever(c().by(1,{position:new p(0,5,0)},{easing:"sineInOut"}).by(1,{position:new p(0,-5,0)},{easing:"sineInOut"})).start()},o}(u)).prototype,"flyFlower",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=v))||w));i._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./FlowerAnimation.ts"],(function(e){var n,t,r,o,i,a,l,c,s,u,f;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,o=e.assertThisInitialized,i=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){l=e.cclegacy,c=e._decorator,s=e.Node,u=e.Component},function(e){f=e.FlowerAnimation}],execute:function(){var h,w,p,d,m,v,g;l._RF.push({},"cf16aSCRT1PuJqI4iQAmW4b","FlowerView",void 0);var I=c.ccclass,y=c.property;e("FlowerView",(h=I("FlowerView"),w=y(s),p=y(f),h((v=n((m=function(e){function n(){for(var n,t=arguments.length,i=new Array(t),a=0;a<t;a++)i[a]=arguments[a];return n=e.call.apply(e,[this].concat(i))||this,r(n,"flowerContainer",v,o(n)),r(n,"flowerAnimation",g,o(n)),n.flowerIcons=void 0,n.model=void 0,n.ctl=void 0,n}t(n,e);var l=n.prototype;return l.onLoad=function(){this.flowerIcons=this.flowerContainer.children},l.init=function(e,n,t){var r=this;this.ctl=t,this.model=n,this.model.onRemainingChange((function(e){return r.onModelChanged(e)}));for(var o=0;o<this.flowerIcons.length;o++)this.flowerIcons[o].active=o<e,o<e&&this.flowerIcons[o].active?this.flowerAnimation.idleIndicator(this.flowerIcons[o]):this.flowerAnimation.stopIdle(this.flowerIcons[o])},l.getIndicatorNode=function(e){if(e<this.flowerIcons.length)return this.flowerIcons[e-1]},l.onModelChanged=function(){var e=i(a().mark((function e(n){var t;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=n.remaining?n.remaining:0,this.updateFlower(t);case 2:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),l.updateFlower=function(){var e=i(a().mark((function e(n){var t;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(t=this.flowerIcons[n]).active=!1,this.flowerAnimation.stopIdle(t),e.abrupt("return",!0);case 4:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),n}(u)).prototype,"flowerContainer",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=n(m.prototype,"flowerAnimation",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=m))||d));l._RF.pop()}}}));

System.register("chunks:///_virtual/GameEnums.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"7a4afkuam5EaqgbSuhQGOgS","GameEnums",void 0);e("GamePhase",function(e){return e[e.Planting=0]="Planting",e[e.Blowing=1]="Blowing",e[e.GameOver=2]="GameOver",e}({}));n._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./WindManager.ts","./TimelineHelper.ts","./GameEnums.ts"],(function(t){var n,e,i,s,r,a;return{setters:[function(t){n=t.asyncToGenerator,e=t.regeneratorRuntime},function(t){i=t.cclegacy},function(t){s=t.WindManager},function(t){r=t.wait},function(t){a=t.GamePhase}],execute:function(){i._RF.push({},"a0000YzmrZNq6jS+N1zVPFc","GameManager",void 0),t("GameManager",function(){function t(){this.plantCtl=null,this.compassCtl=null,this.topBoardCtl=null,this.resultPopupCtl=null,this.instructionCtl=null,this.windManager=new s,this.currentRound=0,this.maxRounds=7,this.isClickable=!0,this.phase=a.Planting,this.predictWind=null,this.onGameWin=null}var i=t.prototype;return i.setControllers=function(t,n,e,i,s){this.plantCtl=t,this.compassCtl=n,this.resultPopupCtl=e,this.instructionCtl=s,this.topBoardCtl=i},i.onLoad=function(){t.instance=this},i.loadLevel=function(t){this.maxRounds=t.round,this.windManager.init(t.direction,t.windSequence),this.plantCtl.init(t.round,t.board),this.plantCtl.setWindManager(this.windManager),this.topBoardCtl.init(t.level,t.round),this.compassCtl.init(t.direction),this.instructionCtl.init(t.level),this.resetGame()},i.resetGame=function(){this.compassCtl.reset(),this.plantCtl.reset(),this.currentRound=0,this.windManager.reset(),this.enterPlantingPhase()},i.handleEvent=function(t){this.plant(t)},i.enterPlantingPhase=function(){this.currentRound++,this.setPhase(a.Planting),this.predictWind=this.getWindDirection()},i.getWindDirection=function(){var t=this.windManager.getDesignedDirection();if(null==t){var n=this.plantCtl.getBoard();t=this.windManager.getWorstDirection(n)}return t},i.enterBlowingPhase=function(){var t=n(e().mark((function t(){var n;return e().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.checkMediumResult()){t.next=10;break}return this.setPhase(a.Blowing),n=this.predictWind,this.predictWind=null,null==n&&(n=this.getWindDirection()),t.next=7,this.compassCtl.blowWind(n);case 7:return t.next=9,this.plantCtl.blowSeeds(n);case 9:this.checkRoundResult();case 10:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),i.setPhase=function(t){this.phase=t},i.checkRoundResult=function(){var t=n(e().mark((function t(){var n;return e().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(this.currentRound>=this.maxRounds)){t.next=3;break}return t.next=3,this.plantCtl.roundOver();case 3:if(n=this.plantCtl.isBoardFullyCovered(),!(this.currentRound>=this.maxRounds||n)){t.next=11;break}return this.setPhase(a.GameOver),t.next=8,this.plantCtl.roundOver();case 8:n?this.showResult(!0):this.showResult(!1),t.next=12;break;case 11:this.enterPlantingPhase();case 12:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),i.checkMediumResult=function(){var t=this.plantCtl.isBoardFullyCovered();return t&&(this.setPhase(a.GameOver),this.showResult(!0)),t},i.showResult=function(){var t=n(e().mark((function t(n){var i=this;return e().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n?this.resultPopupCtl.show(!0,(function(){i.onGameWin&&i.onGameWin()})):this.resultPopupCtl.show(!1,(function(){i.resetGame()}));case 1:case"end":return t.stop()}}),t,this)})));return function(n){return t.apply(this,arguments)}}(),i.plant=function(){var t=n(e().mark((function t(n){return e().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.instructionCtl.hide(),this.phase!=a.Planting||!this.isClickable){t.next=14;break}return this.isClickable=!1,t.next=5,this.plantCtl.plant(n);case 5:if(!t.sent){t.next=13;break}return t.next=9,r(1e3);case 9:this.enterBlowingPhase(),this.isClickable=!0,t.next=14;break;case 13:this.isClickable=!0;case 14:case"end":return t.stop()}}),t,this)})));return function(n){return t.apply(this,arguments)}}(),t}()).instance=void 0,i._RF.pop()}}}));

System.register("chunks:///_virtual/GameScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts","./LevelManager.ts","./PlantController.ts","./TopBoardController.ts","./InstructionController.ts","./ResultPopupController.ts","./CompassController.ts"],(function(t){var e,n,r,o,l,a,i,s,u,c,p,g,m,C,f,h;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,r=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){l=t.cclegacy,a=t._decorator,i=t.director,s=t.Component},function(t){u=t.GameManager},function(t){c=t.getLevelConfig,p=t.isLastLevel},function(t){g=t.PlantController},function(t){m=t.TopBoardController},function(t){C=t.InstructionController},function(t){f=t.ResultPopupController},function(t){h=t.CompassController}],execute:function(){var v,b,d,y,M,L,G,I,P,S,z,w,E;l._RF.push({},"527fbdMsT1E6Jz+yyM8250f","GameScene",void 0);var B=a.ccclass,_=a.property;t("GameScene",(v=B("GameScene"),b=_(g),d=_(m),y=_(C),M=_(f),L=_(h),v((P=e((I=function(t){function e(){for(var e,n=arguments.length,l=new Array(n),a=0;a<n;a++)l[a]=arguments[a];return e=t.call.apply(t,[this].concat(l))||this,r(e,"plantCtl",P,o(e)),r(e,"topBoardtCtl",S,o(e)),r(e,"instructionCtl",z,o(e)),r(e,"resultPopupCtl",w,o(e)),r(e,"compassCtl",E,o(e)),e.gameManager=void 0,e}n(e,t);var l=e.prototype;return l.start=function(){this.gameManager=new u,this.gameManager.setControllers(this.plantCtl,this.compassCtl,this.resultPopupCtl,this.topBoardtCtl,this.instructionCtl),this.initGame(),this.gameManager.onGameWin=this.nextLevel.bind(this),i.on("TILE_CLICKED",this.gameManager.handleEvent,this.gameManager)},l.initGame=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1");this.gameManager.loadLevel(c(t))},l.nextLevel=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1");p(t)&&(t=1),localStorage.setItem("currentLevel",(t+1).toString()),this.initGame()},l.onDestroy=function(){i.off("GAME_OVER",this.gameManager.handleEvent,this)},e}(s)).prototype,"plantCtl",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),S=e(I.prototype,"topBoardtCtl",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),z=e(I.prototype,"instructionCtl",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),w=e(I.prototype,"resultPopupCtl",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),E=e(I.prototype,"compassCtl",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),G=I))||G));l._RF.pop()}}}));

System.register("chunks:///_virtual/GeneralModifier.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"006ccMNXb5Gj5eX3qiOFn6y","GeneralModifier",void 0);e("GeneralModifier",function(){function e(){}var n=e.prototype;return n.canPlant=function(){return!0},n.canHoldSeed=function(){return!0},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/GrassModifier.ts",["cc"],(function(n){var e;return{setters:[function(n){e=n.cclegacy}],execute:function(){e._RF.push({},"9b7ed65BIdHCYZ5nV1nzCAe","GrassModifier",void 0);n("GrassModifier",function(){function n(){}var e=n.prototype;return e.canPlant=function(){return!0},e.canHoldSeed=function(){return!0},e.onSeedLanded=function(n){n.setFlower()},n}());e._RF.pop()}}}));

System.register("chunks:///_virtual/GridAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,n,o,r,i,a,l,c,s,d,p,u,f,y,v;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,o=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Prefab,c=e.Node,s=e.instantiate,d=e.director,p=e.UITransform,u=e.UIOpacity,f=e.tween,y=e.Vec3,v=e.Component}],execute:function(){var m,g,b,h,P,w,A;i._RF.push({},"b36e8kkMb9Mla9EpFZ/lAEs","GridAnimation",void 0);var C=a.ccclass,F=a.property;e("GridAnimation",(m=C("GridAnimation"),g=F(l),b=F(c),m((w=t((P=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return t=e.call.apply(e,[this].concat(i))||this,o(t,"seedFlyPrefab",w,r(t)),o(t,"windEffect",A,r(t)),t}return n(t,e),t.prototype.seedFly=function(e,t){var n=this;return new Promise((function(o){if(n.seedFlyPrefab){var r=s(n.seedFlyPrefab);n.node.addChild(r);var i=d.getScene().getChildByName("Canvas");i.addChild(r);var a=e.getWorldPosition(),l=t.getWorldPosition(),c=a.clone().lerp(l,.5);c.x+=80*(Math.random()-.5),c.y+=80*(Math.random()-.5),r.setWorldPosition(a);var v=i.getComponent(p).convertToNodeSpaceAR(a),m=i.getComponent(p).convertToNodeSpaceAR(c),g=i.getComponent(p).convertToNodeSpaceAR(l);r.setPosition(v);var b={value:0},h=360+360*Math.random(),P=r.getComponent(u);P&&(P.opacity=255),f(b).to(2,{value:1},{onUpdate:function(){var e=b.value,t=1-e,n=t*t*v.x+2*t*e*m.x+e*e*g.x,o=t*t*v.y+2*t*e*m.y+e*e*g.y;r.setPosition(new y(n,o,0)),r.angle=0+(h-0)*e;var i=1+(1.2-1)*e;r.setScale(new y(i,i,1)),P&&(P.opacity=255-75*e)}}).call((function(){r.destroy(),o()})).start()}}))},t}(v)).prototype,"seedFlyPrefab",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(P.prototype,"windEffect",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=P))||h));i._RF.pop()}}}));

System.register("chunks:///_virtual/GridView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridAnimation.ts","./TileView.ts"],(function(e){var i,t,r,n,o,a,s,l,c,d,h,u,p,f;return{setters:[function(e){i=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){s=e.cclegacy,l=e._decorator,c=e.Prefab,d=e.instantiate,h=e.Vec3,u=e.Component},function(e){p=e.GridAnimation},function(e){f=e.TileView}],execute:function(){var g,m,v,w,y,b,S;s._RF.push({},"3ffabj5l5RITYYoerqRe6ct","GridView",void 0);var z=l.ccclass,V=l.property;e("GridView",(g=z("GridView"),m=V(c),v=V(p),g((b=i((y=function(e){function i(){for(var i,t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];return(i=e.call.apply(e,[this].concat(o))||this).tileSize=100,i.spacing=2,r(i,"tilePrefab",b,n(i)),r(i,"gridAnimation",S,n(i)),i.tileNodes=[],i.modelViewMap=new Map,i.scale=void 0,i.model=void 0,i}t(i,e);var s=i.prototype;return s.init=function(e){this.model=e,this.createBoard(e.getBoard())},s.blowSeeds=function(){var e=o(a().mark((function e(i,t){var r,n;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.getNodeFromModel(i),n=this.getNodeFromModel(t),e.next=4,this.gridAnimation.seedFly(r,n);case 4:case"end":return e.stop()}}),e,this)})));return function(i,t){return e.apply(this,arguments)}}(),s.getNodeFromModel=function(e){var i;return null==(i=this.modelViewMap.get(e))?void 0:i.node},s.createBoard=function(e){this.node.removeAllChildren();var i=e.length;if(0!=i){var t=e[0].length;if(0!=t)for(var r=this.getScale(i,t),n=r.startX,o=r.startY,a=0;a<i;a++){this.tileNodes[a]=[];for(var s=0;s<t;s++){var l=d(this.tilePrefab),c=l.getComponent(f);c.init(e[a][s].getType(),e[a][s]),l.setPosition(new h(n+s*(this.tileSize+this.spacing),o-a*(this.tileSize+this.spacing),0)),this.node.setScale(this.scale,this.scale),this.node.addChild(l),this.modelViewMap.set(e[a][s],c),this.tileNodes[a][s]=l}}}},s.getScale=function(e,i){var t=e*this.tileSize+(e-1)*this.spacing;return this.scale=Math.min(540/t,1.8),{startX:-(e*this.tileSize+(e-1)*this.spacing)/2+this.tileSize/2,startY:(i*this.tileSize+(i-1)*this.spacing)/2-this.tileSize/2}},i}(u)).prototype,"tilePrefab",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=i(y.prototype,"gridAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=y))||w));s._RF.pop()}}}));

System.register("chunks:///_virtual/IdleAnimations.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,i,t,o,r,s,a,l,u,c;return{setters:[function(e){n=e.applyDecoratedDescriptor,i=e.inheritsLoose,t=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,s=e._decorator,a=e.Node,l=e.tween,u=e.Vec3,c=e.Component}],execute:function(){var p,d,y,f,g,b,I,h;r._RF.push({},"cdd78pOz89KMKUEUB7o2RDu","IdleAnimations",void 0);var v=s.ccclass,w=s.property;e("IdelAnimations",(p=v("IdelAnimations"),d=w(a),y=w(a),p(((h=function(e){function n(){for(var n,i=arguments.length,r=new Array(i),s=0;s<i;s++)r[s]=arguments[s];return n=e.call.apply(e,[this].concat(r))||this,t(n,"cloudFace",b,o(n)),t(n,"pointer",I,o(n)),n}i(n,e);var r=n.prototype;return r.onLoad=function(){n.instance=this,this.idleCloud(),this.idleCompass()},r.idleCloud=function(){this.cloudFace&&l(this.cloudFace).repeatForever(l().by(3,{position:new u(20,0,0)},{easing:"sineInOut"}).by(3,{position:new u(-20,0,0)},{easing:"sineInOut"})).start()},r.idleCompass=function(){this.pointer&&l(this.pointer).repeatForever(l().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},r.stopIdle=function(e){l(e).stop()},r.idleIndicator=function(e){var n=Math.random();l(e).delay(n).repeatForever(l().by(1,{position:new u(0,5,0)},{easing:"sineInOut"}).by(1,{position:new u(0,-5,0)},{easing:"sineInOut"})).start()},r.idleTileFlower=function(e){l(e).repeatForever(l().by(1.4,{position:new u(0,4,0)},{easing:"sineInOut"}).by(1.4,{position:new u(0,-4,0)},{easing:"sineInOut"})).start()},r.idleTileSeed=function(e){l(e).repeatForever(l().by(2,{position:new u(0,3,0)},{easing:"sineInOut"}).by(2,{position:new u(0,-3,0)},{easing:"sineInOut"})).start()},n}(c)).instance=void 0,b=n((g=h).prototype,"cloudFace",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=n(g.prototype,"pointer",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=g))||f));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var n,e,i,o,r,a,s,c,u,p,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,i=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,s=t.Node,c=t.tween,u=t.UIOpacity,p=t.Vec3,l=t.Component}],execute:function(){var f,g,d,h,y;r._RF.push({},"809d6F3gqxDZK/7JbNVkEZN","InstructionAnimation",void 0);var v=a.ccclass,N=a.property;t("InstructionAnimation",(f=v("InstructionAnimation"),g=N(s),f((y=n((h=function(t){function n(){for(var n,e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return n=t.call.apply(t,[this].concat(r))||this,i(n,"fingerNode",y,o(n)),n}e(n,t);var r=n.prototype;return r.hideFinger=function(){var t=this;c(this.fingerNode).stop(),c(this.fingerNode.getComponent(u)).to(.3,{opacity:0}).call((function(){return t.fingerNode.active=!1})).start()},r.idleFinger=function(){var t=this.fingerNode.position;this.fingerNode.active=!0,c(this.fingerNode).repeatForever(c().to(.4,{position:new p(t.x,t.y-15)},{easing:"sineInOut"}).to(.4,{position:new p(t.x,t.y)},{easing:"sineInOut"})).start()},n}(l)).prototype,"fingerNode",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=h))||d));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./InstructionView.ts"],(function(t){var n,e,i,r,o,c,s,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized},function(t){o=t.cclegacy,c=t._decorator,s=t.Component},function(t){l=t.InstructionView}],execute:function(){var u,a,p,f,h;o._RF.push({},"8b8fcEWITpAXIUUAeK1s21O","InstructionController",void 0);var v=c.ccclass,w=c.property;t("InstructionController",(u=v("InstructionController"),a=w(l),u((h=n((f=function(t){function n(){for(var n,e=arguments.length,o=new Array(e),c=0;c<e;c++)o[c]=arguments[c];return n=t.call.apply(t,[this].concat(o))||this,i(n,"view",h,r(n)),n}e(n,t);var o=n.prototype;return o.init=function(t){this.view&&1==t&&this.view.show()},o.hide=function(){this.view.hide()},n}(s)).prototype,"view",[a],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),p=f))||p));o._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./InstructionAnimation.ts"],(function(n){var t,i,e,o,r,a,c,s;return{setters:[function(n){t=n.applyDecoratedDescriptor,i=n.inheritsLoose,e=n.initializerDefineProperty,o=n.assertThisInitialized},function(n){r=n.cclegacy,a=n._decorator,c=n.Component},function(n){s=n.InstructionAnimation}],execute:function(){var u,l,p,h,f;r._RF.push({},"a8b3dhBlYNIYKU91I5oB63w","InstructionView",void 0);var d=a.ccclass,m=a.property;n("InstructionView",(u=d("InstructionView"),l=m(s),u((f=t((h=function(n){function t(){for(var t,i=arguments.length,r=new Array(i),a=0;a<i;a++)r[a]=arguments[a];return t=n.call.apply(n,[this].concat(r))||this,e(t,"animation",f,o(t)),t}i(t,n);var r=t.prototype;return r.start=function(){this.node.active=!1},r.hide=function(){this.animation.hideFinger()},r.show=function(){this.node.active=!0,this.animation.idleFinger()},t}(c)).prototype,"animation",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),p=h))||p));r._RF.pop()}}}));

System.register("chunks:///_virtual/LevelManager.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){e({getLevelConfig:function(e){var n,i=r[Math.min(e-1,r.length-1)];return i.direction=null!=(n=i.direction)?n:8,i},isLastLevel:function(e){return e>=r.length}}),n._RF.push({},"0135eEnWntLcpY2ffWv6jeY","LevelManager",void 0);var r=[{level:1,round:3,direction:4,windSequence:["W"],board:[[1,1],[1,1]]},{level:2,round:2,direction:4,windSequence:["W","E"],board:[[1,1],[1,1]]},{level:3,round:6,windSequence:["E"],direction:8,board:[[1,1,1],[1,1,1],[1,1,1]]},{level:4,round:6,direction:8,board:[[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]]},{level:5,round:6,direction:8,board:[[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1]]},{level:6,round:7,direction:8,board:[[1,1,1,1,1],[1,1,1,1,1],[1,1,2,1,1],[1,1,1,1,1],[1,1,1,1,1]]},{level:7,round:7,direction:8,board:[[1,1,1,1,1],[1,1,2,1,1],[1,2,1,2,1],[1,1,2,1,1],[1,1,1,1,1]]}];n._RF.pop()}}}));

System.register("chunks:///_virtual/LevelTestScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts"],(function(e){var r,n,t,a,i,o,c,l;return{setters:[function(e){r=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,a=e.assertThisInitialized},function(e){i=e.cclegacy,o=e._decorator,c=e.Component},function(e){l=e.GameManager}],execute:function(){var s,u,p,g,v;i._RF.push({},"0bdaateNrNOdIbiDCwxjrgM","LevelTestScene",void 0);var d=o.ccclass,f=o.property;e("LevelTestScene",(s=d("LevelTestScene"),u=f(l),s((v=r((g=function(e){function r(){for(var r,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return r=e.call.apply(e,[this].concat(i))||this,t(r,"gameManager",v,a(r)),r}return n(r,e),r.prototype.start=function(){var e=window.__currentTestLevel__||{level:1,round:3,direction:4,windSequence:["W"],board:[[1,1],[1,1]]};this.gameManager&&(console.log(e),this.gameManager.loadLevel(e))},r}(c)).prototype,"gameManager",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),p=g))||p));i._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./CompassAnimation.ts","./CompassView.ts","./TopBoardAnimation.ts","./TopBoardView.ts","./FlowerAnimation.ts","./FlowerView.ts","./GridAnimation.ts","./GridView.ts","./ResultPopupAnimation.ts","./ResultPopupView.ts","./TileAnimation.ts","./TileView.ts","./InstructionAnimation.ts","./InstructionView.ts","./CellState.ts","./Direction.ts","./GameEnums.ts","./CompassController.ts","./InstructionController.ts","./PlantController.ts","./ResultPopupController.ts","./TileController.ts","./TopBoardController.ts","./EffectsHelper.ts","./OneShotParticle.ts","./SceneSwitchAnimation.ts","./GameManager.ts","./LevelManager.ts","./WindManager.ts","./PlantModel.ts","./TileModel.ts","./GeneralModifier.ts","./GrassModifier.ts","./Modifiers.ts","./MudModifier.ts","./RockModifier.ts","./TileModifierInterface.ts","./GameScene.ts","./LevelTestScene.ts","./PortraitScene.ts","./StartScene.ts","./AudioHelper.ts","./BackgroundController.ts","./IdleAnimations.ts","./ResizeHandler.ts","./TimelineHelper.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/Modifiers.ts",["cc","./MudModifier.ts","./GrassModifier.ts","./RockModifier.ts","./GeneralModifier.ts"],(function(i){var e,r,o,f,s;return{setters:[function(i){e=i.cclegacy},function(i){r=i.MudModifier},function(i){o=i.GrassModifier},function(i){f=i.RockModifier},function(i){s=i.GeneralModifier}],execute:function(){e._RF.push({},"f9e83JJsHNHsZcG4b1HhSwE","Modifiers",void 0);i("ModifierMap",{generalModifier:s,grassModifier:o,mudModifier:r,rockModifier:f});e._RF.pop()}}}));

System.register("chunks:///_virtual/MudModifier.ts",["cc"],(function(n){var t;return{setters:[function(n){t=n.cclegacy}],execute:function(){t._RF.push({},"2480b5cF8NMEIASgGCVqI6U","MudModifier",void 0);n("MudModifier",function(){function n(){}var t=n.prototype;return t.canPlant=function(){return!1},t.canHoldSeed=function(){return!0},n}());t._RF.pop()}}}));

System.register("chunks:///_virtual/OneShotParticle.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.ParticleSystem2D,c=t.Component}],execute:function(){var i;r._RF.push({},"2a606wOyVpItYUnzW74HPaB","OneShotParticle",void 0);var s=o.ccclass;o.property,t("VictoryParticle",s("VictoryParticle")(i=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this,e=this.getComponent(n);e&&e.resetSystem(),setTimeout((function(){t.node.destroy()}),4e3)},r}(c))||i);r._RF.pop()}}}));

System.register("chunks:///_virtual/PlantController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridView.ts","./FlowerView.ts","./PlantModel.ts","./TimelineHelper.ts","./FlowerAnimation.ts"],(function(e){var t,n,r,i,o,a,l,u,s,c,d,f,p,w,h;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime,l=e.createForOfIteratorHelperLoose},function(e){u=e.cclegacy,s=e._decorator,c=e.Component},function(e){d=e.GridView},function(e){f=e.FlowerView},function(e){p=e.PlantModel},function(e){w=e.wait},function(e){h=e.FlowerAnimation}],execute:function(){var m,g,v,b,y,x,F,V,k;u._RF.push({},"856dcU59lJIR7+xm/FGgHiW","PlantController",void 0);var M=s.ccclass,P=s.property;e("PlantController",(m=M("PlantController"),g=P(f),v=P(h),b=P(d),m((F=t((x=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"flowerView",F,i(t)),r(t,"animation",V,i(t)),r(t,"gridView",k,i(t)),t.model=null,t.windManager=null,t}n(t,e);var u=t.prototype;return u.init=function(e,t){this.model=new p(e,t),this.flowerView.init(e,this.model,this),this.gridView.init(this.model)},u.setWindManager=function(e){this.windManager=e},u.reset=function(){this.model.reset()},u.plant=function(){var e=o(a().mark((function e(t){var n,r,i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.canPlant()){e.next=9;break}return this.model.plantOne(t),n=this.model.getRemaining(),r=this.flowerView.getIndicatorNode(n+1),i=this.getNodeFromModel(t),e.next=7,this.animation.plant(r,i);case 7:return t.setFlower(),e.abrupt("return",!0);case 9:return e.abrupt("return",!1);case 10:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),u.roundOver=function(){var e=o(a().mark((function e(){var t,n,r,i,o,u,s;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=this.model.getBoard(),n=l(t);case 2:if((r=n()).done){e.next=15;break}i=r.value,o=l(i);case 5:if((u=o()).done){e.next=13;break}if(!(s=u.value).isSeed()){e.next=11;break}return s.setFlower(),e.next=11,w(200);case 11:e.next=5;break;case 13:e.next=2;break;case 15:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),u.blowSeeds=function(){var e=o(a().mark((function e(t){var n,r=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.model.getBoard(),e.next=3,this.windManager.walkWindPath(n,t,o(a().mark((function e(t,n){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.gridView.blowSeeds(t,n),n.setSeed(),e.next=4,w(500);case 4:case"end":return e.stop()}}),e)}))));case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),u.isBoardFullyCovered=function(){return this.model.isBoardFullyCovered()},u.getBoard=function(){return this.model.getBoard()},u.getNodeFromModel=function(e){return this.gridView.getNodeFromModel(e)},t}(c)).prototype,"flowerView",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V=t(x.prototype,"animation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),k=t(x.prototype,"gridView",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=x))||y));u._RF.pop()}}}));

System.register("chunks:///_virtual/PlantModel.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileModel.ts"],(function(e){var i,n,t;return{setters:[function(e){i=e.createForOfIteratorHelperLoose},function(e){n=e.cclegacy},function(e){t=e.TileModel}],execute:function(){n._RF.push({},"0105bFAWXxMgrv18Cpnkf56","PlantModel",void 0);e("PlantModel",function(){function e(e,i){this.totalFlower=0,this.remainingFlower=0,this.tileModels=[],this.indicatorListeners=[],this.totalFlower=e,this.reset();var n=i.length;if(0!=n){var r=i[0].length;if(0!=r)for(var o=0;o<n;o++){this.tileModels[o]=[];for(var l=0;l<r;l++){var a=new t(i[o][l]);this.tileModels[o][l]=a}}}}var n=e.prototype;return n.getRemaining=function(){return this.remainingFlower},n.getBoard=function(){return this.tileModels},n.plantOne=function(e){this.remainingFlower--,this.emitRemainingChange({remaining:this.remainingFlower})},n.isBoardFullyCovered=function(){for(var e,n=i(this.tileModels);!(e=n()).done;)for(var t,r=e.value,o=i(r);!(t=o()).done;){if(!t.value.isCovered())return!1}return!0},n.reset=function(){this.remainingFlower=this.totalFlower;for(var e,n=i(this.tileModels);!(e=n()).done;)for(var t,r=e.value,o=i(r);!(t=o()).done;){t.value.setEmpty()}this.emitRemainingChange({remaining:this.remainingFlower})},n.onRemainingChange=function(e){this.indicatorListeners.push(e)},n.emitRemainingChange=function(e){this.indicatorListeners.forEach((function(i){return i(e)}))},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/PortraitScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts","./LevelManager.ts","./PlantController.ts","./TopBoardController.ts","./InstructionController.ts","./ResultPopupController.ts","./CompassController.ts"],(function(t){var e,n,r,o,l,a,i,s,u,c,p,g,C,m,f,h;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,r=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){l=t.cclegacy,a=t._decorator,i=t.director,s=t.Component},function(t){u=t.GameManager},function(t){c=t.getLevelConfig,p=t.isLastLevel},function(t){g=t.PlantController},function(t){C=t.TopBoardController},function(t){m=t.InstructionController},function(t){f=t.ResultPopupController},function(t){h=t.CompassController}],execute:function(){var v,b,d,y,L,M,P,I,S,z,w,G,B;l._RF.push({},"01f53TqSTdD2pJVKNzSIVWn","PortraitScene",void 0);var D=a.ccclass,E=a.property;t("PortraitScene",(v=D("PortraitScene"),b=E(g),d=E(C),y=E(m),L=E(f),M=E(h),v((S=e((I=function(t){function e(){for(var e,n=arguments.length,l=new Array(n),a=0;a<n;a++)l[a]=arguments[a];return e=t.call.apply(t,[this].concat(l))||this,r(e,"plantCtl",S,o(e)),r(e,"topBoardtCtl",z,o(e)),r(e,"instructionCtl",w,o(e)),r(e,"resultPopupCtl",G,o(e)),r(e,"compassCtl",B,o(e)),e.gameManager=void 0,e}n(e,t);var l=e.prototype;return l.start=function(){this.plantCtl&&(this.gameManager=new u,this.gameManager.setControllers(this.plantCtl,this.compassCtl,this.resultPopupCtl,this.topBoardtCtl,this.instructionCtl),this.initGame(),this.gameManager.onGameWin=this.nextLevel.bind(this),i.on("TILE_CLICKED",this.gameManager.handleEvent,this.gameManager))},l.initGame=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1");this.gameManager.loadLevel(c(t))},l.nextLevel=function(){var t=parseInt(localStorage.getItem("currentLevel")||"1");p(t)&&(t=1),localStorage.setItem("currentLevel",(t+1).toString()),this.initGame()},l.onDestroy=function(){i.off("GAME_OVER",this.gameManager.handleEvent,this)},e}(s)).prototype,"plantCtl",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),z=e(I.prototype,"topBoardtCtl",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),w=e(I.prototype,"instructionCtl",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),G=e(I.prototype,"resultPopupCtl",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),B=e(I.prototype,"compassCtl",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),P=I))||P));l._RF.pop()}}}));

System.register("chunks:///_virtual/ResizeHandler.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var i,n,t,o,s;return{setters:[function(e){i=e.inheritsLoose},function(e){n=e.cclegacy,t=e._decorator,o=e.view,s=e.Component}],execute:function(){var r;n._RF.push({},"1f38charWNO8K/DfOku4Xc0","ResizeHandler",void 0);var c=t.ccclass;e("ResizeHandler",c("ResizeHandler")(r=function(e){function n(){return e.apply(this,arguments)||this}i(n,e);var t=n.prototype;return t.start=function(){o.on("window-resize",this.onResize,this),o.on("orientation-change",this.onResize,this)},t.onResize=function(){var e=o.getDesignResolutionSize(),i=o.getResolutionPolicy();o.setDesignResolutionSize(e.width,e.height,i),console.log("Screen resized, layout updated")},t.onDestroy=function(){o.off("window-resize",this.onResize,this),o.off("orientation-change",this.onResize,this)},n}(s))||r);n._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./TimelineHelper.ts","./EffectsHelper.ts"],(function(e){var t,n,r,i,o,a,c,u,s,p,l,f,h,d,y;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,s=e.Prefab,p=e.sp,l=e.instantiate,f=e.Component},function(e){h=e.AudioHelper},function(e){d=e.wait},function(e){y=e.EffectsHelper}],execute:function(){var P,v,b,m,w,g,R;c._RF.push({},"50650YKPRlHZKhjTHtXKRcC","ResultPopupAnimation",void 0);var k=u.ccclass,x=u.property;e("ResultPopupAnimation",(P=k("ResultPopupAnimation"),v=x(s),b=x(p.Skeleton),P((g=t((w=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"victoryParticlePrefab",g,i(t)),r(t,"backgroundSpine",R,i(t)),t}n(t,e);var c=t.prototype;return c.showWin=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.showVictoryParticles(),h.instance.playSFX("tadaa"),e.next=4,d(1500);case 4:return t.active=!0,this.backgroundSpine.setAnimation(0,"thomasHedgedogWin",!0),e.next=8,this.popupResultPanel(t);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showLose=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h.instance.playSFX("lose"),e.next=3,d(1500);case 3:return t.active=!0,this.backgroundSpine.setAnimation(0,"fail",!1),e.next=7,this.popupResultPanel(t);case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showVictoryParticles=function(){var e=l(this.victoryParticlePrefab);e.setPosition(0,0),this.node.addChild(e)},c.popupResultPanel=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y.bounceScale(t);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),t}(f)).prototype,"victoryParticlePrefab",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(w.prototype,"backgroundSpine",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=w))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupView.ts"],(function(e){var t,r,o,n,i,l,u,p;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,o=e.initializerDefineProperty,n=e.assertThisInitialized},function(e){i=e.cclegacy,l=e._decorator,u=e.Component},function(e){p=e.ResultPopupView}],execute:function(){var s,c,a,f,R;i._RF.push({},"832b3KU7T9DOJlAx+Ru5pRj","ResultPopupController",void 0);var v=l.ccclass,h=l.property;e("ResultPopupController",(s=v("ResultPopupController"),c=h(p),s((R=t((f=function(e){function t(){for(var t,r=arguments.length,i=new Array(r),l=0;l<r;l++)i[l]=arguments[l];return t=e.call.apply(e,[this].concat(i))||this,o(t,"view",R,n(t)),t}r(t,e);var i=t.prototype;return i.init=function(){},i.show=function(e,t){var r="",o="";e?(r="YOU WIN!",o="NEXT LEVEL"):(r="LEVEL FAILED",o="RETRY"),this.view.show(e,r,o,t)},t}(u)).prototype,"view",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),a=f))||a));i._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupAnimation.ts"],(function(t){var e,n,i,r,o,a,s,u,l,c,p,h,f;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized,o=t.asyncToGenerator,a=t.regeneratorRuntime},function(t){s=t.cclegacy,u=t._decorator,l=t.Label,c=t.Button,p=t.Node,h=t.Component},function(t){f=t.ResultPopupAnimation}],execute:function(){var b,d,w,m,y,v,R,g,P;s._RF.push({},"67522KS9wNPBaNKMCQj6MEU","ResultPopupView",void 0);var _=u.ccclass,B=u.property;t("ResultPopupView",(b=_("ResultPopupView"),d=B(l),w=B(c),m=B(f),b((R=e((v=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"titleLabel",R,r(e)),i(e,"restartButton",g,r(e)),i(e,"animation",P,r(e)),e._onRestart=null,e}n(e,t);var s=e.prototype;return s.start=function(){this.node.active=!1,this.restartButton.node.on(p.EventType.TOUCH_START,this.endShow,this)},s.endShow=function(){this.node.active=!1,this._onRestart&&this._onRestart()},s.show=function(){var t=o(a().mark((function t(e,n,i,r){var o,s;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o=this.restartButton.node.getChildByName("Label"),s=null==o?void 0:o.getComponent(l),this.titleLabel.string=n,s.string=i,this._onRestart=r,!e){t.next=10;break}return t.next=8,this.animation.showWin(this.node);case 8:t.next=12;break;case 10:return t.next=12,this.animation.showLose(this.node);case 12:case"end":return t.stop()}}),t,this)})));return function(e,n,i,r){return t.apply(this,arguments)}}(),e}(h)).prototype,"titleLabel",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=e(v.prototype,"restartButton",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),P=e(v.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=v))||y));s._RF.pop()}}}));

System.register("chunks:///_virtual/RockModifier.ts",["cc"],(function(n){var t;return{setters:[function(n){t=n.cclegacy}],execute:function(){t._RF.push({},"8db040Yu45DzIX/YZ/fAsOG","RockModifier",void 0);n("RockModifier",function(){function n(){}var t=n.prototype;return t.canPlant=function(){return!1},t.canHoldSeed=function(){return!1},t.canPassWind=function(){return!1},t.isBlockingTile=function(){return!0},n}());t._RF.pop()}}}));

System.register("chunks:///_virtual/SceneSwitchAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(t){var e,n,o,i,r,a,c,u,s,l,p,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,o=t.initializerDefineProperty,i=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,c=t.Node,u=t.UIOpacity,s=t.tween,l=t.Vec3,p=t.Component},function(t){d=t.AudioHelper}],execute:function(){var f,h,m,y,w;r._RF.push({},"ad974rHdelF87WmmoGkUViU","SceneSwitchAnimation",void 0);var S=a.ccclass,v=a.property;t("SceneSwitchAnimation",(f=S("SceneSwitchAnimation"),h=v(c),f((w=e((y=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r))||this,o(e,"rootNode",w,i(e)),e}n(e,t);var r=e.prototype;return r.start=function(){},r.update=function(t){},r.switch=function(){var t=this;return new Promise((function(e){d.instance.playSFX("swish");var n=t.rootNode.getComponent(u);n||(n=t.rootNode.addComponent(u)),s(t.rootNode).to(.5,{scale:new l(.3,.3,1)},{easing:"quadInOut"}).start(),s(n).to(.5,{opacity:0},{easing:"quadInOut"}).call((function(){e()})).start()}))},e}(p)).prototype,"rootNode",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=y))||m));r._RF.pop()}}}));

System.register("chunks:///_virtual/StartScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SceneSwitchAnimation.ts"],(function(e){var t,n,r,i,o,a,c,s,u,l,p,f,S;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,s=e._decorator,u=e.view,l=e.ResolutionPolicy,p=e.Component,f=e.director},function(e){S=e.SceneSwitchAnimation}],execute:function(){var h,m,y,d,g;c._RF.push({},"b7820Ibl8lE8a/m7g4FqHbp","StartScene",void 0);var v=s.ccclass,w=s.property;e("StartManager",(h=v("StartManager"),m=w(S),h((g=t((d=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"sceneAnimation",g,i(t)),t}n(t,e);var c=t.prototype;return c.start=function(){},c.onLoad=function(){u.setDesignResolutionSize(1280,720,l.SHOW_ALL),u.resizeWithBrowserSize(!0)},c.update=function(e){},c.onStartGame=function(){var e=o(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.sceneAnimation.switch();case 2:f.loadScene("portraitScene");case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t}(p)).prototype,"sceneAnimation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=d))||y));c._RF.pop()}}}));

System.register("chunks:///_virtual/TileAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,r,o,i,c,s,u;return{setters:[function(e){n=e.inheritsLoose,t=e.asyncToGenerator,r=e.regeneratorRuntime},function(e){o=e.cclegacy,i=e._decorator,c=e.Component},function(e){s=e.AudioHelper},function(e){u=e.EffectsHelper}],execute:function(){var a;o._RF.push({},"773624mcfpELo13mt1ts7jO","TileAnimation",void 0);var p=i.ccclass;i.property,e("TileAnimation",p("TileAnimation")(a=function(e){function o(){return e.apply(this,arguments)||this}return n(o,e),o.prototype.switchToFlower=function(){var e=t(r().mark((function e(n){return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s.instance.playSFX("sparkle"),e.next=3,u.bounceScale(n);case 3:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o}(c))||a);o._RF.pop()}}}));

System.register("chunks:///_virtual/TileController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileModel.ts","./TileView.ts"],(function(e){var i,t,l,n,o,r,c,s,u;return{setters:[function(e){i=e.applyDecoratedDescriptor,t=e.inheritsLoose,l=e.initializerDefineProperty,n=e.assertThisInitialized},function(e){o=e.cclegacy,r=e._decorator,c=e.Component},function(e){s=e.TileModel},function(e){u=e.TileView}],execute:function(){var a,p,f,h,d;o._RF.push({},"c0f27p3AoRMq76p18EoW8hV","TileController",void 0);var w=r.ccclass,y=r.property;e("TileController",(a=w("TileController"),p=y(u),a((d=i((h=function(e){function i(){for(var i,t=arguments.length,o=new Array(t),r=0;r<t;r++)o[r]=arguments[r];return i=e.call.apply(e,[this].concat(o))||this,l(i,"tileView",d,n(i)),i.model=null,i}return t(i,e),i.prototype.init=function(e){this.model=new s(e),this.tileView&&this.tileView.init(e,this.model)},i}(c)).prototype,"tileView",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=h))||f));o._RF.pop()}}}));

System.register("chunks:///_virtual/TileModel.ts",["cc","./CellState.ts","./Modifiers.ts"],(function(e){var t,i,n,s;return{setters:[function(e){t=e.cclegacy},function(e){i=e.CellState,n=e.TileModifier},function(e){s=e.ModifierMap}],execute:function(){t._RF.push({},"bac740SshBBtIgqi6FiWrSu","TileModel",void 0);e("TileModel",function(){function e(e){switch(this.modifier=null,this.state=void 0,this.type=void 0,this.listeners=[],this.type=e,e){case n.Grass:this.modifier=new s.grassModifier;break;case n.Rock:this.modifier=new s.rockModifier;break;case n.Normal:this.modifier=new s.generalModifier;break;case n.Mud:this.modifier=new s.mudModifier}this.state=i.Empty}var t=e.prototype;return t.setFlower=function(){var e,t=this.createModelChangeObj(i.Dandelion);this.canPlant()&&(this.state=i.Dandelion,null==(e=this.modifier)||null==e.onFlowerLanded||e.onFlowerLanded(this));this.emitChange(t)},t.setSeed=function(){var e,t=this.createModelChangeObj(i.Seed);this.canHoldSeed()&&this.isEmpty()&&(this.state=i.Seed,null==(e=this.modifier)||null==e.onSeedLanded||e.onSeedLanded(this));this.emitChange(t)},t.setEmpty=function(){var e=this.createModelChangeObj(i.Empty);this.state=i.Empty,this.emitChange(e)},t.createModelChangeObj=function(e){return{status:e,oldState:this.state}},t.getType=function(){return this.type},t.getState=function(){return this.state},t.canPlant=function(){return this.modifier.canPlant()},t.canHoldSeed=function(){return this.modifier.canHoldSeed()},t.canPassWind=function(){return!this.modifier.canPassWind||this.modifier.canPassWind()},t.isFlower=function(){return this.state==i.Dandelion},t.isEmpty=function(){return this.state==i.Empty},t.isSeed=function(){return this.state==i.Seed},t.isCovered=function(){var e,t;return 1==(null==(e=(t=this.modifier).isBlockingTile)?void 0:e.call(t))||(this.isFlower()||this.isSeed())},t.cloneState=function(){var t=new e(this.type);return t.state=this.state,t},t.onChange=function(e){this.listeners.push(e)},t.emitChange=function(e){this.listeners.forEach((function(t){return t(e)}))},e}());t._RF.pop()}}}));

System.register("chunks:///_virtual/TileModifierInterface.ts",["cc"],(function(){var e;return{setters:[function(t){e=t.cclegacy}],execute:function(){e._RF.push({},"f79d8CUtGBGoZrUHU9WOWoA","TileModifierInterface",void 0),e._RF.pop()}}}));

System.register("chunks:///_virtual/TileView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileAnimation.ts","./CellState.ts"],(function(e){var t,i,n,r,o,a,s,l,c,d,u,p,h,f,m;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.createForOfIteratorHelperLoose,a=e.asyncToGenerator,s=e.regeneratorRuntime},function(e){l=e.cclegacy,c=e._decorator,d=e.Node,u=e.director,p=e.Component},function(e){h=e.TileAnimation},function(e){f=e.CellState,m=e.TileModifier}],execute:function(){var y,v,S,w,N,g,C,b,T;l._RF.push({},"0a39c2e7nZCRK/1GD1ueQz8","TileView",void 0);var k=c.ccclass,E=c.property;e("TileView",(y=k("TileView"),v=E(h),S=E(d),w=E(d),y((C=t((g=function(e){function t(){for(var t,i=arguments.length,o=new Array(i),a=0;a<i;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,n(t,"tileAnimation",C,r(t)),n(t,"seedSpriteNode",b,r(t)),n(t,"dandelionSpriteNode",T,r(t)),t.model=void 0,t}i(t,e);var l=t.prototype;return l.init=function(e,t){var i=this;this.node.on(d.EventType.TOUCH_END,this.onClick,this),this.model=t,this.model.onChange((function(e){return i.onModelChanged(e)})),this.setEmptyType(e),this.updateVisual()},l.onClick=function(){var e=this.model.getState();e!==f.Empty&&e!==f.Seed||u.emit("TILE_CLICKED",this.model)},l.onModelChanged=function(){var e=a(s().mark((function e(t){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.oldState!==f.Seed||t.status!=f.Dandelion){e.next=5;break}return e.next=3,this.switchToFlower();case 3:e.next=6;break;case 5:this.updateVisual();case 6:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),l.setEmptyType=function(e){var t=this.node.getChildByName("EmptyNode");if(t){for(var i,n=o(t.children);!(i=n()).done;){i.value.active=!1}var r=t.getChildByName("EmptySprite");switch(e){case m.Grass:r=t.getChildByName("GrassSprite");break;case m.Rock:r=t.getChildByName("StoneSprite");break;case m.Normal:r=t.getChildByName("EmptySprite");break;case m.Mud:r=t.getChildByName("MudSprite")}r&&(r.active=!0)}},l.switchToFlower=function(){var e=a(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!0,e.next=4,this.tileAnimation.switchToFlower(this.node);case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),l.updateVisual=function(){switch(this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!1,this.model.getState()){case f.Empty:break;case f.Dandelion:this.dandelionSpriteNode.active=!0;break;case f.Seed:this.seedSpriteNode.active=!0}},t}(p)).prototype,"tileAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=t(g.prototype,"seedSpriteNode",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=t(g.prototype,"dandelionSpriteNode",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),N=g))||N));l._RF.pop()}}}));

System.register("chunks:///_virtual/TimelineHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t,r,i;return{setters:[function(e){n=e.asyncToGenerator,t=e.regeneratorRuntime,r=e.createForOfIteratorHelperLoose},function(e){i=e.cclegacy}],execute:function(){e("wait",(function(e){return new Promise((function(n){return setTimeout(n,e)}))})),i._RF.push({},"5d487VIxChIOa4+/vgmMhyl","TimelineHelper",void 0);e("TimelineHelper",function(){function e(){}return e.run=function(){var e=n(t().mark((function e(n,i){var u,a,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===i&&(i=0),u=r(n);case 2:if((a=u()).done){e.next=11;break}return o=a.value,e.next=6,o();case 6:if(!(i>0)){e.next=9;break}return e.next=9,this.wait(i);case 9:e.next=2;break;case 11:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}(),e.wait=function(e){return new Promise((function(n){return setTimeout(n,e)}))},e.runWithDelays=function(){var e=n(t().mark((function e(n){var i,u,a,o,c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=r(n);case 1:if((u=i()).done){e.next=10;break}return a=u.value,o=a[0],c=a[1],e.next=5,o();case 5:if(void 0===c){e.next=8;break}return e.next=8,this.wait(c);case 8:e.next=1;break;case 10:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),e}());i._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TimelineHelper.ts","./AudioHelper.ts"],(function(e){var n,t,r,i,a,o,c,l,s,u,p,h,d,f;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,a=e.asyncToGenerator,o=e.regeneratorRuntime},function(e){c=e.cclegacy,l=e._decorator,s=e.Node,u=e.tween,p=e.Vec3,h=e.Component},function(e){d=e.wait},function(e){f=e.AudioHelper}],execute:function(){var g,y,m,v,w;c._RF.push({},"b66f4u1kghK8bQ4VIqpz/gx","TopBoardAnimation",void 0);var A=l.ccclass,T=l.property;e("TopBoardAnimation",(g=A("TopBoardAnimation"),y=T(s),g((w=n((v=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return n=e.call.apply(e,[this].concat(a))||this,r(n,"challengeNode",w,i(n)),n}t(n,e);var c=n.prototype;return c.start=function(){},c.showChallenge=function(){var e=a(o().mark((function e(){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f.instance.playSFX("paper-rip"),u(this.challengeNode).to(1,{scale:new p(1,1,1)},{easing:"quadOut"}).start(),e.next=4,d(3e3);case 4:this.hideChallenge();case 5:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.hideChallenge=function(){f.instance.playSFX("paper-collect"),u(this.challengeNode).to(1,{scale:new p(1,0,1)},{easing:"quadIn"}).start()},n}(h)).prototype,"challengeNode",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TopBoardView.ts"],(function(e){var r,o,t,i,n,l,a,c;return{setters:[function(e){r=e.applyDecoratedDescriptor,o=e.inheritsLoose,t=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){n=e.cclegacy,l=e._decorator,a=e.Component},function(e){c=e.TopBoardView}],execute:function(){var s,p,u,f,d;n._RF.push({},"4f016kcT5dNQ5ZNeVsF7gj7","TopBoardController",void 0);var h=l.ccclass,v=l.property;e("TopBoardController",(s=h("TopBoardController"),p=v(c),s((d=r((f=function(e){function r(){for(var r,o=arguments.length,n=new Array(o),l=0;l<o;l++)n[l]=arguments[l];return r=e.call.apply(e,[this].concat(n))||this,t(r,"view",d,i(r)),r}return o(r,e),r.prototype.init=function(e,r){this.view&&(this.view.init(e,r),e>1&&this.view.showChallenge())},r}(a)).prototype,"view",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),u=f))||u));n._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TopBoardAnimation.ts"],(function(e){var n,t,o,i,l,r,a,c,s,u,h,p;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,o=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){l=e.cclegacy,r=e._decorator,a=e.Node,c=e.Label,s=e.UITransform,u=e.Vec3,h=e.Component},function(e){p=e.TopBoardAnimation}],execute:function(){var g,d,b,f,m,v,y,w,T,C,L;l._RF.push({},"3b4abkQmoRHdrp1eMH60YjY","TopBoardView",void 0);var N=r.ccclass,B=r.property;e("TopBoardView",(g=N("TopBoardView"),d=B(a),b=B(c),f=B(c),m=B(p),g((w=n((y=function(e){function n(){for(var n,t=arguments.length,l=new Array(t),r=0;r<t;r++)l[r]=arguments[r];return(n=e.call.apply(e,[this].concat(l))||this).level=0,o(n,"challengeNode",w,i(n)),o(n,"levelLabel",T,i(n)),o(n,"challengeLabel",C,i(n)),o(n,"animation",L,i(n)),n}t(n,e);var l=n.prototype;return l.start=function(){var e=this.node.getComponent(s).convertToWorldSpaceAR(u.ZERO),n=this.node.getComponent(s).height,t=this.challengeNode.getComponent(s).convertToNodeSpaceAR(e);this.challengeNode.getComponent(s).height;this.challengeNode.setPosition(t.x,t.y-n/2+22),this.challengeNode.setScale(new u(1,0,1)),this.node.on(a.EventType.TOUCH_END,this.showChallenge,this)},l.init=function(e,n){this.levelLabel.string=e.toString(),this.challengeLabel.string="only "+n+" moves!"},l.showChallenge=function(){this.animation.showChallenge()},n}(h)).prototype,"challengeNode",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=n(y.prototype,"levelLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=n(y.prototype,"challengeLabel",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=n(y.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=y))||v));l._RF.pop()}}}));

System.register("chunks:///_virtual/WindManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Direction.ts"],(function(e){var t,n,i,r,s,o,a,u;return{setters:[function(e){t=e.createForOfIteratorHelperLoose,n=e.asyncToGenerator,i=e.regeneratorRuntime},function(e){r=e.cclegacy},function(e){s=e.Direction,o=e.FOUR_DIRECTIONS,a=e.EIGHT_DIRECTIONS,u=e.DIRECTION_OFFSETS}],execute:function(){r._RF.push({},"54b126FrOFCc7OqLLLq/8jt","WindManager",void 0);e("WindManager",function(){function e(){this.allDirections=[],this.designedDirections=[],this.usedDirections=[]}var r=e.prototype;return r.init=function(e,n){if(this.designedDirections=[],n)for(var i,r=t(n);!(i=r()).done;){var u=i.value;this.designedDirections.push(s[u])}this.allDirections=4==e?o:a},r.reset=function(){this.usedDirections=[]},r.getDesignedDirection=function(){if(this.usedDirections.length<this.designedDirections.length){var e=this.designedDirections[this.usedDirections.length];return this.usedDirections.push(e),e}return null},r.getAvailableDirections=function(){var e=this;return this.allDirections.filter((function(t){return!e.usedDirections.includes(t)}))},r.getRandomdDirection=function(){var e=null,t=this.getAvailableDirections();return 0!=t.length&&(e=t[Math.floor(Math.random()*t.length)],this.usedDirections.push(e)),e},r.getWorstDirection=function(e){for(var n,i=1/0,r=[],s=this.getAvailableDirections(),o=t(s);!(n=o()).done;){var a=n.value,u=this.simulateWind(e,a),c=this.countNewlyCovered(e,u);c<i?(i=c,r=[a]):c===i&&r.push(a)}var l=r[Math.floor(Math.random()*r.length)];return this.usedDirections.push(l),l},r.walkWindPath=function(){var e=n(i().mark((function e(t,n,r){var s,o,a,c,l,h,d,f,g;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:s=u[n],o=s.dx,a=s.dy,c=0;case 2:if(!(c<t.length)){e.next=27;break}l=0;case 4:if(!(l<t[c].length)){e.next=24;break}if((h=t[c][l]).isFlower()){e.next=8;break}return e.abrupt("continue",21);case 8:d=c+o,f=l+a;case 10:if(!this.inBounds(d,f,t)){e.next=21;break}if(0!=(g=t[d][f]).canPassWind()){e.next=14;break}return e.abrupt("break",21);case 14:if(1!=g.canHoldSeed()){e.next=17;break}return e.next=17,r(h,g);case 17:d+=o,f+=a,e.next=10;break;case 21:l++,e.next=4;break;case 24:c++,e.next=2;break;case 27:case"end":return e.stop()}}),e,this)})));return function(t,n,i){return e.apply(this,arguments)}}(),r.inBounds=function(e,t,n){return e>=0&&e<n.length&&t>=0&&t<n[e].length},r.simulateWind=function(e,t){var n=e.map((function(e){return e.map((function(e){return e.cloneState()}))}));return this.walkWindPath(n,t,(function(e,t){t.setSeed()})),n},r.countNewlyCovered=function(e,t){for(var n=0,i=0;i<e.length;i++)for(var r=0;r<e[i].length;r++)e[i][r].isEmpty()&&!t[i][r].isEmpty()&&n++;return n},e}());r._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,