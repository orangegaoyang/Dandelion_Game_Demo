System.register("chunks:///_virtual/AdjustSceneBase.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,n,o,s,i,r;return{setters:[function(e){t=e.inheritsLoose},function(e){n=e.cclegacy,o=e._decorator,s=e.view,i=e.ResolutionPolicy,r=e.Component}],execute:function(){var c;n._RF.push({},"4418aYMKdhAwp9WZ4xLawTd","AdjustSceneBase",void 0);var u=o.ccclass;o.property,e("AdjustSceneBase",u("AdjustSceneBase")(c=function(e){function n(){return e.apply(this,arguments)||this}return t(n,e),n.prototype.onLoad=function(){s.setDesignResolutionSize(1080,1920,i.SHOW_ALL),s.resizeWithBrowserSize(!0)},n}(r))||c);n._RF.pop()}}}));

System.register("chunks:///_virtual/AudioHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GlobalSettings.ts"],(function(o){var n,t,e,i,r,s,u,c,l;return{setters:[function(o){n=o.inheritsLoose},function(o){t=o.cclegacy,e=o._decorator,i=o.director,r=o.AudioSource,s=o.resources,u=o.AudioClip,c=o.Component},function(o){l=o.GlobalSettings}],execute:function(){var a,d;t._RF.push({},"2585c4z1GBJD67FFVHpfHq5","AudioHelper",void 0);var p=e.ccclass;e.property,o("AudioHelper",p("AudioHelper")(((d=function(o){function t(){for(var n,t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];return(n=o.call.apply(o,[this].concat(e))||this)._bgm=void 0,n._sfx=void 0,n}n(t,o);var e=t.prototype;return e.onLoad=function(){t.instance=this,i.addPersistRootNode(this.node),this._bgm=this.node.addComponent(r),this._bgm.volume=.5,this._sfx=this.node.addComponent(r),this._sfx.volume=1},e.playBGM=function(){var o=this;s.load("Sounds/bgm",u,(function(n,t){if(n)return console.error(n);l.musicOn&&(o._bgm.clip=t,o._bgm.loop=!0,o._bgm.play())}))},e.playSFX=function(o){var n=this;l.sfxOn&&s.load("Sounds/"+o,u,(function(o,t){if(o)return console.error(o);n._sfx.playOneShot(t)}))},e.setMusicEnabled=function(o){var n;o?this.playBGM():null==(n=this._bgm)||n.stop()},t}(c)).instance=void 0,a=d))||a);t._RF.pop()}}}));

System.register("chunks:///_virtual/BackgroundController.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,i,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.Sprite,i=t.view,c=t.Component}],execute:function(){var a;r._RF.push({},"6a130iNz3dA1J7bzQMtValq","BackgroundController",void 0);var s=o.ccclass;o.property,t("BackgroundController",s("BackgroundController")(a=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this.getComponent(n);if(t&&t.spriteFrame){var e=i.getVisibleSize(),r=t.spriteFrame.rect.width,o=t.spriteFrame.rect.height,c=e.width/r,a=e.height/o,s=Math.max(c,a);this.node.setScale(s,s)}},r}(c))||a);r._RF.pop()}}}));

System.register("chunks:///_virtual/BoardUtils.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CellState.ts","./TileModel.ts","./SeededRandom.ts"],(function(e){var r,n,t,o,a;return{setters:[function(e){r=e.createForOfIteratorHelperLoose},function(e){n=e.cclegacy},function(e){t=e.TileModifier},function(e){o=e.TileModel},function(e){a=e.SeededRandom}],execute:function(){n._RF.push({},"dba71MaBc9NaY6ySc2oJDr1","BoardUtils",void 0);e("BoardUtils",function(){function e(){}return e.cloneBoard=function(e){return e.map((function(e){return e.map((function(e){return e.cloneState()}))}))},e.getAllEmptyTiles=function(e,r){for(var n=[],t=0;t<e.length;t++)for(var o=0;o<e[0].length;o++){var a=e[t][o];a.isEmpty()&&a.canPlant()&&n.push({x:t,y:o}),r&&a.isSeed()&&a.canPlant()&&n.push({x:t,y:o})}return n},e.parseBoardData=function(e){for(var r=[],n=0;n<e.length;n++){for(var t=[],a=0;a<e[n].length;a++)t.push(new o(e[n][a]));r.push(t)}return r},e.isBoardFullyCovered=function(e){for(var n,t=r(e);!(n=t()).done;)for(var o,a=n.value,i=r(a);!(o=i()).done;){if(!o.value.isCovered())return!1}return!0},e.countNewlyCovered=function(e,r){for(var n=0,t=0;t<e.length;t++)for(var o=0;o<e[t].length;o++)e[t][o].isEmpty()&&!r[t][o].isEmpty()&&n++;return n},e.inBounds=function(e,r,n){return e>=0&&e<n.length&&r>=0&&r<n[e].length},e.generateBoardFromSeed=function(e){for(var r=new a(e),n=[],o=0;o<5;o++){for(var i=[],u=0;u<5;u++){var l=r.next();l<.05?i.push(t.Rock):l<.1?i.push(t.Mud):l<.2?i.push(t.Grass):i.push(t.Normal)}n.push(i)}return n},e.generateBoardByTileNumbers=function(e,r,n){var o=Array.from({length:5},(function(){return Array(5).fill(t.Normal)}));return this.placeTiles(o,t.Mud,e),this.placeTiles(o,t.Grass,r),this.placeTiles(o,t.Rock,n),o},e.placeTiles=function(e,n,t){for(var o,a=this.pickRandomPositions(e,t),i=r(a);!(o=i()).done;){var u=o.value,l=u.x,s=u.y;e[l][s]=n}},e.pickRandomPositions=function(e,r){for(var n=this.getEmptyTiles(e),t=[];t.length<r&&n.length>0;){var o=Math.floor(Math.random()*n.length);t.push(n[o]),n.splice(o,1)}return t},e.getEmptyTiles=function(e,r){void 0===r&&(r=!0);for(var n=e.length,t=e[0].length,o=[],a=0;a<n;a++)for(var i=0;i<t;i++)if(1===e[a][i]){if(r&&a===Math.floor(n/2)&&i===Math.floor(t/2))continue;o.push({x:a,y:i})}return o},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/CellState.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"61874ADHPdAnZJz7xSGitiy","CellState",void 0);e("CellState",function(e){return e[e.Empty=0]="Empty",e[e.Dandelion=1]="Dandelion",e[e.Seed=2]="Seed",e}({})),e("TileModifier",function(e){return e[e.Normal=1]="Normal",e[e.Mud=2]="Mud",e[e.Grass=3]="Grass",e[e.Rock=4]="Rock",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/CompassAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,i,r,o,a,s,c,l,p,u,f,m,g;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){s=e.cclegacy,c=e._decorator,l=e.Node,p=e.ParticleSystem2D,u=e.tween,f=e.Component},function(e){m=e.AudioHelper},function(e){g=e.EffectsHelper}],execute:function(){var y,d,v,b,h,w,S;s._RF.push({},"c1543ts8bNFvbOQsJSx0vum","CompassAnimation",void 0);var A=c.ccclass,C=c.property;e("CompassAnimation",(y=A("CompassAnimation"),d=C(l),v=C(l),y((w=n((h=function(e){function n(){for(var n,t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];return n=e.call.apply(e,[this].concat(o))||this,i(n,"pointer",w,r(n)),i(n,"windEffect",S,r(n)),n.angleMap={N:0,NE:315,E:270,SE:225,S:180,SW:135,W:90,NW:45},n.rotationOffset=0,n}t(n,e);var s=n.prototype;return s.blow=function(e){var n,t=this.windEffect.getComponent(p),i=null!=(n=this.angleMap[e])?n:0;t.angle=i+90,t.resetSystem()},s.stopIdle=function(e){u(e).stop()},s.idleCompass=function(){this.pointer&&u(this.pointer).repeatForever(u().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},s.pointAnimate=function(e){var n=this;return new Promise((function(t){var i;m.instance.playSFX("spin");var r=(null!=(i=n.angleMap[e])?i:0)+720+n.rotationOffset;n.rotationOffset+=720,n.stopIdle(n.pointer),u(n.pointer).to(3,{angle:r},{easing:"cubicOut"}).call((function(){m.instance.playSFX("blowing"),n.idleCompass(),t()})).start()}))},s.patchAnimate=function(){var e=o(a().mark((function e(n){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g.bounceScale(n);case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),n}(f)).prototype,"pointer",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=n(h.prototype,"windEffect",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=h))||b));s._RF.pop()}}}));

System.register("chunks:///_virtual/CompassController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassView.ts"],(function(e){var t,r,n,i,o,s,a,c,l,u;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,n=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,s=e.regeneratorRuntime},function(e){a=e.cclegacy,c=e._decorator,l=e.Component},function(e){u=e.CompassView}],execute:function(){var p,v,f,h,m;a._RF.push({},"ae7c7YrzmRKA5Za+aea/vDG","CompassController",void 0);var w=c.ccclass,d=c.property;e("CompassController",(p=w("CompassController"),v=d(u),p((m=t((h=function(e){function t(){for(var t,r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,n(t,"view",m,i(t)),t.model=void 0,t}r(t,e);var a=t.prototype;return a.init=function(e){this.model=e,this.view&&this.view.init(e)},a.reset=function(){this.view.reset()},a.blowWind=function(){var e=o(s().mark((function e(t){var r;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,null==(r=this.view)?void 0:r.blowWind(t);case 2:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t}(l)).prototype,"view",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=h))||f));a._RF.pop()}}}));

System.register("chunks:///_virtual/CompassModel.ts",["cc"],(function(i){var t;return{setters:[function(i){t=i.cclegacy}],execute:function(){t._RF.push({},"789b5R2Nr9FBbS5WPXiprgR","CompassModel",void 0);i("CompassModel",function(){function i(i,t){this.allDirections=[],this.usedDirections=[],this.todaysWind=null,this.indicatorListeners=[],this.allDirections=i,this.todaysWind=t}var t=i.prototype;return t.reset=function(){this.usedDirections=[],this.emitChange({usedDirection:null})},t.getAllDirections=function(){return this.allDirections},t.getTodaysWind=function(){return this.todaysWind},t.getUsedDirection=function(){return this.usedDirections},t.getAvailableDirections=function(){var i=this;return this.allDirections.filter((function(t){return!i.usedDirections.includes(t)}))},t.setUsedDirection=function(i){this.usedDirections.push(i),this.emitChange({usedDirection:i})},t.onChange=function(i){this.indicatorListeners.push(i)},t.emitChange=function(i){this.indicatorListeners.forEach((function(t){return t(i)}))},i}());t._RF.pop()}}}));

System.register("chunks:///_virtual/CompassView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassAnimation.ts","./Direction.ts","./TimelineHelper.ts"],(function(t){var e,i,n,r,s,o,a,c,p,u,l,d,h,m,f,v;return{setters:[function(t){e=t.applyDecoratedDescriptor,i=t.inheritsLoose,n=t.initializerDefineProperty,r=t.assertThisInitialized,s=t.createForOfIteratorHelperLoose,o=t.asyncToGenerator,a=t.regeneratorRuntime},function(t){c=t.cclegacy,p=t._decorator,u=t.Sprite,l=t.Node,d=t.Label,h=t.Component},function(t){m=t.CompassAnimation},function(t){f=t.Direction},function(t){v=t.wait}],execute:function(){var b,y,g,w,S,W,H,C,k,A,x,N,z,D,L,T,V;c._RF.push({},"ed321HgZiBLGKDTC9/hdyVu","CompassView",void 0);var E=p.ccclass,I=p.property;t("CompassView",(b=E("CompassView"),y=I(m),g=I([u]),w=I(l),S=I(l),W=I(l),H=I(l),C=I(d),b((x=e((A=function(t){function e(){for(var e,i=arguments.length,s=new Array(i),o=0;o<i;o++)s[o]=arguments[o];return e=t.call.apply(t,[this].concat(s))||this,n(e,"compassAnimation",x,r(e)),n(e,"coverSprites",N,r(e)),n(e,"pointerNode",z,r(e)),n(e,"compass4Sprite",D,r(e)),n(e,"compass8Sprite",L,r(e)),n(e,"todaysWindNode",T,r(e)),n(e,"todaysWindHint",V,r(e)),e.model=void 0,e}i(e,t);var c=e.prototype;return c.init=function(t){var e=this;this.model=t,this.reset();var i=this.model.getTodaysWind();null==i?(this.todaysWindNode.active=!1,this.compass4Sprite.setSiblingIndex(0),this.compass8Sprite.setSiblingIndex(0),4==t.getAllDirections().length?(this.compass4Sprite.active=!0,this.compass8Sprite.active=!1):(this.compass8Sprite.active=!0,this.compass4Sprite.active=!1)):(this.compass4Sprite.active=!1,this.compass8Sprite.active=!1,this.todaysWindNode.active=!0,this.settodaysWindHint(i)),t.onChange((function(t){return e.onModelChanged(t)}))},c.onModelChanged=function(){var t=o(a().mark((function t(e){return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null!=e.usedDirection){t.next=4;break}this.reset(),t.next=7;break;case 4:return t.next=6,v(2e3);case 6:this.showCover(e.usedDirection);case 7:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),c.hideAllCovers=function(){for(var t,e=s(this.coverSprites);!(t=e()).done;){t.value.node.active=!1}},c.showCover=function(){var t=o(a().mark((function t(e){var i;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(0!=(i=this.coverSprites[e].node).active){t.next=5;break}return i.active=!0,t.next=5,this.compassAnimation.patchAnimate(i);case 5:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),c.blowWind=function(){var t=o(a().mark((function t(e){return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.compassAnimation.pointAnimate(f[e]);case 2:this.compassAnimation.blow(f[e]);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),c.reset=function(){this.pointerNode.angle=0,this.hideAllCovers()},c.settodaysWindHint=function(t){switch(t){case f.N:this.todaysWindHint.string="↑";break;case f.NE:this.todaysWindHint.string="↗";break;case f.NW:this.todaysWindHint.string="↖";break;case f.S:this.todaysWindHint.string="↓";break;case f.SE:this.todaysWindHint.string="↘";break;case f.SW:this.todaysWindHint.string="↙";break;case f.E:this.todaysWindHint.string="→";break;case f.E:this.todaysWindHint.string="←"}},e}(h)).prototype,"compassAnimation",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),N=e(A.prototype,"coverSprites",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),z=e(A.prototype,"pointerNode",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),D=e(A.prototype,"compass4Sprite",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(A.prototype,"compass8Sprite",[W],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=e(A.prototype,"todaysWindNode",[H],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V=e(A.prototype,"todaysWindHint",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),k=A))||k));c._RF.pop()}}}));

System.register("chunks:///_virtual/Direction.ts",["cc"],(function(E){var S;return{setters:[function(E){S=E.cclegacy}],execute:function(){var d;S._RF.push({},"16eefORzrhC9JFlNqVmXGa9","Direction",void 0);var N=E("Direction",function(E){return E[E.N=0]="N",E[E.NE=1]="NE",E[E.E=2]="E",E[E.SE=3]="SE",E[E.S=4]="S",E[E.SW=5]="SW",E[E.W=6]="W",E[E.NW=7]="NW",E}({}));E("DIRECTION_OFFSETS",((d={})[N.N]={dx:-1,dy:0},d[N.NE]={dx:-1,dy:1},d[N.E]={dx:0,dy:1},d[N.SE]={dx:1,dy:1},d[N.S]={dx:1,dy:0},d[N.SW]={dx:1,dy:-1},d[N.W]={dx:0,dy:-1},d[N.NW]={dx:-1,dy:-1},d)),E("FOUR_DIRECTIONS",[N.N,N.E,N.S,N.W]),E("EIGHT_DIRECTIONS",[N.N,N.NE,N.E,N.SE,N.S,N.SW,N.W,N.NW]);S._RF.pop()}}}));

System.register("chunks:///_virtual/EffectsHelper.ts",["cc"],(function(e){var n,t,c;return{setters:[function(e){n=e.cclegacy,t=e.Vec3,c=e.tween}],execute:function(){n._RF.push({},"07256waQwhMU6vjhrECp4MJ","EffectsHelper",void 0);e("EffectsHelper",function(){function e(){}return e.bounceScale=function(e,n){return void 0===n&&(n={}),new Promise((function(r){var u,s,i=null!=(u=n.duration)?u:.25,a=null!=(s=n.scale)?s:1.2;e.setScale(new t(.5,.5,1)),e.active=!0,c(e).to(i,{scale:new t(a,a,1)},{easing:"backOut"}).to(.1,{scale:new t(1,1,1)},{easing:"sineIn"}).call((function(){return r()})).start()}))},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(e){var o,n,t,r,i,a,l,c,s,p,u,f;return{setters:[function(e){o=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Node,c=e.tween,s=e.UITransform,p=e.Vec3,u=e.Component},function(e){f=e.AudioHelper}],execute:function(){var y,d,w,v,F;i._RF.push({},"53b63mRvBJHhIQccMJUmJaX","FlowerAnimation",void 0);var m=a.ccclass,g=a.property;e("FlowerAnimation",(y=m("FlowerAnimation"),d=g(l),y((F=o((v=function(e){function o(){for(var o,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return o=e.call.apply(e,[this].concat(i))||this,t(o,"flyFlower",F,r(o)),o}n(o,e);var i=o.prototype;return i.plant=function(e,o){var n=this;return new Promise((function(t){f.instance.playSFX("bubble-pop");var r=e.getWorldPosition(),i=o.getWorldPosition();n.flyFlower.active=!0,n.flyFlower.setWorldPosition(r);var a=r.clone();a.y+=10,a.x+=10,c(n.flyFlower).to(.2,{position:n.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(a)},{easing:"quadOut"}).to(.5,{position:n.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(i)},{easing:"quadInOut"}).call((function(){n.flyFlower.active=!1,t()})).start()}))},i.stopIdle=function(e){c(e).stop()},i.idleIndicator=function(e){var o=Math.random();c(e).delay(o).repeatForever(c().by(1,{position:new p(0,5,0)},{easing:"sineInOut"}).by(1,{position:new p(0,-5,0)},{easing:"sineInOut"})).start()},o}(u)).prototype,"flyFlower",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=v))||w));i._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./FlowerAnimation.ts"],(function(e){var n,t,i,o,r,a,l,c,s,u,f;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,i=e.initializerDefineProperty,o=e.assertThisInitialized,r=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){l=e.cclegacy,c=e._decorator,s=e.Node,u=e.Component},function(e){f=e.FlowerAnimation}],execute:function(){var h,w,p,d,v,m,I;l._RF.push({},"cf16aSCRT1PuJqI4iQAmW4b","FlowerView",void 0);var g=c.ccclass,y=c.property;e("FlowerView",(h=g("FlowerView"),w=y(s),p=y(f),h((m=n((v=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return n=e.call.apply(e,[this].concat(r))||this,i(n,"flowerContainer",m,o(n)),i(n,"flowerAnimation",I,o(n)),n.flowerIcons=void 0,n.model=void 0,n.ctl=void 0,n}t(n,e);var l=n.prototype;return l.onLoad=function(){this.flowerIcons=this.flowerContainer.children},l.init=function(e,n,t){var i=this;this.ctl=t,this.model=n,this.model.onRemainingChange((function(e){return i.onModelChanged(e)}));for(var o=0;o<this.flowerIcons.length;o++)this.flowerIcons[o].active=o<e,o<e&&this.flowerIcons[o].active?this.flowerAnimation.idleIndicator(this.flowerIcons[o]):this.flowerAnimation.stopIdle(this.flowerIcons[o])},l.getIndicatorNode=function(e){if(e<this.flowerIcons.length)return this.flowerIcons[e-1]},l.onModelChanged=function(){var e=r(a().mark((function e(n){var t;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=n.remaining?n.remaining:0,this.updateFlower(t);case 2:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),l.updateFlower=function(){var e=r(a().mark((function e(n){var t,i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=0;t<this.flowerIcons.length;t++)i=this.flowerIcons[t],t<n?0==i.active&&(i.active=!0,this.flowerAnimation.idleIndicator(i)):(i.active=!1,this.flowerAnimation.stopIdle(i));case 1:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),n}(u)).prototype,"flowerContainer",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=n(v.prototype,"flowerAnimation",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=v))||d));l._RF.pop()}}}));

System.register("chunks:///_virtual/GameEnums.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"7a4afkuam5EaqgbSuhQGOgS","GameEnums",void 0);e("GamePhase",function(e){return e[e.Planting=0]="Planting",e[e.Blowing=1]="Blowing",e[e.GameOver=2]="GameOver",e}({})),e("GameMode",function(e){return e[e.main=0]="main",e[e.challenge=1]="challenge",e[e.daily=2]="daily",e}({}));n._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./LevelManager.ts","./WindManager.ts","./TimelineHelper.ts","./GameEnums.ts","./GameParamManager.ts","./CompassModel.ts","./Direction.ts","./PlantModel.ts"],(function(t){var e,n,s,i,a,o,r,l,u,c,h,d,p;return{setters:[function(t){e=t.asyncToGenerator,n=t.regeneratorRuntime},function(t){s=t.cclegacy},function(t){i=t.getLevelConfig},function(t){a=t.WindManager},function(t){o=t.wait},function(t){r=t.GameMode,l=t.GamePhase},function(t){u=t.GameParamManager},function(t){c=t.CompassModel},function(t){h=t.EIGHT_DIRECTIONS,d=t.FOUR_DIRECTIONS},function(t){p=t.PlantModel}],execute:function(){s._RF.push({},"a0000YzmrZNq6jS+N1zVPFc","GameManager",void 0),t("GameManager",function(){function t(){this.plantCtl=null,this.compassCtl=null,this.topBoardCtl=null,this.resultPopupCtl=null,this.instructionCtl=null,this.settingPopupCtl=null,this.windManager=new a,this.currentRound=0,this.maxRounds=7,this.isClickable=!0,this.phase=l.Planting,this.compassModel=void 0,this.plantModel=void 0,this.onGameWin=null}var s=t.prototype;return s.onLoad=function(){t.instance=this},s.setControllers=function(t,e,n,s,i,a){this.plantCtl=t,this.compassCtl=e,this.resultPopupCtl=n,this.instructionCtl=i,this.topBoardCtl=s,this.settingPopupCtl=a},s.loadLevel=function(t){var e=this;i(t,u.mode,(function(t){e.postloadLevel(t)}))},s.postloadLevel=function(t){this.maxRounds=t.round,this.windManager.init(t.direction,t.windSequence,u.mode),this.createCompassModel(t.direction,u.mode),this.plantModel=new p(t.round,t.board),this.plantCtl.init(t.round,this.plantModel),this.topBoardCtl.init(t.level,t.round,t.win_rate,u.mode),this.compassCtl.init(this.compassModel),this.instructionCtl.init(t.level,u.mode),this.plantCtl.setWindManager(this.windManager),this.settingPopupCtl.setGameManager(this),this.resetGame()},s.createCompassModel=function(t,e){var n=h;4==t&&(n=d);var s=null;e==r.daily&&(s=this.windManager.createTodaysDirection(n)),this.compassModel=new c(n,s)},s.resetGame=function(){this.plantModel.reset(),this.compassModel.reset(),this.compassCtl.reset(),this.currentRound=0,this.enterPlantingPhase()},s.handleEvent=function(t){this.plant(t)},s.enterPlantingPhase=function(){var t=e(n().mark((function t(){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.currentRound++,this.setPhase(l.Planting);case 2:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),s.enterBlowingPhase=function(){var t=e(n().mark((function t(){var e;return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.checkMediumResult()){t.next=12;break}return this.setPhase(l.Blowing),t.next=4,this.windManager.getWindDirection(this.plantCtl.getBoard(),this.compassModel.getAvailableDirections(),this.compassModel.getUsedDirection(),this.compassModel.getTodaysWind());case 4:return e=t.sent,t.next=7,this.compassCtl.blowWind(e);case 7:return t.next=9,this.plantCtl.blowSeeds(e);case 9:return this.compassModel.setUsedDirection(e),t.next=12,this.checkRoundResult();case 12:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),s.setPhase=function(t){this.phase=t},s.checkRoundResult=function(){var t=e(n().mark((function t(){var e;return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(console.log("checkRoundResult: ",this.currentRound,this.maxRounds),!(this.currentRound>=this.maxRounds)){t.next=4;break}return t.next=4,this.plantCtl.roundOver();case 4:e=this.plantCtl.isBoardFullyCovered(),this.currentRound>=this.maxRounds||e?(this.setPhase(l.GameOver),e?this.showResult(!0):this.showResult(!1)):this.enterPlantingPhase();case 6:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),s.checkMediumResult=function(){var t=this.plantCtl.isBoardFullyCovered();return console.log("checkMediumResult: ",t),t&&(this.setPhase(l.GameOver),this.showResult(!0)),t},s.showResult=function(){var t=e(n().mark((function t(e){var s=this;return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e?this.resultPopupCtl.show(!0,(function(){s.onGameWin&&s.onGameWin()})):this.resultPopupCtl.show(!1,(function(){s.resetGame()}));case 1:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),s.plant=function(){var t=e(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.instructionCtl.hide(),this.phase!=l.Planting||!this.isClickable){t.next=14;break}return this.isClickable=!1,t.next=5,this.plantCtl.plant(e);case 5:if(!t.sent){t.next=13;break}return t.next=9,o(1e3);case 9:this.enterBlowingPhase(),this.isClickable=!0,t.next=14;break;case 13:this.isClickable=!0;case 14:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),t}()).instance=void 0,s._RF.pop()}}}));

System.register("chunks:///_virtual/GameParamManager.ts",["cc","./GameEnums.ts"],(function(e){var a,n;return{setters:[function(e){a=e.cclegacy},function(e){n=e.GameMode}],execute:function(){a._RF.push({},"8e940LNjZdIDKArJiSmeX1M","GameParamManager",void 0);var r=e("GameParamManager",(function(){}));r.mode=n.main,r.seed="",a._RF.pop()}}}));

System.register("chunks:///_virtual/GameScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts","./PlantController.ts","./TopBoardController.ts","./InstructionController.ts","./ResultPopupController.ts","./CompassController.ts","./AdjustSceneBase.ts","./SettingsPopupController.ts","./GameParamManager.ts","./GameEnums.ts"],(function(t){var e,n,r,o,a,i,l,s,u,c,p,g,m,f,C,h,d,b,v,y;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,r=t.initializerDefineProperty,o=t.assertThisInitialized,a=t.asyncToGenerator,i=t.regeneratorRuntime},function(t){l=t.cclegacy,s=t._decorator,u=t.Sprite,c=t.director},function(t){p=t.GameManager},function(t){g=t.PlantController},function(t){m=t.TopBoardController},function(t){f=t.InstructionController},function(t){C=t.ResultPopupController},function(t){h=t.CompassController},function(t){d=t.AdjustSceneBase},function(t){b=t.SettingsPopupController},function(t){v=t.GameParamManager},function(t){y=t.GameMode}],execute:function(){var S,M,G,P,w,z,I,B,E,L,R,T,_,x,D,k,A;l._RF.push({},"527fbdMsT1E6Jz+yyM8250f","GameScene",void 0);var j=s.ccclass,F=s.property;t("GameScene",(S=j("GameScene"),M=F(g),G=F(m),P=F(f),w=F(C),z=F(b),I=F(h),B=F(u),S((R=e((L=function(t){function e(){for(var e,n=arguments.length,a=new Array(n),i=0;i<n;i++)a[i]=arguments[i];return e=t.call.apply(t,[this].concat(a))||this,r(e,"plantCtl",R,o(e)),r(e,"topBoardtCtl",T,o(e)),r(e,"instructionCtl",_,o(e)),r(e,"resultPopupCtl",x,o(e)),r(e,"settingsPopupCtl",D,o(e)),r(e,"compassCtl",k,o(e)),r(e,"backgroundNode",A,o(e)),e.gameManager=void 0,e.levelStr=void 0,e}n(e,t);var l=e.prototype;return l.start=function(){var t=a(i().mark((function t(){return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.levelStr=v.mode==y.main?"currentLevel":"currentChallenge",this.gameManager=new p,this.gameManager.setControllers(this.plantCtl,this.compassCtl,this.resultPopupCtl,this.topBoardtCtl,this.instructionCtl,this.settingsPopupCtl),t.next=5,this.initGame();case 5:this.gameManager.onGameWin=this.nextLevel.bind(this),c.on("TILE_CLICKED",this.gameManager.handleEvent,this.gameManager);case 7:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),l.initGame=function(){var t=parseInt(localStorage.getItem(this.levelStr)||"1");this.gameManager.loadLevel(t)},l.nextLevel=function(){var t=parseInt(localStorage.getItem(this.levelStr)||"1");localStorage.setItem(this.levelStr,(t+1).toString()),this.initGame()},l.onDestroy=function(){c.off("GAME_OVER",this.gameManager.handleEvent,this)},e}(d)).prototype,"plantCtl",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),T=e(L.prototype,"topBoardtCtl",[G],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_=e(L.prototype,"instructionCtl",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),x=e(L.prototype,"resultPopupCtl",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),D=e(L.prototype,"settingsPopupCtl",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),k=e(L.prototype,"compassCtl",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),A=e(L.prototype,"backgroundNode",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),E=L))||E));l._RF.pop()}}}));

System.register("chunks:///_virtual/GeneralModifier.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"006ccMNXb5Gj5eX3qiOFn6y","GeneralModifier",void 0);e("GeneralModifier",function(){function e(){}var n=e.prototype;return n.canPlant=function(){return!0},n.canHoldSeed=function(){return!0},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/GlobalSettings.ts",["cc","./AudioHelper.ts"],(function(n){var t,i;return{setters:[function(n){t=n.cclegacy},function(n){i=n.AudioHelper}],execute:function(){t._RF.push({},"c8b15vyRP1L0J9kP+KaWMok","GlobalSettings",void 0);n("GlobalSettings",{musicOn:!0,sfxOn:!0,vibrationOn:!0,reset:function(){this.musicOn=!0,this.sfxOn=!0,this.vibrationOn=!0},setMusicOn:function(n){this.musicOn=n,i.instance.setMusicEnabled(n)},setSfxOn:function(n){this.sfxOn=n},setVibrationOn:function(n){this.vibrationOn=n}});t._RF.pop()}}}));

System.register("chunks:///_virtual/GrassModifier.ts",["cc"],(function(n){var e;return{setters:[function(n){e=n.cclegacy}],execute:function(){e._RF.push({},"9b7ed65BIdHCYZ5nV1nzCAe","GrassModifier",void 0);n("GrassModifier",function(){function n(){}var e=n.prototype;return e.canPlant=function(){return!0},e.canHoldSeed=function(){return!0},e.onSeedLanded=function(n){n.setFlower()},n}());e._RF.pop()}}}));

System.register("chunks:///_virtual/GridAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,n,o,r,i,a,c,l,s,d,p,u,y,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,o=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,c=e.Prefab,l=e.instantiate,s=e.director,d=e.UITransform,p=e.UIOpacity,u=e.tween,y=e.Vec3,f=e.Component}],execute:function(){var v,m,g,h,P;i._RF.push({},"b36e8kkMb9Mla9EpFZ/lAEs","GridAnimation",void 0);var b=a.ccclass,A=a.property;e("GridAnimation",(v=b("GridAnimation"),m=A(c),v((P=t((h=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return t=e.call.apply(e,[this].concat(i))||this,o(t,"seedFlyPrefab",P,r(t)),t}return n(t,e),t.prototype.seedFly=function(e,t){var n=this;return new Promise((function(o){if(n.seedFlyPrefab){var r=l(n.seedFlyPrefab);n.node.addChild(r);var i=s.getScene().getChildByName("Canvas");i.addChild(r);var a=e.getWorldPosition(),c=t.getWorldPosition(),f=a.clone().lerp(c,.5);f.x+=80*(Math.random()-.5),f.y+=80*(Math.random()-.5),r.setWorldPosition(a);var v=i.getComponent(d).convertToNodeSpaceAR(a),m=i.getComponent(d).convertToNodeSpaceAR(f),g=i.getComponent(d).convertToNodeSpaceAR(c);r.setPosition(v);var h={value:0},P=360+360*Math.random(),b=r.getComponent(p);b&&(b.opacity=255),u(h).to(2,{value:1},{onUpdate:function(){var e=h.value,t=1-e,n=t*t*v.x+2*t*e*m.x+e*e*g.x,o=t*t*v.y+2*t*e*m.y+e*e*g.y;r.setPosition(new y(n,o,0)),r.angle=0+(P-0)*e;var i=1+(1.2-1)*e;r.setScale(new y(i,i,1)),b&&(b.opacity=255-75*e)}}).call((function(){r.destroy(),o()})).start()}}))},t}(f)).prototype,"seedFlyPrefab",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=h))||g));i._RF.pop()}}}));

System.register("chunks:///_virtual/GridView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridAnimation.ts","./TileView.ts"],(function(e){var i,t,r,n,o,a,s,l,c,d,h,u,p,f;return{setters:[function(e){i=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){s=e.cclegacy,l=e._decorator,c=e.Prefab,d=e.instantiate,h=e.Vec3,u=e.Component},function(e){p=e.GridAnimation},function(e){f=e.TileView}],execute:function(){var g,m,v,w,y,b,S;s._RF.push({},"3ffabj5l5RITYYoerqRe6ct","GridView",void 0);var z=l.ccclass,V=l.property;e("GridView",(g=z("GridView"),m=V(c),v=V(p),g((b=i((y=function(e){function i(){for(var i,t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];return(i=e.call.apply(e,[this].concat(o))||this).tileSize=100,i.spacing=2,r(i,"tilePrefab",b,n(i)),r(i,"gridAnimation",S,n(i)),i.tileNodes=[],i.modelViewMap=new Map,i.scale=void 0,i.model=void 0,i}t(i,e);var s=i.prototype;return s.init=function(e){this.model=e,this.createBoard(e.getBoard())},s.blowSeeds=function(){var e=o(a().mark((function e(i,t){var r,n;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.getNodeFromModel(i),n=this.getNodeFromModel(t),e.next=4,this.gridAnimation.seedFly(r,n);case 4:case"end":return e.stop()}}),e,this)})));return function(i,t){return e.apply(this,arguments)}}(),s.getNodeFromModel=function(e){var i;return null==(i=this.modelViewMap.get(e))?void 0:i.node},s.createBoard=function(e){this.node.removeAllChildren();var i=e.length;if(0!=i){var t=e[0].length;if(0!=t)for(var r=this.getScale(i,t),n=r.startX,o=r.startY,a=0;a<i;a++){this.tileNodes[a]=[];for(var s=0;s<t;s++){var l=d(this.tilePrefab),c=l.getComponent(f);c.init(e[a][s].getType(),e[a][s]),l.setPosition(new h(n+s*(this.tileSize+this.spacing),o-a*(this.tileSize+this.spacing),0)),this.node.setScale(this.scale,this.scale),this.node.addChild(l),this.modelViewMap.set(e[a][s],c),this.tileNodes[a][s]=l}}}},s.getScale=function(e,i){var t=e*this.tileSize+(e-1)*this.spacing;return this.scale=Math.min(540/t,1.8),{startX:-(e*this.tileSize+(e-1)*this.spacing)/2+this.tileSize/2,startY:(i*this.tileSize+(i-1)*this.spacing)/2-this.tileSize/2}},i}(u)).prototype,"tilePrefab",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=i(y.prototype,"gridAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=y))||w));s._RF.pop()}}}));

System.register("chunks:///_virtual/IdleAnimations.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,i,t,o,r,s,a,l,u,c;return{setters:[function(e){n=e.applyDecoratedDescriptor,i=e.inheritsLoose,t=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,s=e._decorator,a=e.Node,l=e.tween,u=e.Vec3,c=e.Component}],execute:function(){var p,d,y,f,g,b,I,h;r._RF.push({},"cdd78pOz89KMKUEUB7o2RDu","IdleAnimations",void 0);var v=s.ccclass,w=s.property;e("IdelAnimations",(p=v("IdelAnimations"),d=w(a),y=w(a),p(((h=function(e){function n(){for(var n,i=arguments.length,r=new Array(i),s=0;s<i;s++)r[s]=arguments[s];return n=e.call.apply(e,[this].concat(r))||this,t(n,"cloudFace",b,o(n)),t(n,"pointer",I,o(n)),n}i(n,e);var r=n.prototype;return r.onLoad=function(){n.instance=this,this.idleCloud(),this.idleCompass()},r.idleCloud=function(){this.cloudFace&&l(this.cloudFace).repeatForever(l().by(3,{position:new u(20,0,0)},{easing:"sineInOut"}).by(3,{position:new u(-20,0,0)},{easing:"sineInOut"})).start()},r.idleCompass=function(){this.pointer&&l(this.pointer).repeatForever(l().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},r.stopIdle=function(e){l(e).stop()},r.idleIndicator=function(e){var n=Math.random();l(e).delay(n).repeatForever(l().by(1,{position:new u(0,5,0)},{easing:"sineInOut"}).by(1,{position:new u(0,-5,0)},{easing:"sineInOut"})).start()},r.idleTileFlower=function(e){l(e).repeatForever(l().by(1.4,{position:new u(0,4,0)},{easing:"sineInOut"}).by(1.4,{position:new u(0,-4,0)},{easing:"sineInOut"})).start()},r.idleTileSeed=function(e){l(e).repeatForever(l().by(2,{position:new u(0,3,0)},{easing:"sineInOut"}).by(2,{position:new u(0,-3,0)},{easing:"sineInOut"})).start()},n}(c)).instance=void 0,b=n((g=h).prototype,"cloudFace",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=n(g.prototype,"pointer",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=g))||f));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var n,e,i,o,r,a,s,c,u,p,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,i=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,s=t.Node,c=t.tween,u=t.UIOpacity,p=t.Vec3,l=t.Component}],execute:function(){var f,g,d,h,y;r._RF.push({},"809d6F3gqxDZK/7JbNVkEZN","InstructionAnimation",void 0);var v=a.ccclass,N=a.property;t("InstructionAnimation",(f=v("InstructionAnimation"),g=N(s),f((y=n((h=function(t){function n(){for(var n,e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return n=t.call.apply(t,[this].concat(r))||this,i(n,"fingerNode",y,o(n)),n}e(n,t);var r=n.prototype;return r.hideFinger=function(){var t=this;c(this.fingerNode).stop(),c(this.fingerNode.getComponent(u)).to(.3,{opacity:0}).call((function(){return t.fingerNode.active=!1})).start()},r.idleFinger=function(){var t=this.fingerNode.position;this.fingerNode.active=!0,c(this.fingerNode).repeatForever(c().to(.4,{position:new p(t.x,t.y-15)},{easing:"sineInOut"}).to(.4,{position:new p(t.x,t.y)},{easing:"sineInOut"})).start()},n}(l)).prototype,"fingerNode",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=h))||d));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./InstructionView.ts","./GameEnums.ts"],(function(t){var n,e,i,r,o,c,s,u,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized},function(t){o=t.cclegacy,c=t._decorator,s=t.Component},function(t){u=t.InstructionView},function(t){l=t.GameMode}],execute:function(){var a,p,f,h,v;o._RF.push({},"8b8fcEWITpAXIUUAeK1s21O","InstructionController",void 0);var w=c.ccclass,y=c.property;t("InstructionController",(a=w("InstructionController"),p=y(u),a((v=n((h=function(t){function n(){for(var n,e=arguments.length,o=new Array(e),c=0;c<e;c++)o[c]=arguments[c];return n=t.call.apply(t,[this].concat(o))||this,i(n,"view",v,r(n)),n}e(n,t);var o=n.prototype;return o.init=function(t,n){this.view&&n==l.main&&1==t&&this.view.show()},o.hide=function(){this.view&&this.view.hide()},n}(s)).prototype,"view",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=h))||f));o._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./InstructionAnimation.ts"],(function(n){var t,i,e,o,r,a,c,s;return{setters:[function(n){t=n.applyDecoratedDescriptor,i=n.inheritsLoose,e=n.initializerDefineProperty,o=n.assertThisInitialized},function(n){r=n.cclegacy,a=n._decorator,c=n.Component},function(n){s=n.InstructionAnimation}],execute:function(){var u,l,p,h,f;r._RF.push({},"a8b3dhBlYNIYKU91I5oB63w","InstructionView",void 0);var d=a.ccclass,m=a.property;n("InstructionView",(u=d("InstructionView"),l=m(s),u((f=t((h=function(n){function t(){for(var t,i=arguments.length,r=new Array(i),a=0;a<i;a++)r[a]=arguments[a];return t=n.call.apply(n,[this].concat(r))||this,e(t,"animation",f,o(t)),t}i(t,n);var r=t.prototype;return r.start=function(){this.node.active=!1},r.hide=function(){this.animation.hideFinger()},r.show=function(){this.node.active=!0,this.animation.idleFinger()},t}(c)).prototype,"animation",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),p=h))||p));r._RF.pop()}}}));

System.register("chunks:///_virtual/LevelGenerator.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Simulator.ts","./BoardUtils.ts"],(function(e){var r,t,n,u,a;return{setters:[function(e){r=e.asyncToGenerator,t=e.regeneratorRuntime},function(e){n=e.cclegacy},function(e){u=e.Simulator},function(e){a=e.BoardUtils}],execute:function(){n._RF.push({},"34640fyurNHiIDDn+udAd9k","LevelGenerator",void 0);e("LevelGenerator",function(){function e(){}return e.generateBoardFromSeed=function(){var e=r(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=a.generateBoardFromSeed(r),e.next=3,u.simulate100(n,7,!1);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}(),e.generateBoardByTileNumbers=function(){var e=r(t().mark((function e(r,n,o){var c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=a.generateBoardByTileNumbers(r,n,o),e.next=3,u.simulate100(c,7,!0);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(r,t,n){return e.apply(this,arguments)}}(),e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/LevelManager.ts",["cc","./GameEnums.ts"],(function(e){var n,l,r,o;return{setters:[function(e){n=e.cclegacy,l=e.resources,r=e.JsonAsset},function(e){o=e.GameMode}],execute:function(){e("getLevelConfig",(function(e,n,t){var c=null;if(n==o.main&&e<=5){var a;(c=i[Math.min(e-1,i.length-1)]).direction=null!=(a=c.direction)?a:8,t&&t(c)}else c=function(e,n,i){var t="levels/"+(n==o.challenge?"challenge_level":"main_level")+"/level_"+String(e).padStart(3,"0");return l.load(t,r,(function(e,n){if(e)console.error("加载失败",e),i&&i(null);else{var l=n.json;i(l)}})),null}(e,n,t)})),n._RF.push({},"0135eEnWntLcpY2ffWv6jeY","LevelManager",void 0);var i=[{level:1,round:3,direction:4,windSequence:["W"],board:[[1,1],[1,1]]},{level:2,round:2,direction:4,windSequence:["W","E"],board:[[1,1],[1,1]]},{level:3,round:6,windSequence:["E"],direction:8,board:[[1,1,1],[1,1,1],[1,1,1]]},{level:4,round:6,direction:8,board:[[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]]},{level:5,round:6,direction:8,board:[[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1]]}];n._RF.pop()}}}));

System.register("chunks:///_virtual/LevelTestScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts"],(function(e){var r,t,n,a,i,o,c,l;return{setters:[function(e){r=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,a=e.assertThisInitialized},function(e){i=e.cclegacy,o=e._decorator,c=e.Component},function(e){l=e.GameManager}],execute:function(){var s,u,p,g,v;i._RF.push({},"0bdaateNrNOdIbiDCwxjrgM","LevelTestScene",void 0);var d=o.ccclass,f=o.property;e("LevelTestScene",(s=d("LevelTestScene"),u=f(l),s((v=r((g=function(e){function r(){for(var r,t=arguments.length,i=new Array(t),o=0;o<t;o++)i[o]=arguments[o];return r=e.call.apply(e,[this].concat(i))||this,n(r,"gameManager",v,a(r)),r}return t(r,e),r.prototype.start=function(){var e=window.__currentTestLevel__||{level:1,round:3,direction:4,windSequence:["W"],board:[[1,1],[1,1]]};this.gameManager&&this.gameManager.loadLevel(e)},r}(c)).prototype,"gameManager",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),p=g))||p));i._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./CompassAnimation.ts","./CompassView.ts","./TopBoardAnimation.ts","./TopBoardView.ts","./FlowerAnimation.ts","./FlowerView.ts","./GridAnimation.ts","./GridView.ts","./ResultPopupAnimation.ts","./ResultPopupView.ts","./TileAnimation.ts","./TileView.ts","./InstructionAnimation.ts","./InstructionView.ts","./CellState.ts","./Direction.ts","./GameEnums.ts","./CompassController.ts","./InstructionController.ts","./PlantController.ts","./ResultPopupController.ts","./SettingsPopupController.ts","./TileController.ts","./TopBoardController.ts","./EffectsHelper.ts","./OneShotParticle.ts","./SceneSwitchAnimation.ts","./GameManager.ts","./GameParamManager.ts","./LevelManager.ts","./PlantManager.ts","./BoardUtils.ts","./WindManager.ts","./CompassModel.ts","./PlantModel.ts","./TileModel.ts","./GeneralModifier.ts","./GrassModifier.ts","./Modifiers.ts","./MudModifier.ts","./RockModifier.ts","./TileModifierInterface.ts","./AdjustSceneBase.ts","./GameScene.ts","./LevelTestScene.ts","./MenuScene.ts","./PortraitScene.ts","./StartScene.ts","./AudioHelper.ts","./BackgroundController.ts","./GlobalSettings.ts","./IdleAnimations.ts","./LevelGenerator.ts","./PrintHelper.ts","./ResizeHandler.ts","./SeededRandom.ts","./Simulator.ts","./TimelineHelper.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/MenuScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SceneSwitchAnimation.ts","./AudioHelper.ts","./GameParamManager.ts","./GameEnums.ts","./AdjustSceneBase.ts"],(function(e){var n,t,r,i,c,a,o,u,s,l,f,p,h,d,m,w;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,c=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){o=e.cclegacy,u=e._decorator,s=e.Node,l=e.ParticleSystem2D,f=e.director},function(e){p=e.SceneSwitchAnimation},function(e){h=e.AudioHelper},function(e){d=e.GameParamManager},function(e){m=e.GameMode},function(e){w=e.AdjustSceneBase}],execute:function(){var S,y,M,g,v,A,b;o._RF.push({},"e16e00CmO9OrqYbQPWwWqRA","MenuScene",void 0);var k=u.ccclass,x=u.property;e("MenuScene",(S=k("MenuScene"),y=x(p),M=x(s),S((A=n((v=function(e){function n(){for(var n,t=arguments.length,c=new Array(t),a=0;a<t;a++)c[a]=arguments[a];return n=e.call.apply(e,[this].concat(c))||this,r(n,"sceneAnimation",A,i(n)),r(n,"windEffect",b,i(n)),n}t(n,e);var o=n.prototype;return o.start=function(){h.instance.playBGM(),this.schedule(this.windBlow,5)},o.windBlow=function(){this.windEffect.getComponent(l).resetSystem()},o.onClickMainMenu=function(){var e=c(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return d.mode=m.main,e.next=3,this.sceneAnimation.switch();case 3:f.loadScene("portraitScene");case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),o.onClickChallengeMenu=function(){var e=c(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return d.mode=m.challenge,e.next=3,this.sceneAnimation.switch();case 3:f.loadScene("portraitScene");case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),o.onClickDailyMenu=function(){var e=c(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return d.mode=m.daily,e.next=3,this.sceneAnimation.switch();case 3:f.loadScene("portraitScene");case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),o.onClickSettingMenu=function(){alert("under construction")},n}(w)).prototype,"sceneAnimation",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=n(v.prototype,"windEffect",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=v))||g));o._RF.pop()}}}));

System.register("chunks:///_virtual/Modifiers.ts",["cc","./MudModifier.ts","./GrassModifier.ts","./RockModifier.ts","./GeneralModifier.ts"],(function(i){var e,r,o,f,s;return{setters:[function(i){e=i.cclegacy},function(i){r=i.MudModifier},function(i){o=i.GrassModifier},function(i){f=i.RockModifier},function(i){s=i.GeneralModifier}],execute:function(){e._RF.push({},"f9e83JJsHNHsZcG4b1HhSwE","Modifiers",void 0);i("ModifierMap",{generalModifier:s,grassModifier:o,mudModifier:r,rockModifier:f});e._RF.pop()}}}));

System.register("chunks:///_virtual/MudModifier.ts",["cc"],(function(n){var t;return{setters:[function(n){t=n.cclegacy}],execute:function(){t._RF.push({},"2480b5cF8NMEIASgGCVqI6U","MudModifier",void 0);n("MudModifier",function(){function n(){}var t=n.prototype;return t.canPlant=function(){return!1},t.canHoldSeed=function(){return!0},n}());t._RF.pop()}}}));

System.register("chunks:///_virtual/OneShotParticle.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.ParticleSystem2D,c=t.Component}],execute:function(){var i;r._RF.push({},"2a606wOyVpItYUnzW74HPaB","OneShotParticle",void 0);var s=o.ccclass;o.property,t("VictoryParticle",s("VictoryParticle")(i=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this,e=this.getComponent(n);e&&e.resetSystem(),setTimeout((function(){t.node.destroy()}),4e3)},r}(c))||i);r._RF.pop()}}}));

System.register("chunks:///_virtual/PlantController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridView.ts","./FlowerView.ts","./TimelineHelper.ts","./FlowerAnimation.ts"],(function(e){var t,n,r,i,o,a,l,s,u,c,d,f,p,w;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime,l=e.createForOfIteratorHelperLoose},function(e){s=e.cclegacy,u=e._decorator,c=e.Component},function(e){d=e.GridView},function(e){f=e.FlowerView},function(e){p=e.wait},function(e){w=e.FlowerAnimation}],execute:function(){var h,m,g,v,b,y,x,F,V;s._RF.push({},"856dcU59lJIR7+xm/FGgHiW","PlantController",void 0);var k=u.ccclass,P=u.property;e("PlantController",(h=k("PlantController"),m=P(f),g=P(w),v=P(d),h((x=t((y=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"flowerView",x,i(t)),r(t,"animation",F,i(t)),r(t,"gridView",V,i(t)),t.model=null,t.windManager=null,t}n(t,e);var s=t.prototype;return s.init=function(e,t){this.model=t,this.flowerView.init(e,this.model,this),this.gridView.init(this.model)},s.setWindManager=function(e){this.windManager=e},s.plant=function(){var e=o(a().mark((function e(t){var n,r,i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.canPlant()){e.next=7;break}return this.model.plantOne(t),n=this.model.getRemaining(),r=this.flowerView.getIndicatorNode(n+1),i=this.getNodeFromModel(t),e.next=7,this.animation.plant(r,i);case 7:return e.abrupt("return",t.setFlower());case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),s.roundOver=function(){var e=o(a().mark((function e(){var t,n,r,i,o,s,u;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.model.getBoard(),e.next=3,p(2e3);case 3:n=l(t);case 4:if((r=n()).done){e.next=17;break}i=r.value,o=l(i);case 7:if((s=o()).done){e.next=15;break}if(!(u=s.value).isSeed()||!u.canPlant()){e.next=13;break}return u.setFlower(),e.next=13,p(500);case 13:e.next=7;break;case 15:e.next=4;break;case 17:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),s.blowSeeds=function(){var e=o(a().mark((function e(t){var n,r=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.model.getBoard(),this.windManager.walkWindPath(n,t,o(a().mark((function e(t,n){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r.gridView.blowSeeds(t,n).then((function(){console.log("plant control to seed"),n.setSeed()}));case 1:case"end":return e.stop()}}),e)})))),e.next=4,p(2e3);case 4:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),s.isBoardFullyCovered=function(){return this.model.isBoardFullyCovered()},s.getBoard=function(){return this.model.getBoard()},s.getNodeFromModel=function(e){return this.gridView.getNodeFromModel(e)},t}(c)).prototype,"flowerView",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),F=t(y.prototype,"animation",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V=t(y.prototype,"gridView",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=y))||b));s._RF.pop()}}}));

System.register("chunks:///_virtual/PlantManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./BoardUtils.ts"],(function(n){var t,e,r,a,i;return{setters:[function(n){t=n.asyncToGenerator,e=n.regeneratorRuntime,r=n.createForOfIteratorHelperLoose},function(n){a=n.cclegacy},function(n){i=n.BoardUtils}],execute:function(){a._RF.push({},"b62d2YicRxGwL1ITEpE7i8j","PlantManager",void 0);n("PlantManager",function(){function n(){this.windManager=null}var a=n.prototype;return a.setWindManager=function(n){this.windManager=n},a.smartSeed=function(){var n=t(e().mark((function n(t,a,u){var o,c,l,s,f,h,d,p,g;return e().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(void 0===u&&(u=!1),(o=i.getAllEmptyTiles(t,u))&&0!=o.length){n.next=4;break}return n.abrupt("return",null);case 4:if(c=[],l=-1/0,null!=this.windManager){n.next=8;break}return n.abrupt("return",null);case 8:s=r(o);case 9:if((f=s()).done){n.next=19;break}return h=f.value,(d=i.cloneBoard(t))[h.x][h.y].setFlower(),n.next=15,this.windManager.getMostDirectionAndNewSeedCount(d,a,u);case 15:(p=n.sent).count>l?(c=[h],l=p.count):p.count==l&&c.push(h);case 17:n.next=9;break;case 19:if(!u){n.next=24;break}return g=Math.floor(Math.random()*c.length),n.abrupt("return",{x:c[g].x,y:c[g].y});case 24:return n.abrupt("return",this.pickCentralTile(c));case 25:case"end":return n.stop()}}),n,this)})));return function(t,e,r){return n.apply(this,arguments)}}(),a.pickCentralTile=function(n,t){if(void 0===t&&(t=5),0===n.length)return null;var e=[Math.floor((t-1)/2),Math.ceil((t-1)/2)],r=[Math.floor((t-1)/2),Math.ceil((t-1)/2)],a=n.filter((function(n){return e.includes(n.x)&&r.includes(n.y)})),i=n.filter((function(n){return n.x>=1&&n.x<=t-2&&n.y>=1&&n.y<=t-2&&!e.includes(n.x)||!r.includes(n.y)})),u=n.filter((function(n){return 0===n.x||0===n.y||n.x===t-1||n.y===t-1}));return a.length>0?this.randomPick(a):i.length>0?this.randomPick(i):u.length>0?this.randomPick(u):this.randomPick(n)},a.randomPick=function(n){return n[Math.floor(Math.random()*n.length)]},n}());a._RF.pop()}}}));

System.register("chunks:///_virtual/PlantModel.ts",["./rollupPluginModLoBabelHelpers.js","cc","./BoardUtils.ts"],(function(e){var t,i,n;return{setters:[function(e){t=e.createForOfIteratorHelperLoose},function(e){i=e.cclegacy},function(e){n=e.BoardUtils}],execute:function(){i._RF.push({},"0105bFAWXxMgrv18Cpnkf56","PlantModel",void 0);e("PlantModel",function(){function e(e,t){(this.totalFlower=0,this.remainingFlower=0,this.tileModels=[],this.indicatorListeners=[],this.totalFlower=e,this.reset(),0!=t.length)&&(0!=t[0].length&&(this.tileModels=n.parseBoardData(t)))}var i=e.prototype;return i.getRemaining=function(){return this.remainingFlower},i.getBoard=function(){return this.tileModels},i.plantOne=function(e){this.remainingFlower--,this.emitRemainingChange({remaining:this.remainingFlower})},i.isBoardFullyCovered=function(){return n.isBoardFullyCovered(this.tileModels)},i.reset=function(){this.remainingFlower=this.totalFlower;for(var e,i=t(this.tileModels);!(e=i()).done;)for(var n,r=e.value,o=t(r);!(n=o()).done;){n.value.setEmpty()}this.emitRemainingChange({remaining:this.remainingFlower})},i.onRemainingChange=function(e){this.indicatorListeners.push(e)},i.emitRemainingChange=function(e){this.indicatorListeners.forEach((function(t){return t(e)}))},e}());i._RF.pop()}}}));

System.register("chunks:///_virtual/PortraitScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts","./PlantController.ts","./TopBoardController.ts","./InstructionController.ts","./ResultPopupController.ts","./CompassController.ts","./GameParamManager.ts","./GameEnums.ts","./AdjustSceneBase.ts","./SettingsPopupController.ts"],(function(t){var e,r,n,o,a,i,l,s,u,p,c,g,m,C,h,f,d,b,v,S;return{setters:[function(t){e=t.applyDecoratedDescriptor,r=t.inheritsLoose,n=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){a=t.cclegacy,i=t._decorator,l=t.Sprite,s=t.director,u=t.resources,p=t.SpriteFrame},function(t){c=t.GameManager},function(t){g=t.PlantController},function(t){m=t.TopBoardController},function(t){C=t.InstructionController},function(t){h=t.ResultPopupController},function(t){f=t.CompassController},function(t){d=t.GameParamManager},function(t){b=t.GameMode},function(t){v=t.AdjustSceneBase},function(t){S=t.SettingsPopupController}],execute:function(){var P,y,M,G,I,z,w,B,L,E,D,F,T,_,R,k,A;a._RF.push({},"01f53TqSTdD2pJVKNzSIVWn","PortraitScene",void 0);var N=i.ccclass,j=i.property;t("PortraitScene",(P=N("PortraitScene"),y=j(g),M=j(m),G=j(C),I=j(h),z=j(S),w=j(f),B=j(l),P((D=e((E=function(t){function e(){for(var e,r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return e=t.call.apply(t,[this].concat(a))||this,n(e,"plantCtl",D,o(e)),n(e,"topBoardtCtl",F,o(e)),n(e,"instructionCtl",T,o(e)),n(e,"resultPopupCtl",_,o(e)),n(e,"settingsPopupCtl",R,o(e)),n(e,"compassCtl",k,o(e)),n(e,"backgroundNode",A,o(e)),e.gameManager=void 0,e.levelStr=void 0,e}r(e,t);var a=e.prototype;return a.start=function(){var t=this;this.levelStr=d.mode==b.main?"currentLevel":"currentChallenge",this.plantCtl&&(this.gameManager=new c,this.gameManager.setControllers(this.plantCtl,this.compassCtl,this.resultPopupCtl,this.topBoardtCtl,this.instructionCtl,this.settingsPopupCtl),this.initGame(),this.gameManager.onGameWin=this.nextLevel.bind(this),s.on("TILE_CLICKED",this.gameManager.handleEvent,this.gameManager)),null!=d.mode&&u.load("image/spriteFrame/"+b[d.mode]+"/spriteFrame",p,(function(e,r){!e&&r&&(t.backgroundNode.spriteFrame=r)}))},a.initGame=function(){var t=parseInt(localStorage.getItem(this.levelStr)||"1");this.gameManager.loadLevel(t)},a.nextLevel=function(){var t=parseInt(localStorage.getItem(this.levelStr)||"1");localStorage.setItem(this.levelStr,(t+1).toString()),this.initGame()},a.onDestroy=function(){s.off("GAME_OVER",this.gameManager.handleEvent,this)},e}(v)).prototype,"plantCtl",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),F=e(E.prototype,"topBoardtCtl",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),T=e(E.prototype,"instructionCtl",[G],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_=e(E.prototype,"resultPopupCtl",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),R=e(E.prototype,"settingsPopupCtl",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),k=e(E.prototype,"compassCtl",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),A=e(E.prototype,"backgroundNode",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),L=E))||L));a._RF.pop()}}}));

System.register("chunks:///_virtual/PrintHelper.ts",["cc"],(function(n){var t;return{setters:[function(n){t=n.cclegacy}],execute:function(){t._RF.push({},"3f0ffCoSPFO17VKEJjEO37U","PrintHelper",void 0);n("PrintHelper",function(){function n(){}return n.getTileSymbol=function(n){},n.boardToPrintableMatrix=function(n){},n.printBoardTable=function(n){},n.debugLog=function(n,t,e){},n}());t._RF.pop()}}}));

System.register("chunks:///_virtual/ResizeHandler.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var i,n,o,t,s;return{setters:[function(e){i=e.inheritsLoose},function(e){n=e.cclegacy,o=e._decorator,t=e.view,s=e.Component}],execute:function(){var r;n._RF.push({},"1f38charWNO8K/DfOku4Xc0","ResizeHandler",void 0);var c=o.ccclass;e("ResizeHandler",c("ResizeHandler")(r=function(e){function n(){return e.apply(this,arguments)||this}i(n,e);var o=n.prototype;return o.start=function(){t.on("window-resize",this.onResize,this),t.on("orientation-change",this.onResize,this),console.log("resize handler start")},o.onResize=function(){var e=t.getDesignResolutionSize(),i=t.getResolutionPolicy();t.setDesignResolutionSize(e.width,e.height,i),console.log("Screen resized, layout updated")},o.onDestroy=function(){t.off("window-resize",this.onResize,this),t.off("orientation-change",this.onResize,this)},n}(s))||r);n._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./TimelineHelper.ts","./EffectsHelper.ts"],(function(e){var t,n,r,i,o,a,c,u,s,p,l,f,h,d,y;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,s=e.Prefab,p=e.sp,l=e.instantiate,f=e.Component},function(e){h=e.AudioHelper},function(e){d=e.wait},function(e){y=e.EffectsHelper}],execute:function(){var P,v,b,m,w,g,R;c._RF.push({},"50650YKPRlHZKhjTHtXKRcC","ResultPopupAnimation",void 0);var k=u.ccclass,x=u.property;e("ResultPopupAnimation",(P=k("ResultPopupAnimation"),v=x(s),b=x(p.Skeleton),P((g=t((w=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"victoryParticlePrefab",g,i(t)),r(t,"backgroundSpine",R,i(t)),t}n(t,e);var c=t.prototype;return c.showWin=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.showVictoryParticles(),h.instance.playSFX("tadaa"),e.next=4,d(2500);case 4:return t.active=!0,this.backgroundSpine.setAnimation(0,"thomasHedgedogWin",!0),e.next=8,this.popupResultPanel(t);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showLose=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h.instance.playSFX("lose"),e.next=3,d(1500);case 3:return t.active=!0,this.backgroundSpine.setAnimation(0,"fail",!1),e.next=7,this.popupResultPanel(t);case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showVictoryParticles=function(){var e=l(this.victoryParticlePrefab);e.setPosition(0,0),this.node.addChild(e)},c.popupResultPanel=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y.bounceScale(t);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),t}(f)).prototype,"victoryParticlePrefab",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(w.prototype,"backgroundSpine",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=w))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupView.ts"],(function(e){var t,r,n,o,i,u,l,s,p,c;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,n=e.initializerDefineProperty,o=e.assertThisInitialized,i=e.asyncToGenerator,u=e.regeneratorRuntime},function(e){l=e.cclegacy,s=e._decorator,p=e.Component},function(e){c=e.ResultPopupView}],execute:function(){var a,f,h,v,R;l._RF.push({},"832b3KU7T9DOJlAx+Ru5pRj","ResultPopupController",void 0);var w=s.ccclass,y=s.property;e("ResultPopupController",(a=w("ResultPopupController"),f=y(c),a((R=t((v=function(e){function t(){for(var t,r=arguments.length,i=new Array(r),u=0;u<r;u++)i[u]=arguments[u];return t=e.call.apply(e,[this].concat(i))||this,n(t,"view",R,o(t)),t}r(t,e);var l=t.prototype;return l.init=function(){},l.show=function(){var e=i(u().mark((function e(t,r){var n,o;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n="",o="",t?(n="YOU WIN!",o="NEXT LEVEL"):(n="LEVEL FAILED",o="RETRY"),this.view.show(t,n,o,r);case 4:case"end":return e.stop()}}),e,this)})));return function(t,r){return e.apply(this,arguments)}}(),t}(p)).prototype,"view",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=v))||h));l._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupAnimation.ts"],(function(t){var e,n,i,r,o,a,s,u,l,c,p,h,f;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized,o=t.asyncToGenerator,a=t.regeneratorRuntime},function(t){s=t.cclegacy,u=t._decorator,l=t.Label,c=t.Button,p=t.Node,h=t.Component},function(t){f=t.ResultPopupAnimation}],execute:function(){var b,d,w,m,y,R,v,g,P;s._RF.push({},"67522KS9wNPBaNKMCQj6MEU","ResultPopupView",void 0);var _=u.ccclass,B=u.property;t("ResultPopupView",(b=_("ResultPopupView"),d=B(l),w=B(c),m=B(f),b((v=e((R=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"titleLabel",v,r(e)),i(e,"restartButton",g,r(e)),i(e,"animation",P,r(e)),e._onRestart=null,e}n(e,t);var s=e.prototype;return s.start=function(){this.restartButton.node.on(p.EventType.TOUCH_START,this.endShow,this)},s.endShow=function(){this.node.active=!1,this._onRestart&&this._onRestart()},s.show=function(){var t=o(a().mark((function t(e,n,i,r){var o,s;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o=this.restartButton.node.getChildByName("Label"),s=null==o?void 0:o.getComponent(l),this.titleLabel.string=n,s.string=i,this._onRestart=r,!e){t.next=10;break}return t.next=8,this.animation.showWin(this.node);case 8:t.next=12;break;case 10:return t.next=12,this.animation.showLose(this.node);case 12:case"end":return t.stop()}}),t,this)})));return function(e,n,i,r){return t.apply(this,arguments)}}(),e}(h)).prototype,"titleLabel",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=e(R.prototype,"restartButton",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),P=e(R.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=R))||y));s._RF.pop()}}}));

System.register("chunks:///_virtual/RockModifier.ts",["cc"],(function(n){var t;return{setters:[function(n){t=n.cclegacy}],execute:function(){t._RF.push({},"8db040Yu45DzIX/YZ/fAsOG","RockModifier",void 0);n("RockModifier",function(){function n(){}var t=n.prototype;return t.canPlant=function(){return!1},t.canHoldSeed=function(){return!1},t.canPassWind=function(){return!1},t.isBlockingTile=function(){return!0},n}());t._RF.pop()}}}));

System.register("chunks:///_virtual/SceneSwitchAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(t){var e,n,o,i,r,a,c,u,s,l,p,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,o=t.initializerDefineProperty,i=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,c=t.Node,u=t.UIOpacity,s=t.tween,l=t.Vec3,p=t.Component},function(t){d=t.AudioHelper}],execute:function(){var f,h,m,y,w;r._RF.push({},"ad974rHdelF87WmmoGkUViU","SceneSwitchAnimation",void 0);var S=a.ccclass,v=a.property;t("SceneSwitchAnimation",(f=S("SceneSwitchAnimation"),h=v(c),f((w=e((y=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r))||this,o(e,"rootNode",w,i(e)),e}n(e,t);var r=e.prototype;return r.start=function(){},r.update=function(t){},r.switch=function(){var t=this;return new Promise((function(e){d.instance.playSFX("swish");var n=t.rootNode.getComponent(u);n||(n=t.rootNode.addComponent(u)),s(t.rootNode).to(.5,{scale:new l(.3,.3,1)},{easing:"quadInOut"}).start(),s(n).to(.5,{opacity:0},{easing:"quadInOut"}).call((function(){e()})).start()}))},e}(p)).prototype,"rootNode",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=y))||m));r._RF.pop()}}}));

System.register("chunks:///_virtual/SeededRandom.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"1cfe1E5j5hHrZqJG8nlSR0R","SeededRandom",void 0);e("SeededRandom",function(){function e(e){this.seed=void 0,this.seed="string"==typeof e?[].concat(e).reduce((function(e,t){return e+t.charCodeAt(0)}),0):e}var t=e.prototype;return t.next=function(){return this.seed=(1664525*this.seed+1013904223)%4294967296,this.seed/4294967296},t.nextInt=function(e,t){return Math.floor(this.next()*(t-e+1))+e},t.nextChoice=function(e){return e[Math.floor(this.next()*e.length)]},e}());t._RF.pop()}}}));

System.register("chunks:///_virtual/SettingsPopupController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GlobalSettings.ts"],(function(e){var t,n,i,r,o,s,u,c,a,l,p,g,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.asyncToGenerator,s=e.regeneratorRuntime},function(e){u=e.cclegacy,c=e._decorator,a=e.Node,l=e.Toggle,p=e.Component,g=e.director},function(e){f=e.GlobalSettings}],execute:function(){var h,d,m,y,v,P,b,S,C;u._RF.push({},"5ce27XZ6ZJPy7H7lc976NSa","SettingsPopupController",void 0);var T=c.ccclass,k=c.property;e("SettingsPopupController",(h=T("SettingsPopupController"),d=k(a),m=k(l),y=k(l),h((b=t((P=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,i(t,"settingsPopup",b,r(t)),i(t,"musicTogger",S,r(t)),i(t,"soundEffectTogger",C,r(t)),t.game=null,t}n(t,e);var u=t.prototype;return u.start=function(){},u.setGameManager=function(e){this.game=e},u.onPopupClick=function(){this.musicTogger.isChecked=f.musicOn,this.soundEffectTogger.isChecked=f.sfxOn,this.settingsPopup.active=!0},u.onRetry=function(){this.game.resetGame(),this.settingsPopup.active=!1},u.onExit=function(){var e=o(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:g.loadScene("portraitMenu");case 1:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),u.onMusic=function(e){var t=e.isChecked;f.setMusicOn(t)},u.onSoundEffect=function(e){var t=e.isChecked;f.setSfxOn(t)},u.hide=function(){this.settingsPopup.active=!1},t}(p)).prototype,"settingsPopup",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),S=t(P.prototype,"musicTogger",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=t(P.prototype,"soundEffectTogger",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=P))||v));u._RF.pop()}}}));

System.register("chunks:///_virtual/Simulator.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Direction.ts","./GameEnums.ts","./PlantManager.ts","./BoardUtils.ts","./WindManager.ts","./PrintHelper.ts"],(function(e){var n,t,r,a,i,u,c,o,s,l,f;return{setters:[function(e){n=e.asyncToGenerator,t=e.regeneratorRuntime},function(e){r=e.cclegacy},function(e){a=e.Direction,i=e.EIGHT_DIRECTIONS,u=e.FOUR_DIRECTIONS},function(e){c=e.GameMode},function(e){o=e.PlantManager},function(e){s=e.BoardUtils},function(e){l=e.WindManager},function(e){f=e.PrintHelper}],execute:function(){r._RF.push({},"e7ddaFhlf9KZp72FOVpwDqB","Simulator",void 0);e("Simulator",function(){function e(){}return e.simulate100=function(){var e=n(t().mark((function e(n,r,a,i){var u,c,o,s;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===r&&(r=7),void 0===a&&(a=!0),void 0===i&&(i=100),u=8,c=[],o=0,s=0;case 7:if(!(s<i)){e.next=15;break}return e.next=10,this.autoSimulate(n,u,c,r,a);case 10:!0===e.sent&&o++;case 12:s++,e.next=7;break;case 15:return console.warn("⚠️plant win chance : "+o+"/"+i),e.abrupt("return",{round:r,board:n,win_rate:o/i});case 17:case"end":return e.stop()}}),e,this)})));return function(n,t,r,a){return e.apply(this,arguments)}}(),e.autoSimulate=function(){var e=n(t().mark((function e(r,d,p,v,b){var x,m,w,k,g,h,S,B;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===b&&(b=!0),x=s.parseBoardData(r),m=new l,b?m.init(d,p,c.main):m.init(d,p,c.challenge),(w=new o).setWindManager(m),k=i,4==d&&(k=u),g=k,h=t().mark((function e(){var r,i,u,c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,w.smartSeed(x,g,!b);case 2:if(!(r=e.sent)){e.next=21;break}if(i=r.x,u=r.y,x[i][u].setFlower(),f.printBoardTable(x),!s.isBoardFullyCovered(x)){e.next=9;break}return e.abrupt("return",{v:!0});case 9:return e.next=11,m.getWindDirection(x,g,k.filter((function(e){return!g.includes(e)})),null);case 11:return c=e.sent,e.next=14,m.walkWindPath(x,c,n(t().mark((function e(n,r){return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r.setSeed();case 1:case"end":return e.stop()}}),e)}))));case 14:if(f.debugLog("autoSimulate wind direction",a[c]),f.printBoardTable(x),g=g.filter((function(e){return e!=c})),!s.isBoardFullyCovered(x)){e.next=19;break}return e.abrupt("return",{v:!0});case 19:e.next=22;break;case 21:return e.abrupt("return",{v:!1});case 22:case"end":return e.stop()}}),e)})),B=0;case 11:if(!(B<v)){e.next=19;break}return e.delegateYield(h(),"t0",13);case 13:if(!(S=e.t0)){e.next=16;break}return e.abrupt("return",S.v);case 16:B++,e.next=11;break;case 19:return e.abrupt("return",!1);case 20:case"end":return e.stop()}}),e)})));return function(n,t,r,a,i){return e.apply(this,arguments)}}(),e}());r._RF.pop()}}}));

System.register("chunks:///_virtual/StartScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SceneSwitchAnimation.ts","./AdjustSceneBase.ts"],(function(e){var t,n,r,i,a,c,o,s,u,l,p;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,a=e.asyncToGenerator,c=e.regeneratorRuntime},function(e){o=e.cclegacy,s=e._decorator,u=e.director},function(e){l=e.SceneSwitchAnimation},function(e){p=e.AdjustSceneBase}],execute:function(){var f,S,h,m,y;o._RF.push({},"b7820Ibl8lE8a/m7g4FqHbp","StartScene",void 0);var d=s.ccclass,g=s.property;e("StartManager",(f=d("StartManager"),S=g(l),f((y=t((m=function(e){function t(){for(var t,n=arguments.length,a=new Array(n),c=0;c<n;c++)a[c]=arguments[c];return t=e.call.apply(e,[this].concat(a))||this,r(t,"sceneAnimation",y,i(t)),t}return n(t,e),t.prototype.onStartGame=function(){var e=a(c().mark((function e(){return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.sceneAnimation.switch();case 2:u.loadScene("portraitMenu");case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t}(p)).prototype,"sceneAnimation",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=m))||h));o._RF.pop()}}}));

System.register("chunks:///_virtual/TileAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,r,o,i,c,u,s;return{setters:[function(e){n=e.inheritsLoose,t=e.asyncToGenerator,r=e.regeneratorRuntime},function(e){o=e.cclegacy,i=e._decorator,c=e.Component},function(e){u=e.AudioHelper},function(e){s=e.EffectsHelper}],execute:function(){var a;o._RF.push({},"773624mcfpELo13mt1ts7jO","TileAnimation",void 0);var p=i.ccclass;i.property,e("TileAnimation",p("TileAnimation")(a=function(e){function o(){return e.apply(this,arguments)||this}return n(o,e),o.prototype.bloomIntoFlower=function(){var e=t(r().mark((function e(n){return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return u.instance.playSFX("sparkle"),e.next=3,s.bounceScale(n);case 3:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o}(c))||a);o._RF.pop()}}}));

System.register("chunks:///_virtual/TileController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileModel.ts","./TileView.ts"],(function(e){var i,t,l,n,o,r,c,s,u;return{setters:[function(e){i=e.applyDecoratedDescriptor,t=e.inheritsLoose,l=e.initializerDefineProperty,n=e.assertThisInitialized},function(e){o=e.cclegacy,r=e._decorator,c=e.Component},function(e){s=e.TileModel},function(e){u=e.TileView}],execute:function(){var a,p,f,h,d;o._RF.push({},"c0f27p3AoRMq76p18EoW8hV","TileController",void 0);var w=r.ccclass,y=r.property;e("TileController",(a=w("TileController"),p=y(u),a((d=i((h=function(e){function i(){for(var i,t=arguments.length,o=new Array(t),r=0;r<t;r++)o[r]=arguments[r];return i=e.call.apply(e,[this].concat(o))||this,l(i,"tileView",d,n(i)),i.model=null,i}return t(i,e),i.prototype.init=function(e){this.model=new s(e),this.tileView&&this.tileView.init(e,this.model)},i}(c)).prototype,"tileView",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=h))||f));o._RF.pop()}}}));

System.register("chunks:///_virtual/TileModel.ts",["cc","./CellState.ts","./Modifiers.ts"],(function(e){var t,i,n,s;return{setters:[function(e){t=e.cclegacy},function(e){i=e.CellState,n=e.TileModifier},function(e){s=e.ModifierMap}],execute:function(){t._RF.push({},"bac740SshBBtIgqi6FiWrSu","TileModel",void 0);e("TileModel",function(){function e(e){switch(this.modifier=null,this.state=void 0,this.type=void 0,this.listeners=[],this.type=e,e){case n.Grass:this.modifier=new s.grassModifier;break;case n.Rock:this.modifier=new s.rockModifier;break;case n.Normal:this.modifier=new s.generalModifier;break;case n.Mud:this.modifier=new s.mudModifier}this.state=i.Empty}var t=e.prototype;return t.setFlower=function(){var e,t=this.canPlant(),n=this.createModelChangeObj(i.Dandelion);(n.disable=!t,t)&&(this.state=i.Dandelion,null==(e=this.modifier)||null==e.onFlowerLanded||e.onFlowerLanded(this));return this.emitChange(n),t},t.setSeed=function(){var e,t=this.canHoldSeed()&&this.isEmpty(),n=this.createModelChangeObj(i.Seed);t&&(this.state=i.Seed,null==(e=this.modifier)||null==e.onSeedLanded||e.onSeedLanded(this));return this.emitChange(n),t},t.setEmpty=function(){var e=this.createModelChangeObj(i.Empty);this.state=i.Empty,this.emitChange(e)},t.createModelChangeObj=function(e){return{status:e,oldState:this.state}},t.getType=function(){return this.type},t.getState=function(){return this.state},t.canPlant=function(){return this.modifier.canPlant()},t.canHoldSeed=function(){return this.modifier.canHoldSeed()},t.canPassWind=function(){return!this.modifier.canPassWind||this.modifier.canPassWind()},t.isFlower=function(){return this.state==i.Dandelion},t.isEmpty=function(){return this.state==i.Empty},t.isSeed=function(){return this.state==i.Seed},t.isCovered=function(){var e,t;return 1==(null==(e=(t=this.modifier).isBlockingTile)?void 0:e.call(t))||(this.isFlower()||this.isSeed())},t.cloneState=function(){var t=new e(this.type);return t.state=this.state,t},t.onChange=function(e){this.listeners.push(e)},t.emitChange=function(e){this.listeners.forEach((function(t){return t(e)}))},e}());t._RF.pop()}}}));

System.register("chunks:///_virtual/TileModifierInterface.ts",["cc"],(function(){var e;return{setters:[function(t){e=t.cclegacy}],execute:function(){e._RF.push({},"f79d8CUtGBGoZrUHU9WOWoA","TileModifierInterface",void 0),e._RF.pop()}}}));

System.register("chunks:///_virtual/TileView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileAnimation.ts","./CellState.ts","./AudioHelper.ts"],(function(e){var t,i,n,o,r,a,s,l,c,d,p,u,h,m,f,y,S,v,w,b;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,o=e.assertThisInitialized,r=e.createForOfIteratorHelperLoose,a=e.asyncToGenerator,s=e.regeneratorRuntime},function(e){l=e.cclegacy,c=e._decorator,d=e.Node,p=e.director,u=e.tween,h=e.Vec3,m=e.Sprite,f=e.Color,y=e.Component},function(e){S=e.TileAnimation},function(e){v=e.CellState,w=e.TileModifier},function(e){b=e.AudioHelper}],execute:function(){var g,C,N,T,k,E,F,A,D;l._RF.push({},"0a39c2e7nZCRK/1GD1ueQz8","TileView",void 0);var V=c.ccclass,B=c.property;e("TileView",(g=V("TileView"),C=B(S),N=B(d),T=B(d),g((F=t((E=function(e){function t(){for(var t,i=arguments.length,r=new Array(i),a=0;a<i;a++)r[a]=arguments[a];return t=e.call.apply(e,[this].concat(r))||this,n(t,"tileAnimation",F,o(t)),n(t,"seedSpriteNode",A,o(t)),n(t,"dandelionSpriteNode",D,o(t)),t.model=void 0,t}i(t,e);var l=t.prototype;return l.init=function(e,t){var i=this;this.node.on(d.EventType.TOUCH_END,this.onClick,this),this.model=t,this.model.onChange((function(e){i.onModelChanged(e)})),this.setEmptyType(e),this.updateVisual()},l.onClick=function(){var e=this.model.getState();e!==v.Empty&&e!==v.Seed||p.emit("TILE_CLICKED",this.model)},l.onModelChanged=function(e){e.disable?this.showRejectFeedback(this.node):e.oldState===v.Seed&&e.status==v.Dandelion?this.switchToFlower():this.updateVisual()},l.showRejectFeedback=function(e){u(e).by(.05,{position:new h(5,0,0)}).by(.05,{position:new h(-10,0,0)}).by(.05,{position:new h(5,0,0)}).start();var t=e.getComponent(m);t&&(t.color=new f(255,100,100),this.scheduleOnce((function(){t.color=f.WHITE}),.2)),b.instance.playSFX("deny")},l.setEmptyType=function(e){var t=this.node.getChildByName("EmptyNode");if(t){for(var i,n=r(t.children);!(i=n()).done;){i.value.active=!1}var o=t.getChildByName("EmptySprite");switch(e){case w.Grass:o=t.getChildByName("GrassSprite");break;case w.Rock:o=t.getChildByName("StoneSprite");break;case w.Normal:o=t.getChildByName("EmptySprite");break;case w.Mud:o=t.getChildByName("MudSprite")}o&&(o.active=!0)}},l.switchToFlower=function(){var e=a(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!0,this.tileAnimation.bloomIntoFlower(this.node);case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),l.updateVisual=function(){switch(this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!1,this.model.getState()){case v.Empty:break;case v.Dandelion:this.dandelionSpriteNode.active=!0;break;case v.Seed:this.seedSpriteNode.active=!0}},t}(y)).prototype,"tileAnimation",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(E.prototype,"seedSpriteNode",[N],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),D=t(E.prototype,"dandelionSpriteNode",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),k=E))||k));l._RF.pop()}}}));

System.register("chunks:///_virtual/TimelineHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t,r,i;return{setters:[function(e){n=e.asyncToGenerator,t=e.regeneratorRuntime,r=e.createForOfIteratorHelperLoose},function(e){i=e.cclegacy}],execute:function(){e("wait",(function(e){return new Promise((function(n){return setTimeout(n,e)}))})),i._RF.push({},"5d487VIxChIOa4+/vgmMhyl","TimelineHelper",void 0);e("TimelineHelper",function(){function e(){}return e.run=function(){var e=n(t().mark((function e(n,i){var u,a,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===i&&(i=0),u=r(n);case 2:if((a=u()).done){e.next=11;break}return o=a.value,e.next=6,o();case 6:if(!(i>0)){e.next=9;break}return e.next=9,this.wait(i);case 9:e.next=2;break;case 11:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}(),e.wait=function(e){return new Promise((function(n){return setTimeout(n,e)}))},e.runWithDelays=function(){var e=n(t().mark((function e(n){var i,u,a,o,c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=r(n);case 1:if((u=i()).done){e.next=10;break}return a=u.value,o=a[0],c=a[1],e.next=5,o();case 5:if(void 0===c){e.next=8;break}return e.next=8,this.wait(c);case 8:e.next=1;break;case 10:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),e}());i._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TimelineHelper.ts","./AudioHelper.ts"],(function(e){var n,t,r,i,a,o,c,l,s,u,p,h,d,f;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,a=e.asyncToGenerator,o=e.regeneratorRuntime},function(e){c=e.cclegacy,l=e._decorator,s=e.Node,u=e.tween,p=e.Vec3,h=e.Component},function(e){d=e.wait},function(e){f=e.AudioHelper}],execute:function(){var g,y,m,v,w;c._RF.push({},"b66f4u1kghK8bQ4VIqpz/gx","TopBoardAnimation",void 0);var A=l.ccclass,T=l.property;e("TopBoardAnimation",(g=A("TopBoardAnimation"),y=T(s),g((w=n((v=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return n=e.call.apply(e,[this].concat(a))||this,r(n,"challengeNode",w,i(n)),n}t(n,e);var c=n.prototype;return c.start=function(){},c.showChallenge=function(){var e=a(o().mark((function e(){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f.instance.playSFX("paper-rip"),u(this.challengeNode).to(1,{scale:new p(1,1,1)},{easing:"quadOut"}).start(),e.next=4,d(3e3);case 4:this.hideChallenge();case 5:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.hideChallenge=function(){f.instance.playSFX("paper-collect"),u(this.challengeNode).to(1,{scale:new p(1,0,1)},{easing:"quadIn"}).start()},n}(h)).prototype,"challengeNode",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TopBoardView.ts","./GameEnums.ts"],(function(e){var t,o,r,n,i,a,l,c,s;return{setters:[function(e){t=e.applyDecoratedDescriptor,o=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Component},function(e){c=e.TopBoardView},function(e){s=e.GameMode}],execute:function(){var u,p,f,h,d;i._RF.push({},"4f016kcT5dNQ5ZNeVsF7gj7","TopBoardController",void 0);var v=a.ccclass,g=a.property;e("TopBoardController",(u=v("TopBoardController"),p=g(c),u((d=t((h=function(e){function t(){for(var t,o=arguments.length,i=new Array(o),a=0;a<o;a++)i[a]=arguments[a];return t=e.call.apply(e,[this].concat(i))||this,r(t,"view",d,n(t)),t}o(t,e);var i=t.prototype;return i.init=function(e,t,o,r){if(this.view){var n=this.getStarCount(o,r);console.log("winRate -- star: ",o,n),this.view.init(e,t,n),e>1&&this.view.showChallenge()}},i.getStarCount=function(e,t){return t==s.challenge?e>=.35?1:e>=.2?2:3:e>=.7?1:e>=.5?2:e>=.4?3:0},t}(l)).prototype,"view",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=h))||f));i._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardView.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TopBoardAnimation.ts"],(function(e){var t,i,n,l,a,o,r,c,s,h,u,p;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,l=e.assertThisInitialized},function(e){a=e.cclegacy,o=e._decorator,r=e.Node,c=e.Label,s=e.UITransform,h=e.Vec3,u=e.Component},function(e){p=e.TopBoardAnimation}],execute:function(){var g,d,f,b,m,v,y,C,N,w,B,S,T;a._RF.push({},"3b4abkQmoRHdrp1eMH60YjY","TopBoardView",void 0);var L=o.ccclass,P=o.property;e("TopBoardView",(g=L("TopBoardView"),d=P(r),f=P(c),b=P(c),m=P(p),v=P(r),g((N=t((C=function(e){function t(){for(var t,i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(t=e.call.apply(e,[this].concat(a))||this).level=0,n(t,"challengeNode",N,l(t)),n(t,"levelLabel",w,l(t)),n(t,"challengeLabel",B,l(t)),n(t,"animation",S,l(t)),n(t,"starPanel",T,l(t)),t}i(t,e);var a=t.prototype;return a.start=function(){var e=this.node.getComponent(s).convertToWorldSpaceAR(h.ZERO),t=this.node.getComponent(s).height,i=this.challengeNode.getComponent(s).convertToNodeSpaceAR(e);this.challengeNode.getComponent(s).height;this.challengeNode.setPosition(i.x,i.y-t/2+22),this.challengeNode.setScale(new h(1,0,1)),this.node.on(r.EventType.TOUCH_END,this.showChallenge,this)},a.init=function(e,t,i){this.levelLabel.string=e.toString(),this.challengeLabel.string="only "+t+" moves!",this.setStar(i)},a.setStar=function(e){if(null!=this.starPanel){var t=this.starPanel.getChildByName("Star3"),i=this.starPanel.getChildByName("Star2");t.getChildByName("Sprite-filled").active=!0,i.getChildByName("Sprite-filled").active=!0,e<3&&(t.getChildByName("Sprite-filled").active=!1),e<2&&(i.getChildByName("Sprite-filled").active=!1),this.starPanel.active=!(e<1)}},a.showChallenge=function(){this.animation.showChallenge()},t}(u)).prototype,"challengeNode",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=t(C.prototype,"levelLabel",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),B=t(C.prototype,"challengeLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=t(C.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=t(C.prototype,"starPanel",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=C))||y));a._RF.pop()}}}));

System.register("chunks:///_virtual/WindManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Direction.ts","./GameEnums.ts","./BoardUtils.ts"],(function(t){var e,n,r,i,a,s,u,o;return{setters:[function(t){e=t.createForOfIteratorHelperLoose,n=t.asyncToGenerator,r=t.regeneratorRuntime},function(t){i=t.cclegacy},function(t){a=t.Direction,s=t.DIRECTION_OFFSETS},function(t){u=t.GameMode},function(t){o=t.BoardUtils}],execute:function(){i._RF.push({},"54b126FrOFCc7OqLLLq/8jt","WindManager",void 0);t("WindManager",function(){function t(){this.designedDirections=[],this.mode=void 0,this.tmpDirection=void 0}var i=t.prototype;return i.init=function(t,n,r){if(this.designedDirections=[],this.mode=r,n)for(var i,s=e(n);!(i=s()).done;){var u=i.value;this.designedDirections.push(a[u])}},i.createTodaysDirection=function(t){return t[Math.floor(Math.random()*t.length)]},i.getWindDirection=function(){var t=n(r().mark((function t(e,n,i,a){var s,o;return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null==(s=this.getDesignedDirection(i))){t.next=3;break}return t.abrupt("return",s);case 3:t.t0=this.mode,t.next=t.t0===u.challenge?6:t.t0===u.daily?9:t.t0===u.main?15:21;break;case 6:return t.next=8,this.getWorstDirection(e,n);case 8:return t.abrupt("return",t.sent);case 9:if(null!=this.tmpDirection){t.next=12;break}return this.tmpDirection=a,t.abrupt("return",this.tmpDirection);case 12:return t.next=14,this.getWorstDirection(e,n);case 14:return t.abrupt("return",t.sent);case 15:return o=null,o=null==this.tmpDirection?this.getRandomdDirection(n):this.tmpDirection,t.next=19,this.getWorstDirection(e,n.filter((function(t){return t!=o})));case 19:return this.tmpDirection=t.sent,t.abrupt("return",o);case 21:case"end":return t.stop()}}),t,this)})));return function(e,n,r,i){return t.apply(this,arguments)}}(),i.walkWindPath=function(){var t=n(r().mark((function t(e,n,i){var a,u,c,d,f,h,l,p,g;return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null!=n){t.next=2;break}return t.abrupt("return");case 2:a=s[n],u=a.dx,c=a.dy,d=0;case 4:if(!(d<e.length)){t.next=29;break}f=0;case 6:if(!(f<e[d].length)){t.next=26;break}if((h=e[d][f]).isFlower()){t.next=10;break}return t.abrupt("continue",23);case 10:l=d+u,p=f+c;case 12:if(!o.inBounds(l,p,e)){t.next=23;break}if(0!=(g=e[l][p]).canPassWind()){t.next=16;break}return t.abrupt("break",23);case 16:if(1!=g.canHoldSeed()){t.next=19;break}return t.next=19,i(h,g);case 19:l+=u,p+=c,t.next=12;break;case 23:f++,t.next=6;break;case 26:d++,t.next=4;break;case 29:case"end":return t.stop()}}),t)})));return function(e,n,r){return t.apply(this,arguments)}}(),i.simulateWind=function(){var t=n(r().mark((function t(e,i){var a;return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=o.cloneBoard(e),t.next=3,this.walkWindPath(a,i,n(r().mark((function t(e,n){return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n.setSeed();case 1:case"end":return t.stop()}}),t)}))));case 3:return t.abrupt("return",a);case 4:case"end":return t.stop()}}),t,this)})));return function(e,n){return t.apply(this,arguments)}}(),i.getDesignedDirection=function(t){return t.length<this.designedDirections.length?this.designedDirections[t.length]:null},i.getRandomdDirection=function(t){return 0!=t.length?t[Math.floor(Math.random()*t.length)]:null},i.getWorstDirection=function(){var t=n(r().mark((function t(e,n){return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getMostDirectionAndNewSeedCount(e,n,!0);case 2:return t.abrupt("return",t.sent.dir);case 3:case"end":return t.stop()}}),t,this)})));return function(e,n){return t.apply(this,arguments)}}(),i.getMostDirectionAndNewSeedCount=function(){var t=n(r().mark((function t(n,i,s){var u,c,d,f,h,l,p,g;return r().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:void 0===s&&(s=!0),u=1/0,c=[],d=e(i);case 4:if((f=d()).done){t.next=16;break}if(null!=(h=f.value)){t.next=8;break}return t.abrupt("return",{dir:a.E,count:0});case 8:return t.next=10,this.simulateWind(n,h);case 10:l=t.sent,p=o.countNewlyCovered(n,l),(s?p<u:p>u)?(u=p,c=[h]):p===u&&c.push(h);case 14:t.next=4;break;case 16:return g=Math.floor(Math.random()*c.length),t.abrupt("return",{dir:c[g],count:u});case 18:case"end":return t.stop()}}),t,this)})));return function(e,n,r){return t.apply(this,arguments)}}(),t}());i._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,