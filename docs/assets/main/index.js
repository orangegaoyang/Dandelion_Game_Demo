System.register("chunks:///_virtual/AudioHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var e,n,t,r,i,s,c,u;return{setters:[function(o){e=o.inheritsLoose},function(o){n=o.cclegacy,t=o._decorator,r=o.director,i=o.AudioSource,s=o.resources,c=o.AudioClip,u=o.Component}],execute:function(){var l,a;n._RF.push({},"2585c4z1GBJD67FFVHpfHq5","AudioHelper",void 0);var d=t.ccclass;t.property,o("AudioHelper",d("AudioHelper")(((a=function(o){function n(){for(var e,n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return(e=o.call.apply(o,[this].concat(t))||this)._bgm=void 0,e._sfx=void 0,e}e(n,o);var t=n.prototype;return t.onLoad=function(){n.instance=this,r.addPersistRootNode(this.node),this._bgm=this.node.addComponent(i),this._bgm.volume=.5,this._sfx=this.node.addComponent(i),this._sfx.volume=1},t.playBGM=function(){var o=this;s.load("Sounds/bgm",c,(function(e,n){if(e)return console.error(e);o._bgm.clip=n,o._bgm.loop=!0,o._bgm.play()}))},t.playSFX=function(o){var e=this;s.load("Sounds/"+o,c,(function(o,n){if(o)return console.error(o);e._sfx.playOneShot(n)}))},n}(u)).instance=void 0,l=a))||l);n._RF.pop()}}}));

System.register("chunks:///_virtual/BackgroundController.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,i,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.Sprite,i=t.view,c=t.Component}],execute:function(){var a;r._RF.push({},"6a130iNz3dA1J7bzQMtValq","BackgroundController",void 0);var s=o.ccclass;o.property,t("BackgroundController",s("BackgroundController")(a=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this.getComponent(n);if(t&&t.spriteFrame){var e=i.getVisibleSize(),r=t.spriteFrame.rect.width,o=t.spriteFrame.rect.height,c=e.width/r,a=e.height/o,s=Math.max(c,a);this.node.setScale(s,s)}},r}(c))||a);r._RF.pop()}}}));

System.register("chunks:///_virtual/CellState.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"61874ADHPdAnZJz7xSGitiy","CellState",void 0);e("CellState",function(e){return e[e.Empty=0]="Empty",e[e.Dandelion=1]="Dandelion",e[e.Seed=2]="Seed",e}({})),e("TileModifier",function(e){return e[e.Normal=1]="Normal",e[e.Mud=2]="Mud",e[e.Grass=3]="Grass",e[e.Rock=4]="Rock",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/CompassAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,i,r,o,a,s,c,l,p,u,f,m,g;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){s=e.cclegacy,c=e._decorator,l=e.Node,p=e.ParticleSystem2D,u=e.tween,f=e.Component},function(e){m=e.AudioHelper},function(e){g=e.EffectsHelper}],execute:function(){var y,d,v,b,h,w,S;s._RF.push({},"c1543ts8bNFvbOQsJSx0vum","CompassAnimation",void 0);var A=c.ccclass,C=c.property;e("CompassAnimation",(y=A("CompassAnimation"),d=C(l),v=C(l),y((w=n((h=function(e){function n(){for(var n,t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];return n=e.call.apply(e,[this].concat(o))||this,i(n,"pointer",w,r(n)),i(n,"windEffect",S,r(n)),n.angleMap={N:0,NE:315,E:270,SE:225,S:180,SW:135,W:90,NW:45},n.rotationOffset=0,n}t(n,e);var s=n.prototype;return s.blow=function(e){var n,t=this.windEffect.getComponent(p),i=null!=(n=this.angleMap[e])?n:0;t.angle=i+180,t.resetSystem()},s.stopIdle=function(e){u(e).stop()},s.idleCompass=function(){this.pointer&&u(this.pointer).repeatForever(u().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},s.pointAnimate=function(e){var n=this;return new Promise((function(t){var i;m.instance.playSFX("spin");var r=(null!=(i=n.angleMap[e])?i:0)+720+n.rotationOffset;n.rotationOffset+=720,n.stopIdle(n.pointer),u(n.pointer).to(3,{angle:r},{easing:"cubicOut"}).call((function(){m.instance.playSFX("blowing"),n.idleCompass(),t()})).start()}))},s.patchAnimate=function(){var e=o(a().mark((function e(n){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g.bounceScale(n);case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),n}(f)).prototype,"pointer",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=n(h.prototype,"windEffect",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=h))||b));s._RF.pop()}}}));

System.register("chunks:///_virtual/CompassController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CompassAnimation.ts"],(function(e){var t,i,r,n,o,s,a,c,u,l,p,h,d,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized,o=e.createForOfIteratorHelperLoose,s=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,l=e.Sprite,p=e.Node,h=e.Component,d=e.director},function(e){f=e.CompassAnimation}],execute:function(){var m,v,S,b,g,D,y,C,N,w,W,x,A;c._RF.push({},"ed321HgZiBLGKDTC9/hdyVu","CompassController",void 0);var E=u.ccclass,k=u.property,z=function(e){return e[e.N=0]="N",e[e.NE=1]="NE",e[e.E=2]="E",e[e.SE=3]="SE",e[e.S=4]="S",e[e.SW=5]="SW",e[e.W=6]="W",e[e.NW=7]="NW",e}(z||{});e("CompassController",(m=E("CompassController"),v=k(f),S=k([l]),b=k(p),g=k(p),D=k(p),m((N=t((C=function(e){function t(){for(var t,i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,r(t,"compassAnimation",N,n(t)),r(t,"coverSprites",w,n(t)),r(t,"pointerNode",W,n(t)),r(t,"compass4Sprite",x,n(t)),r(t,"compass8Sprite",A,n(t)),t.directions8=[z.N,z.NE,z.E,z.SE,z.S,z.SW,z.W,z.NW],t.directions4=[z.N,z.E,z.S,z.W],t.allDirections=[],t.designedDirections=[],t.usedDirections=[],t}i(t,e);var c=t.prototype;return c.init=function(e,t){if(this.designedDirections=[],t)for(var i,r=o(t);!(i=r()).done;){var n=i.value;this.designedDirections.push(z[n])}this.pointerNode.angle=0,this.compass4Sprite.setSiblingIndex(0),this.compass8Sprite.setSiblingIndex(0),4==e?(this.compass4Sprite.active=!0,this.compass8Sprite.active=!1,this.allDirections=this.directions4):(this.compass8Sprite.active=!0,this.compass4Sprite.active=!1,this.allDirections=this.directions8)},c.hideAllCovers=function(){for(var e,t=o(this.coverSprites);!(e=t()).done;){e.value.node.active=!1}},c.showCover=function(){var e=s(a().mark((function e(t){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!=(i=this.coverSprites[t].node).active){e.next=5;break}return i.active=!0,e.next=5,this.compassAnimation.patchAnimate(i);case 5:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.autoBlowWind=function(){var e=s(a().mark((function e(){var t,i,r,n,s,c=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=o(this.usedDirections);case 1:if((i=t()).done){e.next=7;break}return r=i.value,e.next=5,this.showCover(r);case 5:e.next=1;break;case 7:if(0!==(n=this.allDirections.filter((function(e){return!c.usedDirections.includes(e)}))).length){e.next=10;break}return e.abrupt("return");case 10:return s=z.E,s=this.usedDirections.length<this.designedDirections.length?this.designedDirections[this.usedDirections.length]:n[Math.floor(Math.random()*n.length)],this.usedDirections.push(s),e.next=15,this.compassAnimation.pointAnimate(z[s]);case 15:this.compassAnimation.blow(z[s]),d.emit("WIND_BLOW",z[s]);case 17:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.reset=function(){this.usedDirections=[],this.hideAllCovers()},t}(h)).prototype,"compassAnimation",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=t(C.prototype,"coverSprites",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),W=t(C.prototype,"pointerNode",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=t(C.prototype,"compass4Sprite",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(C.prototype,"compass8Sprite",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=C))||y));c._RF.pop()}}}));

System.register("chunks:///_virtual/Direction.ts",["cc"],(function(d){var e;return{setters:[function(d){e=d.cclegacy}],execute:function(){var t;e._RF.push({},"16eefORzrhC9JFlNqVmXGa9","Direction",void 0);var r=d("Direction",function(d){return d.N="N",d.NE="NE",d.E="E",d.SE="SE",d.S="S",d.SW="SW",d.W="W",d.NW="NW",d}({}));d("DIRECTION_OFFSETS",((t={})[r.N]={dx:0,dy:-1},t[r.NE]={dx:1,dy:-1},t[r.E]={dx:1,dy:0},t[r.SE]={dx:1,dy:1},t[r.S]={dx:0,dy:1},t[r.SW]={dx:-1,dy:1},t[r.W]={dx:-1,dy:0},t[r.NW]={dx:-1,dy:-1},t)),d("FOUR_DIRECTIONS",[r.N,r.E,r.S,r.W]);e._RF.pop()}}}));

System.register("chunks:///_virtual/EffectsHelper.ts",["cc"],(function(e){var n,t,c;return{setters:[function(e){n=e.cclegacy,t=e.Vec3,c=e.tween}],execute:function(){n._RF.push({},"07256waQwhMU6vjhrECp4MJ","EffectsHelper",void 0);e("EffectsHelper",function(){function e(){}return e.bounceScale=function(e,n){return void 0===n&&(n={}),new Promise((function(r){var u,s,i=null!=(u=n.duration)?u:.25,a=null!=(s=n.scale)?s:1.2;e.setScale(new t(.5,.5,1)),e.active=!0,c(e).to(i,{scale:new t(a,a,1)},{easing:"backOut"}).to(.1,{scale:new t(1,1,1)},{easing:"sineIn"}).call((function(){return r()})).start()}))},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(e){var o,n,t,r,i,a,l,c,s,p,u,f;return{setters:[function(e){o=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Node,c=e.tween,s=e.UITransform,p=e.Vec3,u=e.Component},function(e){f=e.AudioHelper}],execute:function(){var y,d,w,v,F;i._RF.push({},"53b63mRvBJHhIQccMJUmJaX","FlowerAnimation",void 0);var m=a.ccclass,g=a.property;e("FlowerAnimation",(y=m("FlowerAnimation"),d=g(l),y((F=o((v=function(e){function o(){for(var o,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return o=e.call.apply(e,[this].concat(i))||this,t(o,"flyFlower",F,r(o)),o}n(o,e);var i=o.prototype;return i.plant=function(e,o){var n=this;return new Promise((function(t){f.instance.playSFX("bubble-pop");var r=e.getWorldPosition(),i=o.getWorldPosition();n.flyFlower.active=!0,n.flyFlower.setWorldPosition(r);var a=r.clone();a.y+=10,a.x+=10,c(n.flyFlower).to(.2,{position:n.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(a)},{easing:"quadOut"}).to(.5,{position:n.flyFlower.parent.getComponent(s).convertToNodeSpaceAR(i)},{easing:"quadInOut"}).call((function(){n.flyFlower.active=!1,t()})).start()}))},i.stopIdle=function(e){c(e).stop()},i.idleIndicator=function(e){var o=Math.random();c(e).delay(o).repeatForever(c().by(1,{position:new p(0,5,0)},{easing:"sineInOut"}).by(1,{position:new p(0,-5,0)},{easing:"sineInOut"})).start()},o}(u)).prototype,"flyFlower",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=v))||w));i._RF.pop()}}}));

System.register("chunks:///_virtual/FlowerController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./FlowerAnimation.ts","./TileController.ts"],(function(e){var r,n,t,o,i,l,a,s,c,u,f,p;return{setters:[function(e){r=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,o=e.assertThisInitialized,i=e.asyncToGenerator,l=e.regeneratorRuntime},function(e){a=e.cclegacy,s=e._decorator,c=e.Node,u=e.Component},function(e){f=e.FlowerAnimation},function(e){p=e.TileController}],execute:function(){var w,h,d,m,I,v,y;a._RF.push({},"cf16aSCRT1PuJqI4iQAmW4b","FlowerController",void 0);var C=s.ccclass,F=s.property;e("FlowerController",(w=C("FlowerController"),h=F(c),d=F(f),w((v=r((I=function(e){function r(){for(var r,n=arguments.length,i=new Array(n),l=0;l<n;l++)i[l]=arguments[l];return r=e.call.apply(e,[this].concat(i))||this,t(r,"flowerContainer",v,o(r)),t(r,"flowerAnimation",y,o(r)),r.flowerIcons=void 0,r._lastFlowerIndex=9,r}n(r,e);var a=r.prototype;return a.onLoad=function(){this.flowerIcons=this.flowerContainer.children},a.init=function(e){this._lastFlowerIndex=e-1;for(var r=0;r<this.flowerIcons.length;r++)this.flowerIcons[r].active=r<e,r<=e-1&&this.flowerIcons[r].active?this.flowerAnimation.idleIndicator(this.flowerIcons[r]):this.flowerAnimation.stopIdle(this.flowerIcons[r])},a.plant=function(){var e=i(l().mark((function e(r){var n,t;return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((n=r.getComponent(p)).canPlant()){e.next=3;break}return e.abrupt("return",!1);case 3:return t=this.flowerIcons[this._lastFlowerIndex--],e.next=6,this.flowerAnimation.plant(t,r);case 6:return t.active=!1,this.flowerAnimation.stopIdle(t),n.setFlower(),e.abrupt("return",!0);case 10:case"end":return e.stop()}}),e,this)})));return function(r){return e.apply(this,arguments)}}(),r}(u)).prototype,"flowerContainer",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=r(I.prototype,"flowerAnimation",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=I))||m));a._RF.pop()}}}));

System.register("chunks:///_virtual/GameEnums.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"7a4afkuam5EaqgbSuhQGOgS","GameEnums",void 0);e("GamePhase",function(e){return e[e.Planting=0]="Planting",e[e.Blowing=1]="Blowing",e[e.GameOver=2]="GameOver",e}({}));n._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlantController.ts","./ResultPopup.ts","./CompassController.ts","./AudioHelper.ts","./TopBoardController.ts","./InstructionController.ts","./TimelineHelper.ts","./GameEnums.ts"],(function(t){var e,n,r,o,i,s,l,a,u,c,p,h,f,d,m,C,b,w;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,r=t.initializerDefineProperty,o=t.assertThisInitialized,i=t.asyncToGenerator,s=t.regeneratorRuntime},function(t){l=t.cclegacy,a=t._decorator,u=t.director,c=t.Component},function(t){p=t.PlantController},function(t){h=t.ResultPopup},function(t){f=t.CompassController},function(t){d=t.AudioHelper},function(t){m=t.TopBoardController},function(t){C=t.InstructionController},function(t){b=t.wait},function(t){w=t.GamePhase}],execute:function(){var v,P,g,y,R,k,x,G,B,z,M,L,W,I,T;l._RF.push({},"a0000YzmrZNq6jS+N1zVPFc","GameManager",void 0);var _=a.ccclass,D=a.property;t("GameManager",(v=_("GameManager"),P=D(p),g=D(m),y=D(C),R=D(h),k=D(f),v(((T=function(t){function e(){for(var e,n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return(e=t.call.apply(t,[this].concat(i))||this).currentRound=0,e.maxRounds=7,e.isClickable=!0,e.phase=w.Planting,r(e,"onGameWin",B,o(e)),r(e,"plantController",z,o(e)),r(e,"topBoardController",M,o(e)),r(e,"instructionController",L,o(e)),r(e,"resultPopup",W,o(e)),r(e,"compassController",I,o(e)),e}n(e,t);var l=e.prototype;return l.onLoad=function(){e.instance=this,d.instance.playBGM()},l.start=function(){u.on("TILE_CLICKED",this.plant,this),u.on("WIND_BLOW",this.blow,this)},l.loadLevel=function(t){console.log(t.level),this.maxRounds=t.round,this.topBoardController.init(t.level,t.round),this.plantController.init(t.round,t.board),this.compassController.init(t.direction,t.windSequence),this.instructionController.init(t.level),this.resetGame()},l.resetGame=function(){this.plantController.reset(),this.compassController.reset(),this.currentRound=0,this.enterPlantingPhase()},l.enterPlantingPhase=function(){this.currentRound++,this.setPhase(w.Planting)},l.enterBlowingPhase=function(){this.checkMediumResult()||(this.setPhase(w.Blowing),this.compassController.autoBlowWind())},l.plant=function(){var t=i(s().mark((function t(e){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.instructionController.hide(),this.phase!=w.Planting||!this.isClickable){t.next=14;break}return this.isClickable=!1,t.next=5,this.plantController.plant(e);case 5:if(!t.sent){t.next=13;break}return t.next=9,b(1e3);case 9:this.enterBlowingPhase(),this.isClickable=!0,t.next=14;break;case 13:this.isClickable=!0;case 14:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),l.blow=function(){var t=i(s().mark((function t(e){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.phase!=w.Blowing){t.next=4;break}return t.next=3,this.plantController.blow(e);case 3:this.checkRoundResult();case 4:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),l.setPhase=function(t){this.phase=t},l.checkRoundResult=function(){var t=i(s().mark((function t(){var e;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=this.plantController.isBoardFullyCovered(),!(this.currentRound>=this.maxRounds||e)){t.next=8;break}return this.setPhase(w.GameOver),t.next=5,this.plantController.roundOver();case 5:e?this.showResult(!0):this.showResult(!1),t.next=9;break;case 8:this.enterPlantingPhase();case 9:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),l.checkMediumResult=function(){var t=this.plantController.isBoardFullyCovered();return t&&(this.setPhase(w.GameOver),this.showResult(!0)),t},l.showResult=function(){var t=i(s().mark((function t(e){var n=this;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e?this.resultPopup.show(!0,(function(){n.onGameWin&&n.onGameWin()})):this.resultPopup.show(!1,(function(){n.resetGame()}));case 1:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),e}(c)).instance=void 0,B=e((G=T).prototype,"onGameWin",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),z=e(G.prototype,"plantController",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),M=e(G.prototype,"topBoardController",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(G.prototype,"instructionController",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),W=e(G.prototype,"resultPopup",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=e(G.prototype,"compassController",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=G))||x));l._RF.pop()}}}));

System.register("chunks:///_virtual/GameScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts","./LevelManager.ts"],(function(e){var t,n,a,r,i,o,c,l,s,u;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,a=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,o=e._decorator,c=e.Component},function(e){l=e.GameManager},function(e){s=e.getLevelConfig,u=e.isLastLevel}],execute:function(){var g,m,p,v,f;i._RF.push({},"527fbdMsT1E6Jz+yyM8250f","GameScene",void 0);var h=o.ccclass,L=o.property;e("GameScene",(g=h("GameScene"),m=L(l),g((f=t((v=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return t=e.call.apply(e,[this].concat(i))||this,a(t,"gameManager",f,r(t)),t}n(t,e);var i=t.prototype;return i.start=function(){this.initGame(),this.gameManager.onGameWin=this.nextLevel.bind(this)},i.initGame=function(){var e=parseInt(localStorage.getItem("currentLevel")||"1");this.gameManager.loadLevel(s(e))},i.nextLevel=function(){var e=parseInt(localStorage.getItem("currentLevel")||"1");u(e)&&(e=1),localStorage.setItem("currentLevel",(e+1).toString()),this.initGame()},t}(c)).prototype,"gameManager",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),p=v))||p));i._RF.pop()}}}));

System.register("chunks:///_virtual/GeneralModifier.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,r;return{setters:[function(e){n=e.createForOfIteratorHelperLoose},function(e){r=e.cclegacy}],execute:function(){r._RF.push({},"006ccMNXb5Gj5eX3qiOFn6y","GeneralModifier",void 0);e("GeneralModifier",function(){function e(){}var r=e.prototype;return r.init=function(e){var r=e.getChildByName("EmptyNode");if(r){for(var t,i=n(r.children);!(t=i()).done;){t.value.active=!1}var o=r.getChildByName("EmptySprite");o&&(o.active=!0)}},r.canPlant=function(){return!0},r.canHoldSeed=function(){return!0},e}());r._RF.pop()}}}));

System.register("chunks:///_virtual/GrassModifier.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,r;return{setters:[function(e){n=e.createForOfIteratorHelperLoose},function(e){r=e.cclegacy}],execute:function(){r._RF.push({},"9b7ed65BIdHCYZ5nV1nzCAe","GrassModifier",void 0);e("GrassModifier",function(){function e(){}var r=e.prototype;return r.canPlant=function(){return!0},r.canHoldSeed=function(){return!0},r.init=function(e){var r=e.getChildByName("EmptyNode");if(r){for(var t,o=n(r.children);!(t=o()).done;){t.value.active=!1}var i=r.getChildByName("GrassSprite");i&&(i.active=!0)}},r.onSeedLanded=function(e){e.switchToFlower()},e}());r._RF.pop()}}}));

System.register("chunks:///_virtual/GridAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,n,o,r,i,a,l,c,s,d,p,u,f,y,v;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,o=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){i=e.cclegacy,a=e._decorator,l=e.Prefab,c=e.Node,s=e.instantiate,d=e.director,p=e.UITransform,u=e.UIOpacity,f=e.tween,y=e.Vec3,v=e.Component}],execute:function(){var m,g,b,h,P,w,A;i._RF.push({},"b36e8kkMb9Mla9EpFZ/lAEs","GridAnimation",void 0);var C=a.ccclass,F=a.property;e("GridAnimation",(m=C("GridAnimation"),g=F(l),b=F(c),m((w=t((P=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return t=e.call.apply(e,[this].concat(i))||this,o(t,"seedFlyPrefab",w,r(t)),o(t,"windEffect",A,r(t)),t}return n(t,e),t.prototype.seedFly=function(e,t){var n=this;return new Promise((function(o){if(n.seedFlyPrefab){var r=s(n.seedFlyPrefab);n.node.addChild(r);var i=d.getScene().getChildByName("Canvas");i.addChild(r);var a=e.getWorldPosition(),l=t.getWorldPosition(),c=a.clone().lerp(l,.5);c.x+=80*(Math.random()-.5),c.y+=80*(Math.random()-.5),r.setWorldPosition(a);var v=i.getComponent(p).convertToNodeSpaceAR(a),m=i.getComponent(p).convertToNodeSpaceAR(c),g=i.getComponent(p).convertToNodeSpaceAR(l);r.setPosition(v);var b={value:0},h=360+360*Math.random(),P=r.getComponent(u);P&&(P.opacity=255),f(b).to(2,{value:1},{onUpdate:function(){var e=b.value,t=1-e,n=t*t*v.x+2*t*e*m.x+e*e*g.x,o=t*t*v.y+2*t*e*m.y+e*e*g.y;r.setPosition(new y(n,o,0)),r.angle=0+(h-0)*e;var i=1+(1.2-1)*e;r.setScale(new y(i,i,1)),P&&(P.opacity=255-75*e)}}).call((function(){r.destroy(),o()})).start()}}))},t}(v)).prototype,"seedFlyPrefab",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(P.prototype,"windEffect",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=P))||h));i._RF.pop()}}}));

System.register("chunks:///_virtual/GridController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileController.ts","./GridAnimation.ts"],(function(e){var t,i,n,r,o,s,l,a,u,c,d,f,h;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.createForOfIteratorHelperLoose},function(e){s=e.cclegacy,l=e._decorator,a=e.Prefab,u=e.instantiate,c=e.Vec3,d=e.Component},function(e){f=e.TileController},function(e){h=e.GridAnimation}],execute:function(){var g,m,p,v,N,b,C;s._RF.push({},"927d1nKTBBLgqY5/Ep52e2i","GridController",void 0);var S=l.ccclass,w=l.property,y={N:[-1,0],NE:[-1,1],E:[0,1],SE:[1,1],S:[1,0],SW:[1,-1],W:[0,-1],NW:[-1,-1]};e("GridController",(g=S("GridController"),m=w(a),p=w(h),g((b=t((N=function(e){function t(){for(var t,i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return(t=e.call.apply(e,[this].concat(o))||this).tileSize=100,t.spacing=2,n(t,"tilePrefab",b,r(t)),n(t,"gridAnimation",C,r(t)),t.tileNodes=[],t}i(t,e);var s=t.prototype;return s.init=function(e){this.node.removeAllChildren();var t=e.length;if(0!=t){var i=e[0].length;if(0!=i)for(var n=t*this.tileSize+(t-1)*this.spacing,r=Math.min(540/n,1.8),o=-(t*this.tileSize+(t-1)*this.spacing)/2+this.tileSize/2,s=(i*this.tileSize+(i-1)*this.spacing)/2-this.tileSize/2,l=0;l<t;l++){this.tileNodes[l]=[];for(var a=0;a<i;a++){var d=u(this.tilePrefab);d.setPosition(new c(o+a*(this.tileSize+this.spacing),s-l*(this.tileSize+this.spacing),0)),this.node.setScale(r,r),this.node.addChild(d),this.tileNodes[l][a]=d,d.getComponent(f).init(l,a,e[l][a])}}}},s.getRowNumber=function(e){return e.length},s.getColumnNumber=function(e){return e[0].length},s.reset=function(){for(var e=0;e<this.getRowNumber(this.tileNodes);e++)for(var t=0;t<this.getColumnNumber(this.tileNodes);t++){this.tileNodes[e][t].getComponent(f).setEmpty()}},s.roundOver=function(){var e=this;return new Promise((function(t){for(var i=1,n=0;n<e.getRowNumber(e.tileNodes);n++)for(var r=function(){var t=e.tileNodes[n][o].getComponent(f);t.isSeed()&&(e.scheduleOnce((function(){t.switchToFlower()}),.3*i),i++)},o=0;o<e.getColumnNumber(e.tileNodes);o++)r();e.scheduleOnce((function(){t()}),.3*i+1)}))},s.blowSeeds=function(e){var t=this;return new Promise((function(i){for(var n=[],r=y[e],o=r[0],s=r[1],l=0;l<t.getRowNumber(t.tileNodes);l++)for(var a=0;a<t.getColumnNumber(t.tileNodes);a++){var u=t.tileNodes[l][a].getComponent(f);if(u.isFlower())for(var c=l+o,d=a+s,h=function(){var e=t.tileNodes[c][d].getComponent(f);if(0==e.canPassWind())return 1;if(1==e.canHoldSeed()){var i=t.gridAnimation.seedFly(u.node,e.node).then((function(){e.setSeed()}));n.push(i)}c+=o,d+=s};t.inBounds(c,d)&&!h(););}0===n.length?i():Promise.all(n).then((function(){i()}))}))},s.inBounds=function(e,t){return e>=0&&e<this.getRowNumber(this.tileNodes)&&t>=0&&t<this.getColumnNumber(this.tileNodes)},s.isBoardFullyCovered=function(){for(var e,t=o(this.tileNodes);!(e=t()).done;)for(var i,n=e.value,r=o(n);!(i=r()).done;){if(!i.value.getComponent(f).isCovered())return!1}return!0},t}(d)).prototype,"tilePrefab",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=t(N.prototype,"gridAnimation",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=N))||v));s._RF.pop()}}}));

System.register("chunks:///_virtual/IdleAnimations.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,i,t,o,r,s,a,l,u,c;return{setters:[function(e){n=e.applyDecoratedDescriptor,i=e.inheritsLoose,t=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,s=e._decorator,a=e.Node,l=e.tween,u=e.Vec3,c=e.Component}],execute:function(){var p,d,y,f,g,b,I,h;r._RF.push({},"cdd78pOz89KMKUEUB7o2RDu","IdleAnimations",void 0);var v=s.ccclass,w=s.property;e("IdelAnimations",(p=v("IdelAnimations"),d=w(a),y=w(a),p(((h=function(e){function n(){for(var n,i=arguments.length,r=new Array(i),s=0;s<i;s++)r[s]=arguments[s];return n=e.call.apply(e,[this].concat(r))||this,t(n,"cloudFace",b,o(n)),t(n,"pointer",I,o(n)),n}i(n,e);var r=n.prototype;return r.onLoad=function(){n.instance=this,this.idleCloud(),this.idleCompass()},r.idleCloud=function(){this.cloudFace&&l(this.cloudFace).repeatForever(l().by(3,{position:new u(20,0,0)},{easing:"sineInOut"}).by(3,{position:new u(-20,0,0)},{easing:"sineInOut"})).start()},r.idleCompass=function(){this.pointer&&l(this.pointer).repeatForever(l().by(1.2,{angle:5},{easing:"sineInOut"}).by(1.2,{angle:-5},{easing:"sineInOut"})).start()},r.stopIdle=function(e){l(e).stop()},r.idleIndicator=function(e){var n=Math.random();l(e).delay(n).repeatForever(l().by(1,{position:new u(0,5,0)},{easing:"sineInOut"}).by(1,{position:new u(0,-5,0)},{easing:"sineInOut"})).start()},r.idleTileFlower=function(e){l(e).repeatForever(l().by(1.4,{position:new u(0,4,0)},{easing:"sineInOut"}).by(1.4,{position:new u(0,-4,0)},{easing:"sineInOut"})).start()},r.idleTileSeed=function(e){l(e).repeatForever(l().by(2,{position:new u(0,3,0)},{easing:"sineInOut"}).by(2,{position:new u(0,-3,0)},{easing:"sineInOut"})).start()},n}(c)).instance=void 0,b=n((g=h).prototype,"cloudFace",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=n(g.prototype,"pointer",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=g))||f));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var n,e,i,o,r,a,s,c,u,p,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,i=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,s=t.Node,c=t.tween,u=t.UIOpacity,p=t.Vec3,l=t.Component}],execute:function(){var f,g,d,h,y;r._RF.push({},"809d6F3gqxDZK/7JbNVkEZN","InstructionAnimation",void 0);var v=a.ccclass,N=a.property;t("InstructionAnimation",(f=v("InstructionAnimation"),g=N(s),f((y=n((h=function(t){function n(){for(var n,e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return n=t.call.apply(t,[this].concat(r))||this,i(n,"fingerNode",y,o(n)),n}e(n,t);var r=n.prototype;return r.hideFinger=function(){var t=this;c(this.fingerNode).stop(),c(this.fingerNode.getComponent(u)).to(.3,{opacity:0}).call((function(){return t.fingerNode.active=!1})).start()},r.idleFinger=function(){var t=this.fingerNode.position;this.fingerNode.active=!0,c(this.fingerNode).repeatForever(c().to(.4,{position:new p(t.x,t.y-15)},{easing:"sineInOut"}).to(.4,{position:new p(t.x,t.y)},{easing:"sineInOut"})).start()},n}(l)).prototype,"fingerNode",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=h))||d));r._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./InstructionAnimation.ts"],(function(t){var n,i,o,r,e,a,c,s;return{setters:[function(t){n=t.applyDecoratedDescriptor,i=t.inheritsLoose,o=t.initializerDefineProperty,r=t.assertThisInitialized},function(t){e=t.cclegacy,a=t._decorator,c=t.Component},function(t){s=t.InstructionAnimation}],execute:function(){var l,u,p,h,f;e._RF.push({},"a8b3dhBlYNIYKU91I5oB63w","InstructionController",void 0);var d=a.ccclass,v=a.property;t("InstructionController",(l=d("InstructionController"),u=v(s),l((f=n((h=function(t){function n(){for(var n,i=arguments.length,e=new Array(i),a=0;a<i;a++)e[a]=arguments[a];return n=t.call.apply(t,[this].concat(e))||this,o(n,"animation",f,r(n)),n}i(n,t);var e=n.prototype;return e.start=function(){this.node.active=!1},e.hide=function(){this.animation.hideFinger()},e.init=function(t){1!=t?this.node.active=!1:(this.node.active=!0,this.animation.idleFinger())},n}(c)).prototype,"animation",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),p=h))||p));e._RF.pop()}}}));

System.register("chunks:///_virtual/LevelManager.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){e({getLevelConfig:function(e){var n,o=r[Math.min(e-1,r.length-1)];return o.direction=null!=(n=o.direction)?n:8,o},isLastLevel:function(e){return e>=r.length}}),n._RF.push({},"0135eEnWntLcpY2ffWv6jeY","LevelManager",void 0);var r=[{level:1,round:3,direction:4,windSequence:["W"],board:[[1,1],[1,1]]},{level:2,round:2,direction:4,windSequence:["W","E"],board:[[1,1],[1,1]]},{level:3,round:6,windSequence:["E"],board:[[1,1,1],[1,2,1],[1,1,1]]},{level:4,round:6,board:[[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]]},{level:5,round:6,board:[[1,1,1,1,1],[1,1,1,1,1],[1,2,3,2,1],[1,1,1,1,1],[1,1,1,1,1]]},{level:6,round:6,board:[[1,1,1,1,1],[1,2,4,2,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1]]},{level:7,round:6,board:[[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,4,4,2,1],[1,1,1,1,1]]}];n._RF.pop()}}}));

System.register("chunks:///_virtual/LevelTestScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts"],(function(e){var r,n,t,a,i,o,c,l;return{setters:[function(e){r=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,a=e.assertThisInitialized},function(e){i=e.cclegacy,o=e._decorator,c=e.Component},function(e){l=e.GameManager}],execute:function(){var s,u,p,g,v;i._RF.push({},"0bdaateNrNOdIbiDCwxjrgM","LevelTestScene",void 0);var d=o.ccclass,f=o.property;e("LevelTestScene",(s=d("LevelTestScene"),u=f(l),s((v=r((g=function(e){function r(){for(var r,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return r=e.call.apply(e,[this].concat(i))||this,t(r,"gameManager",v,a(r)),r}return n(r,e),r.prototype.start=function(){var e=window.__currentTestLevel__||{level:1,round:3,direction:4,windSequence:["W"],board:[[1,1],[1,1]]};this.gameManager&&(console.log(e),this.gameManager.loadLevel(e))},r}(c)).prototype,"gameManager",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),p=g))||p));i._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./CompassAnimation.ts","./CompassController.ts","./InstructionAnimation.ts","./InstructionController.ts","./TopBoardAnimation.ts","./TopBoardController.ts","./FlowerAnimation.ts","./FlowerController.ts","./GridAnimation.ts","./GridController.ts","./PlantController.ts","./ResultPopup.ts","./ResultPopupAnimation.ts","./TileAnimation.ts","./TileController.ts","./GeneralModifier.ts","./GrassModifier.ts","./Modifiers.ts","./MudModifier.ts","./RockModifier.ts","./TileModifierInterface.ts","./CellState.ts","./Direction.ts","./GameEnums.ts","./EffectsHelper.ts","./OneShotParticle.ts","./SceneSwitchAnimation.ts","./GameManager.ts","./LevelManager.ts","./WindStrategy.ts","./GameScene.ts","./LevelTestScene.ts","./PortraitScene.ts","./StartScene.ts","./AudioHelper.ts","./BackgroundController.ts","./IdleAnimations.ts","./ResizeHandler.ts","./TimelineHelper.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/Modifiers.ts",["cc","./MudModifier.ts","./GrassModifier.ts","./RockModifier.ts","./GeneralModifier.ts"],(function(i){var e,r,o,f,s;return{setters:[function(i){e=i.cclegacy},function(i){r=i.MudModifier},function(i){o=i.GrassModifier},function(i){f=i.RockModifier},function(i){s=i.GeneralModifier}],execute:function(){e._RF.push({},"f9e83JJsHNHsZcG4b1HhSwE","Modifiers",void 0);i("ModifierMap",{generalModifier:s,grassModifier:o,mudModifier:r,rockModifier:f});e._RF.pop()}}}));

System.register("chunks:///_virtual/MudModifier.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,r;return{setters:[function(e){t=e.createForOfIteratorHelperLoose},function(e){r=e.cclegacy}],execute:function(){r._RF.push({},"2480b5cF8NMEIASgGCVqI6U","MudModifier",void 0);e("MudModifier",function(){function e(){}var r=e.prototype;return r.init=function(e){var r=e.getChildByName("EmptyNode");if(r){for(var n,i=t(r.children);!(n=i()).done;){n.value.active=!1}var o=r.getChildByName("MudSprite");o&&(o.active=!0)}},r.canPlant=function(){return!1},r.canHoldSeed=function(){return!0},e}());r._RF.pop()}}}));

System.register("chunks:///_virtual/OneShotParticle.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,r,o,n,c;return{setters:[function(t){e=t.inheritsLoose},function(t){r=t.cclegacy,o=t._decorator,n=t.ParticleSystem2D,c=t.Component}],execute:function(){var i;r._RF.push({},"2a606wOyVpItYUnzW74HPaB","OneShotParticle",void 0);var s=o.ccclass;o.property,t("VictoryParticle",s("VictoryParticle")(i=function(t){function r(){return t.apply(this,arguments)||this}return e(r,t),r.prototype.start=function(){var t=this,e=this.getComponent(n);e&&e.resetSystem(),setTimeout((function(){t.node.destroy()}),4e3)},r}(c))||i);r._RF.pop()}}}));

System.register("chunks:///_virtual/PlantController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GridController.ts","./FlowerController.ts"],(function(r){var t,n,e,o,i,l,u,c,a,s,p;return{setters:[function(r){t=r.applyDecoratedDescriptor,n=r.inheritsLoose,e=r.initializerDefineProperty,o=r.assertThisInitialized,i=r.asyncToGenerator,l=r.regeneratorRuntime},function(r){u=r.cclegacy,c=r._decorator,a=r.Component},function(r){s=r.GridController},function(r){p=r.FlowerController}],execute:function(){var f,h,d,C,v,w,y;u._RF.push({},"856dcU59lJIR7+xm/FGgHiW","PlantController",void 0);var g=c.ccclass,b=c.property;r("PlantController",(f=g("PlantController"),h=b(p),d=b(s),f((w=t((v=function(r){function t(){for(var t,n=arguments.length,i=new Array(n),l=0;l<n;l++)i[l]=arguments[l];return t=r.call.apply(r,[this].concat(i))||this,e(t,"flowerController",w,o(t)),e(t,"gridController",y,o(t)),t.count=0,t.currentCount=0,t}n(t,r);var u=t.prototype;return u.init=function(r,t){this.count=r,this.flowerController.init(r),this.gridController.init(t)},u.reset=function(){this.flowerController.init(this.count),this.gridController.reset()},u.plant=function(){var r=i(l().mark((function r(t){var n;return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.flowerController.plant(t);case 2:return(n=r.sent)&&this.currentCount--,r.abrupt("return",n);case 5:case"end":return r.stop()}}),r,this)})));return function(t){return r.apply(this,arguments)}}(),u.blow=function(){var r=i(l().mark((function r(t){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.gridController.blowSeeds(t);case 2:case"end":return r.stop()}}),r,this)})));return function(t){return r.apply(this,arguments)}}(),u.roundOver=function(){var r=i(l().mark((function r(){return l().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,this.gridController.roundOver();case 2:case"end":return r.stop()}}),r,this)})));return function(){return r.apply(this,arguments)}}(),u.isBoardFullyCovered=function(){return this.gridController.isBoardFullyCovered()},t}(a)).prototype,"flowerController",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=t(v.prototype,"gridController",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=v))||C));u._RF.pop()}}}));

System.register("chunks:///_virtual/PortraitScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameManager.ts","./LevelManager.ts"],(function(e){var t,r,n,a,i,o,c,l,s,u;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,n=e.initializerDefineProperty,a=e.assertThisInitialized},function(e){i=e.cclegacy,o=e._decorator,c=e.Component},function(e){l=e.GameManager},function(e){s=e.getLevelConfig,u=e.isLastLevel}],execute:function(){var g,p,v,f,m;i._RF.push({},"01f53TqSTdD2pJVKNzSIVWn","PortraitScene",void 0);var h=o.ccclass,L=o.property;e("PortraitScene",(g=h("PortraitScene"),p=L(l),g((m=t((f=function(e){function t(){for(var t,r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return t=e.call.apply(e,[this].concat(i))||this,n(t,"gameManager",m,a(t)),t}r(t,e);var i=t.prototype;return i.start=function(){console.log("start portraitScene"),this.initGame(),this.gameManager.onGameWin=this.nextLevel.bind(this)},i.initGame=function(){var e=parseInt(localStorage.getItem("currentLevel")||"1");this.gameManager.loadLevel(s(e))},i.nextLevel=function(){var e=parseInt(localStorage.getItem("currentLevel")||"1");u(e)&&(e=1),localStorage.setItem("currentLevel",(e+1).toString()),this.initGame()},t}(c)).prototype,"gameManager",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),v=f))||v));i._RF.pop()}}}));

System.register("chunks:///_virtual/ResizeHandler.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var i,n,t,o,s;return{setters:[function(e){i=e.inheritsLoose},function(e){n=e.cclegacy,t=e._decorator,o=e.view,s=e.Component}],execute:function(){var r;n._RF.push({},"1f38charWNO8K/DfOku4Xc0","ResizeHandler",void 0);var c=t.ccclass;e("ResizeHandler",c("ResizeHandler")(r=function(e){function n(){return e.apply(this,arguments)||this}i(n,e);var t=n.prototype;return t.start=function(){o.on("window-resize",this.onResize,this),o.on("orientation-change",this.onResize,this)},t.onResize=function(){var e=o.getDesignResolutionSize(),i=o.getResolutionPolicy();o.setDesignResolutionSize(e.width,e.height,i),console.log("Screen resized, layout updated")},t.onDestroy=function(){o.off("window-resize",this.onResize,this),o.off("orientation-change",this.onResize,this)},n}(s))||r);n._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopup.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ResultPopupAnimation.ts"],(function(t){var e,n,i,r,o,a,s,u,l,c,p,h,f;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized,o=t.asyncToGenerator,a=t.regeneratorRuntime},function(t){s=t.cclegacy,u=t._decorator,l=t.Label,c=t.Button,p=t.Node,h=t.Component},function(t){f=t.ResultPopupAnimation}],execute:function(){var b,d,R,g,m,y,v,L,w;s._RF.push({},"67522KS9wNPBaNKMCQj6MEU","ResultPopup",void 0);var B=u.ccclass,E=u.property;t("ResultPopup",(b=B("ResultPopup"),d=E(l),R=E(c),g=E(f),b((v=e((y=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"titleLabel",v,r(e)),i(e,"restartButton",L,r(e)),i(e,"animation",w,r(e)),e._onRestart=null,e}n(e,t);var s=e.prototype;return s.start=function(){this.node.active=!1,this.restartButton.node.on(p.EventType.TOUCH_START,this.endShow,this)},s.endShow=function(){this.node.active=!1,this._onRestart&&this._onRestart()},s.show=function(){var t=o(a().mark((function t(e,n){var i,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(console.log(this.restartButton),i=this.restartButton.node.getChildByName("Label"),r=null==i?void 0:i.getComponent(l),this._onRestart=n,!e){t.next=11;break}return this.titleLabel.string="YOU WIN!",r.string="NEXT LEVEL",t.next=9,this.animation.showWin(this.node);case 9:t.next=15;break;case 11:return this.titleLabel.string="LEVEL FAILED",r.string="RETRY",t.next=15,this.animation.showLose(this.node);case 15:case"end":return t.stop()}}),t,this)})));return function(e,n){return t.apply(this,arguments)}}(),e}(h)).prototype,"titleLabel",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(y.prototype,"restartButton",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=e(y.prototype,"animation",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=y))||m));s._RF.pop()}}}));

System.register("chunks:///_virtual/ResultPopupAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./TimelineHelper.ts","./EffectsHelper.ts"],(function(e){var t,n,r,i,o,a,c,u,s,p,l,f,h,d,y;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,u=e._decorator,s=e.Prefab,p=e.sp,l=e.instantiate,f=e.Component},function(e){h=e.AudioHelper},function(e){d=e.wait},function(e){y=e.EffectsHelper}],execute:function(){var P,v,b,m,w,g,R;c._RF.push({},"50650YKPRlHZKhjTHtXKRcC","ResultPopupAnimation",void 0);var k=u.ccclass,x=u.property;e("ResultPopupAnimation",(P=k("ResultPopupAnimation"),v=x(s),b=x(p.Skeleton),P((g=t((w=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"victoryParticlePrefab",g,i(t)),r(t,"backgroundSpine",R,i(t)),t}n(t,e);var c=t.prototype;return c.showWin=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.showVictoryParticles(),h.instance.playSFX("tadaa"),e.next=4,d(1500);case 4:return t.active=!0,this.backgroundSpine.setAnimation(0,"thomasHedgedogWin",!0),e.next=8,this.popupResultPanel(t);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showLose=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h.instance.playSFX("lose"),e.next=3,d(1500);case 3:return t.active=!0,this.backgroundSpine.setAnimation(0,"fail",!1),e.next=7,this.popupResultPanel(t);case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),c.showVictoryParticles=function(){var e=l(this.victoryParticlePrefab);e.setPosition(0,0),this.node.addChild(e)},c.popupResultPanel=function(){var e=o(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y.bounceScale(t);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),t}(f)).prototype,"victoryParticlePrefab",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(w.prototype,"backgroundSpine",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=w))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/RockModifier.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t;return{setters:[function(e){n=e.createForOfIteratorHelperLoose},function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"8db040Yu45DzIX/YZ/fAsOG","RockModifier",void 0);e("RockModifier",function(){function e(){}var t=e.prototype;return t.canPlant=function(){return!1},t.canHoldSeed=function(){return!1},t.init=function(e){var t=e.getChildByName("EmptyNode");if(t){for(var r,i=n(t.children);!(r=i()).done;){r.value.active=!1}var o=t.getChildByName("StoneSprite");o&&(o.active=!0)}},t.canPassWind=function(){return!1},t.isBlockingTile=function(){return!0},e}());t._RF.pop()}}}));

System.register("chunks:///_virtual/SceneSwitchAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts"],(function(t){var e,n,o,i,r,a,c,u,s,l,p,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,o=t.initializerDefineProperty,i=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,c=t.Node,u=t.UIOpacity,s=t.tween,l=t.Vec3,p=t.Component},function(t){d=t.AudioHelper}],execute:function(){var f,h,m,y,w;r._RF.push({},"ad974rHdelF87WmmoGkUViU","SceneSwitchAnimation",void 0);var S=a.ccclass,v=a.property;t("SceneSwitchAnimation",(f=S("SceneSwitchAnimation"),h=v(c),f((w=e((y=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r))||this,o(e,"rootNode",w,i(e)),e}n(e,t);var r=e.prototype;return r.start=function(){},r.update=function(t){},r.switch=function(){var t=this;return new Promise((function(e){d.instance.playSFX("swish");var n=t.rootNode.getComponent(u);n||(n=t.rootNode.addComponent(u)),s(t.rootNode).to(.5,{scale:new l(.3,.3,1)},{easing:"quadInOut"}).start(),s(n).to(.5,{opacity:0},{easing:"quadInOut"}).call((function(){e()})).start()}))},e}(p)).prototype,"rootNode",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=y))||m));r._RF.pop()}}}));

System.register("chunks:///_virtual/StartScene.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SceneSwitchAnimation.ts"],(function(e){var t,n,r,i,o,a,c,s,u,l,p,f,S;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,o=e.asyncToGenerator,a=e.regeneratorRuntime},function(e){c=e.cclegacy,s=e._decorator,u=e.view,l=e.ResolutionPolicy,p=e.Component,f=e.director},function(e){S=e.SceneSwitchAnimation}],execute:function(){var h,m,y,d,g;c._RF.push({},"b7820Ibl8lE8a/m7g4FqHbp","StartScene",void 0);var v=s.ccclass,w=s.property;e("StartManager",(h=v("StartManager"),m=w(S),h((g=t((d=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,r(t,"sceneAnimation",g,i(t)),t}n(t,e);var c=t.prototype;return c.start=function(){},c.onLoad=function(){u.setDesignResolutionSize(1280,720,l.SHOW_ALL),u.resizeWithBrowserSize(!0)},c.update=function(e){},c.onStartGame=function(){var e=o(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.sceneAnimation.switch();case 2:f.loadScene("portraitScene");case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t}(p)).prototype,"sceneAnimation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=d))||y));c._RF.pop()}}}));

System.register("chunks:///_virtual/TileAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioHelper.ts","./EffectsHelper.ts"],(function(e){var n,t,r,o,i,c,s,u;return{setters:[function(e){n=e.inheritsLoose,t=e.asyncToGenerator,r=e.regeneratorRuntime},function(e){o=e.cclegacy,i=e._decorator,c=e.Component},function(e){s=e.AudioHelper},function(e){u=e.EffectsHelper}],execute:function(){var a;o._RF.push({},"773624mcfpELo13mt1ts7jO","TileAnimation",void 0);var p=i.ccclass;i.property,e("TileAnimation",p("TileAnimation")(a=function(e){function o(){return e.apply(this,arguments)||this}return n(o,e),o.prototype.switchToFlower=function(){var e=t(r().mark((function e(n){return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s.instance.playSFX("sparkle"),e.next=3,u.bounceScale(n);case 3:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),o}(c))||a);o._RF.pop()}}}));

System.register("chunks:///_virtual/TileController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TileAnimation.ts","./CellState.ts","./Modifiers.ts"],(function(e){var i,t,n,o,s,r,a,d,l,c,h,u,f;return{setters:[function(e){i=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){s=e.cclegacy,r=e._decorator,a=e.Node,d=e.director,l=e.Component},function(e){c=e.TileAnimation},function(e){h=e.CellState,u=e.TileModifier},function(e){f=e.ModifierMap}],execute:function(){var p,m,S,y,v;s._RF.push({},"c0f27p3AoRMq76p18EoW8hV","TileController",void 0);var N=r.ccclass,w=r.property;e("TileController",(p=N("TileController"),m=w(c),p((v=i((y=function(e){function i(){for(var i,t=arguments.length,s=new Array(t),r=0;r<t;r++)s[r]=arguments[r];return i=e.call.apply(e,[this].concat(s))||this,n(i,"tileAnimation",v,o(i)),i.state=h.Empty,i.modifier=null,i.seedSpriteNode=null,i.dandelionSpriteNode=null,i}t(i,e);var s=i.prototype;return s.onLoad=function(){this.seedSpriteNode=this.node.getChildByName("SeedNode"),this.dandelionSpriteNode=this.node.getChildByName("DandelionNode"),this.state=h.Empty},s.init=function(e,i,t){switch(t){case u.Grass:this.modifier=new f.grassModifier;break;case u.Rock:this.modifier=new f.rockModifier;break;case u.Normal:this.modifier=new f.generalModifier;break;case u.Mud:this.modifier=new f.mudModifier}this.modifier.init(this.node),this.node.on(a.EventType.TOUCH_END,this.onClick,this)},s.onClick=function(){this.state!==h.Empty&&this.state!==h.Seed||d.emit("TILE_CLICKED",this.node)},s.canPlant=function(){return this.modifier.canPlant()},s.canHoldSeed=function(){return this.modifier.canHoldSeed()},s.canPassWind=function(){return!this.modifier.canPassWind||this.modifier.canPassWind()},s.setFlower=function(){var e;this.canPlant()&&(this.state=h.Dandelion,this.updateVisual(),null==(e=this.modifier)||null==e.onFlowerLanded||e.onFlowerLanded(this))},s.setSeed=function(){var e;this.canHoldSeed()&&this.isEmpty()&&(this.state=h.Seed,this.updateVisual(),null==(e=this.modifier)||null==e.onSeedLanded||e.onSeedLanded(this))},s.setEmpty=function(){this.state=h.Empty,this.updateVisual()},s.switchToFlower=function(){this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!0,this.state=h.Dandelion,this.tileAnimation.switchToFlower(this.node)},s.isFlower=function(){return this.state==h.Dandelion},s.isEmpty=function(){return this.state==h.Empty},s.isSeed=function(){return this.state==h.Seed},s.isCovered=function(){var e,i=!1;return null!=(e=this.modifier)&&e.isBlockingTile?(i=this.modifier.isBlockingTile(),console.log("block tile cover status: "+i)):i=this.state==h.Seed||this.state==h.Dandelion,i},s.updateVisual=function(){switch(this.seedSpriteNode.active=!1,this.dandelionSpriteNode.active=!1,this.state){case h.Empty:break;case h.Dandelion:this.dandelionSpriteNode.active=!0;break;case h.Seed:this.seedSpriteNode.active=!0}},i}(l)).prototype,"tileAnimation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),S=y))||S));s._RF.pop()}}}));

System.register("chunks:///_virtual/TileModifierInterface.ts",["cc"],(function(){var e;return{setters:[function(t){e=t.cclegacy}],execute:function(){e._RF.push({},"f79d8CUtGBGoZrUHU9WOWoA","TileModifierInterface",void 0),e._RF.pop()}}}));

System.register("chunks:///_virtual/TimelineHelper.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t,r,i;return{setters:[function(e){n=e.asyncToGenerator,t=e.regeneratorRuntime,r=e.createForOfIteratorHelperLoose},function(e){i=e.cclegacy}],execute:function(){e("wait",(function(e){return new Promise((function(n){return setTimeout(n,e)}))})),i._RF.push({},"5d487VIxChIOa4+/vgmMhyl","TimelineHelper",void 0);e("TimelineHelper",function(){function e(){}return e.run=function(){var e=n(t().mark((function e(n,i){var u,a,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===i&&(i=0),u=r(n);case 2:if((a=u()).done){e.next=11;break}return o=a.value,e.next=6,o();case 6:if(!(i>0)){e.next=9;break}return e.next=9,this.wait(i);case 9:e.next=2;break;case 11:case"end":return e.stop()}}),e,this)})));return function(n,t){return e.apply(this,arguments)}}(),e.wait=function(e){return new Promise((function(n){return setTimeout(n,e)}))},e.runWithDelays=function(){var e=n(t().mark((function e(n){var i,u,a,o,c;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=r(n);case 1:if((u=i()).done){e.next=10;break}return a=u.value,o=a[0],c=a[1],e.next=5,o();case 5:if(void 0===c){e.next=8;break}return e.next=8,this.wait(c);case 8:e.next=1;break;case 10:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}(),e}());i._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardAnimation.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TimelineHelper.ts","./AudioHelper.ts"],(function(e){var n,t,r,i,a,o,c,l,s,u,p,h,d,f;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized,a=e.asyncToGenerator,o=e.regeneratorRuntime},function(e){c=e.cclegacy,l=e._decorator,s=e.Node,u=e.tween,p=e.Vec3,h=e.Component},function(e){d=e.wait},function(e){f=e.AudioHelper}],execute:function(){var g,y,m,v,w;c._RF.push({},"b66f4u1kghK8bQ4VIqpz/gx","TopBoardAnimation",void 0);var A=l.ccclass,T=l.property;e("TopBoardAnimation",(g=A("TopBoardAnimation"),y=T(s),g((w=n((v=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return n=e.call.apply(e,[this].concat(a))||this,r(n,"challengeNode",w,i(n)),n}t(n,e);var c=n.prototype;return c.start=function(){},c.showChallenge=function(){var e=a(o().mark((function e(){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f.instance.playSFX("paper-rip"),u(this.challengeNode).to(1,{scale:new p(1,1,1)},{easing:"quadOut"}).start(),e.next=4,d(3e3);case 4:this.hideChallenge();case 5:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),c.hideChallenge=function(){f.instance.playSFX("paper-collect"),u(this.challengeNode).to(1,{scale:new p(1,0,1)},{easing:"quadIn"}).start()},n}(h)).prototype,"challengeNode",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));c._RF.pop()}}}));

System.register("chunks:///_virtual/TopBoardController.ts",["./rollupPluginModLoBabelHelpers.js","cc","./TopBoardAnimation.ts"],(function(e){var n,t,o,l,i,r,a,c,s,h,u,p;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,o=e.initializerDefineProperty,l=e.assertThisInitialized},function(e){i=e.cclegacy,r=e._decorator,a=e.Node,c=e.Label,s=e.UITransform,h=e.Vec3,u=e.Component},function(e){p=e.TopBoardAnimation}],execute:function(){var g,d,b,f,m,v,y,C,T,w,L;i._RF.push({},"3b4abkQmoRHdrp1eMH60YjY","TopBoardController",void 0);var N=r.ccclass,B=r.property;e("TopBoardController",(g=N("TopBoardController"),d=B(a),b=B(c),f=B(c),m=B(p),g((C=n((y=function(e){function n(){for(var n,t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=arguments[r];return(n=e.call.apply(e,[this].concat(i))||this).level=0,o(n,"challengeNode",C,l(n)),o(n,"levelLabel",T,l(n)),o(n,"challengeLabel",w,l(n)),o(n,"animation",L,l(n)),n}t(n,e);var i=n.prototype;return i.start=function(){var e=this.node.getComponent(s).convertToWorldSpaceAR(h.ZERO),n=this.node.getComponent(s).height,t=this.challengeNode.getComponent(s).convertToNodeSpaceAR(e);this.challengeNode.getComponent(s).height;this.challengeNode.setPosition(t.x,t.y-n/2+22),this.challengeNode.setScale(new h(1,0,1)),this.node.on(a.EventType.TOUCH_END,this.showChallenge,this)},i.init=function(e,n){this.levelLabel.string=e.toString(),this.challengeLabel.string="only "+n+" moves!",e>1&&this.showChallenge()},i.showChallenge=function(){this.animation.showChallenge()},i.update=function(e){},n}(u)).prototype,"challengeNode",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=n(y.prototype,"levelLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=n(y.prototype,"challengeLabel",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=n(y.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=y))||v));i._RF.pop()}}}));

System.register("chunks:///_virtual/WindStrategy.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Direction.ts"],(function(t){var e,n,r,i,o;return{setters:[function(t){e=t.createForOfIteratorHelperLoose},function(t){n=t.cclegacy},function(t){r=t.Direction,i=t.FOUR_DIRECTIONS,o=t.DIRECTION_OFFSETS}],execute:function(){n._RF.push({},"54b126FrOFCc7OqLLLq/8jt","WindStrategy",void 0);t("WindStrategy",function(){function t(){}return t.getBestWindDirection=function(t,n,c){for(var u,s=r.N,a=-1,f=e(i);!(u=f()).done;){for(var l=u.value,d=o[l],g=d.dx,F=d.dy,p=n+g,y=c+F,O=0;p>=0&&p<t.length&&y>=0&&y<t.length;)t[y][p].isEmpty()&&O++,p+=g,y+=F;O>a&&(a=O,s=l)}return s},t}());n._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1V0aWxzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1V0aWxzL0F1ZGlvSGVscGVyLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvVXRpbHMvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvVXRpbHMvQmFja2dyb3VuZENvbnRyb2xsZXIudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db25zdGFudHMvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29uc3RhbnRzL0NlbGxTdGF0ZS50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvQ29tcGFzc1BhbmVsL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvQ29tcGFzc1BhbmVsL0NvbXBhc3NBbmltYXRpb24udHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL0NvbXBhc3NQYW5lbC9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL0NvbXBhc3NQYW5lbC9Db21wYXNzQ29udHJvbGxlci50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbnN0YW50cy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db25zdGFudHMvRGlyZWN0aW9uLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvRWZmZWN0cy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9FZmZlY3RzL0VmZmVjdHNIZWxwZXIudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1BsYW50UGFuZWwvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9QbGFudFBhbmVsL0Zsb3dlckFuaW1hdGlvbi50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvUGxhbnRQYW5lbC9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1BsYW50UGFuZWwvRmxvd2VyQ29udHJvbGxlci50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbnN0YW50cy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db25zdGFudHMvR2FtZUVudW1zLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvTWFuYWdlcnMvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvTWFuYWdlcnMvR2FtZU1hbmFnZXIudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9TY2VuZXMvR2FtZVNjZW5lL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1NjZW5lcy9HYW1lU2NlbmUvR2FtZVNjZW5lLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9UaWxlL21vZGlmaWVycy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvbW9kaWZpZXJzL0dlbmVyYWxNb2RpZmllci50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvVGlsZS9tb2RpZmllcnMvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9UaWxlL21vZGlmaWVycy9HcmFzc01vZGlmaWVyLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9QbGFudFBhbmVsL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvUGxhbnRQYW5lbC9HcmlkQW5pbWF0aW9uLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9QbGFudFBhbmVsL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvUGxhbnRQYW5lbC9HcmlkQ29udHJvbGxlci50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1V0aWxzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1V0aWxzL0lkbGVBbmltYXRpb25zLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9JbnN0cnVjdGlvbi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL0luc3RydWN0aW9uL0luc3RydWN0aW9uQW5pbWF0aW9uLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9JbnN0cnVjdGlvbi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL0luc3RydWN0aW9uL0luc3RydWN0aW9uQ29udHJvbGxlci50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL01hbmFnZXJzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL01hbmFnZXJzL0xldmVsTWFuYWdlci50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1NjZW5lcy9MZXZlbFRlc3RTY2VuZS9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9TY2VuZXMvTGV2ZWxUZXN0U2NlbmUvTGV2ZWxUZXN0U2NlbmUudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvbW9kaWZpZXJzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvVGlsZS9tb2RpZmllcnMvTW9kaWZpZXJzLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvQ29tcG9uZW50cy9UaWxlL21vZGlmaWVycy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvbW9kaWZpZXJzL011ZE1vZGlmaWVyLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvRWZmZWN0cy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9FZmZlY3RzL09uZVNob3RQYXJ0aWNsZS50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvUGxhbnRQYW5lbC9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1BsYW50UGFuZWwvUGxhbnRDb250cm9sbGVyLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvU2NlbmVzL1BvcnRyYWl0U2NlbmUvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvU2NlbmVzL1BvcnRyYWl0U2NlbmUvUG9ydHJhaXRTY2VuZS50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1V0aWxzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL1V0aWxzL1Jlc2l6ZUhhbmRsZXIudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1Jlc3VsdFBvcHVwL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvUmVzdWx0UG9wdXAvUmVzdWx0UG9wdXAudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1Jlc3VsdFBvcHVwL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvUmVzdWx0UG9wdXAvUmVzdWx0UG9wdXBBbmltYXRpb24udHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvbW9kaWZpZXJzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvVGlsZS9tb2RpZmllcnMvUm9ja01vZGlmaWVyLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvRWZmZWN0cy9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9FZmZlY3RzL1NjZW5lU3dpdGNoQW5pbWF0aW9uLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvU2NlbmVzL1N0YXJ0U2NlbmUvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvU2NlbmVzL1N0YXJ0U2NlbmUvU3RhcnRTY2VuZS50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvVGlsZS9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvVGlsZUFuaW1hdGlvbi50cyIsIi4uL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvVGlsZS9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvVGlsZUNvbnRyb2xsZXIudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL1RpbGUvbW9kaWZpZXJzL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvVGlsZS9tb2RpZmllcnMvVGlsZU1vZGlmaWVySW50ZXJmYWNlLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvVXRpbHMvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvVXRpbHMvVGltZWxpbmVIZWxwZXIudHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL0xldmVsVG9wL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvTGV2ZWxUb3AvVG9wQm9hcmRBbmltYXRpb24udHMiLCIuLi9maWxlOi9DOi9Vc2Vycy9vcmFuZy93b3JrL0RhbmRlbGlvbi9hc3NldHMvU2NyaXB0cy9Db21wb25lbnRzL0xldmVsVG9wL2ZpbGU6L0M6L1VzZXJzL29yYW5nL3dvcmsvRGFuZGVsaW9uL2Fzc2V0cy9TY3JpcHRzL0NvbXBvbmVudHMvTGV2ZWxUb3AvVG9wQm9hcmRDb250cm9sbGVyLnRzIiwiLi4vZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvTWFuYWdlcnMvU3RyYXRlZ3kvZmlsZTovQzovVXNlcnMvb3Jhbmcvd29yay9EYW5kZWxpb24vYXNzZXRzL1NjcmlwdHMvTWFuYWdlcnMvU3RyYXRlZ3kvV2luZFN0cmF0ZWd5LnRzIl0sIm5hbWVzIjpbImNjY2xhc3MiLCJfZGVjb3JhdG9yIiwicHJvcGVydHkiLCJfZGVjIiwiX2NsYXNzMiIsIl9Db21wb25lbnQiLCJBdWRpb0hlbHBlciIsIl90aGlzIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjYWxsIiwiYXBwbHkiLCJjb25jYXQiLCJfYmdtIiwiX3NmeCIsIl9pbmhlcml0c0xvb3NlIiwiX3Byb3RvIiwicHJvdG90eXBlIiwib25Mb2FkIiwiaW5zdGFuY2UiLCJ0aGlzIiwiZGlyZWN0b3IiLCJhZGRQZXJzaXN0Um9vdE5vZGUiLCJub2RlIiwiYWRkQ29tcG9uZW50IiwiQXVkaW9Tb3VyY2UiLCJ2b2x1bWUiLCJwbGF5QkdNIiwiX3RoaXMyIiwicmVzb3VyY2VzIiwibG9hZCIsIkF1ZGlvQ2xpcCIsImVyciIsImNsaXAiLCJjb25zb2xlIiwiZXJyb3IiLCJsb29wIiwicGxheSIsInBsYXlTRlgiLCJuYW1lIiwiX3RoaXMzIiwicGxheU9uZVNob3QiLCJDb21wb25lbnQiLCJfY2xhc3MiLCJfUkYiLCJwb3AiLCJCYWNrZ3JvdW5kQ29udHJvbGxlciIsInN0YXJ0Iiwic3ByaXRlIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJ2aXNpYmxlU2l6ZSIsInZpZXciLCJnZXRWaXNpYmxlU2l6ZSIsImltZ1ciLCJyZWN0Iiwid2lkdGgiLCJpbWdIIiwiaGVpZ2h0Iiwic2NhbGVYIiwic2NhbGVZIiwiZmluYWxTY2FsZSIsIk1hdGgiLCJtYXgiLCJzZXRTY2FsZSIsIkNlbGxTdGF0ZSIsIlRpbGVNb2RpZmllciIsIl9kZWMyIiwiTm9kZSIsIl9kZWMzIiwiX2Rlc2NyaXB0b3IiLCJfYXBwbHlEZWNvcmF0ZWREZXNjcmlwdG9yIiwiQ29tcGFzc0FuaW1hdGlvbiIsIl9pbml0aWFsaXplckRlZmluZVByb3BlcnR5IiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIl9kZXNjcmlwdG9yMiIsImFuZ2xlTWFwIiwiTiIsIk5FIiwiRSIsIlNFIiwiUyIsIlNXIiwiVyIsIk5XIiwicm90YXRpb25PZmZzZXQiLCJibG93IiwiY2hvc2VuRGlyZWN0aW9uIiwiX3RoaXMkYW5nbGVNYXAkY2hvc2VuIiwicHMiLCJ3aW5kRWZmZWN0IiwiUGFydGljbGVTeXN0ZW0yRCIsImFuZ2xlIiwicmVzZXRTeXN0ZW0iLCJzdG9wSWRsZSIsInR3ZWVuIiwic3RvcCIsImlkbGVDb21wYXNzIiwicG9pbnRlciIsInJlcGVhdEZvcmV2ZXIiLCJieSIsImVhc2luZyIsInBvaW50QW5pbWF0ZSIsIlByb21pc2UiLCJyZXNvbHZlIiwiX3RoaXMyJGFuZ2xlTWFwJGNob3NlIiwidGFyZ2V0QW5nbGUiLCJ0byIsInBhdGNoQW5pbWF0ZSIsIl9wYXRjaEFuaW1hdGUiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsIndyYXAiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiRWZmZWN0c0hlbHBlciIsImJvdW5jZVNjYWxlIiwiX3giLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJpbml0aWFsaXplciIsIkRpcmVjdGlvbiIsIl9kZWM0IiwiX2RlYzUiLCJfZGVjNiIsIkNvbXBhc3NDb250cm9sbGVyIiwiX2Rlc2NyaXB0b3IzIiwiX2Rlc2NyaXB0b3I0IiwiX2Rlc2NyaXB0b3I1IiwiZGlyZWN0aW9uczgiLCJkaXJlY3Rpb25zNCIsImFsbERpcmVjdGlvbnMiLCJkZXNpZ25lZERpcmVjdGlvbnMiLCJ1c2VkRGlyZWN0aW9ucyIsImluaXQiLCJkaXJlY3Rpb24iLCJ3aW5kU2VxdWVuY2UiLCJfc3RlcCIsIl9pdGVyYXRvciIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2UiLCJkb25lIiwicyIsInZhbHVlIiwicHVzaCIsInBvaW50ZXJOb2RlIiwiY29tcGFzczRTcHJpdGUiLCJzZXRTaWJsaW5nSW5kZXgiLCJjb21wYXNzOFNwcml0ZSIsImFjdGl2ZSIsImhpZGVBbGxDb3ZlcnMiLCJfc3RlcDIiLCJfaXRlcmF0b3IyIiwiY292ZXJTcHJpdGVzIiwic2hvd0NvdmVyIiwiX3Nob3dDb3ZlciIsImQiLCJjb21wYXNzQW5pbWF0aW9uIiwiYXV0b0Jsb3dXaW5kIiwiX2F1dG9CbG93V2luZCIsIl9jYWxsZWUyIiwiX2l0ZXJhdG9yMyIsIl9zdGVwMyIsImF2YWlsYWJsZSIsImRpciIsIl9jb250ZXh0MiIsImZpbHRlciIsImluY2x1ZGVzIiwiYWJydXB0IiwiZmxvb3IiLCJyYW5kb20iLCJlbWl0IiwicmVzZXQiLCJfRElSRUNUSU9OX09GRlNFVFMiLCJkeCIsImR5Iiwib3B0aW9ucyIsIl9vcHRpb25zJGR1cmF0aW9uIiwiX29wdGlvbnMkc2NhbGUiLCJkdXJhdGlvbiIsInNjYWxlIiwiVmVjMyIsIkZsb3dlckFuaW1hdGlvbiIsInBsYW50IiwiZmxvd2VySW5kaWNhdG9yIiwidGFyZ2V0VGlsZSIsInN0YXJ0V29ybGRQb3MiLCJnZXRXb3JsZFBvc2l0aW9uIiwiZW5kV29ybGRQb3MiLCJmbHlGbG93ZXIiLCJzZXRXb3JsZFBvc2l0aW9uIiwibWlkZGxlIiwiY2xvbmUiLCJ5IiwieCIsInBvc2l0aW9uIiwicGFyZW50IiwiVUlUcmFuc2Zvcm0iLCJjb252ZXJ0VG9Ob2RlU3BhY2VBUiIsImlkbGVJbmRpY2F0b3IiLCJmbG93ZXIiLCJkZWxheVNlYyIsImRlbGF5IiwiRmxvd2VyQ29udHJvbGxlciIsImZsb3dlckljb25zIiwiX2xhc3RGbG93ZXJJbmRleCIsImZsb3dlckNvbnRhaW5lciIsImNoaWxkcmVuIiwiY291bnQiLCJpIiwiZmxvd2VyQW5pbWF0aW9uIiwiX3BsYW50IiwidGlsZSIsInRpbGVDdGwiLCJUaWxlQ29udHJvbGxlciIsImNhblBsYW50Iiwic2V0Rmxvd2VyIiwiR2FtZVBoYXNlIiwiUGxhbnRDb250cm9sbGVyIiwiVG9wQm9hcmRDb250cm9sbGVyIiwiSW5zdHJ1Y3Rpb25Db250cm9sbGVyIiwiUmVzdWx0UG9wdXAiLCJfY2xhc3MzIiwiR2FtZU1hbmFnZXIiLCJjdXJyZW50Um91bmQiLCJtYXhSb3VuZHMiLCJpc0NsaWNrYWJsZSIsInBoYXNlIiwiUGxhbnRpbmciLCJfZGVzY3JpcHRvcjYiLCJvbiIsImxvYWRMZXZlbCIsImxldmVsQ29uZmlnIiwibG9nIiwibGV2ZWwiLCJyb3VuZCIsInRvcEJvYXJkQ29udHJvbGxlciIsInBsYW50Q29udHJvbGxlciIsImJvYXJkIiwiY29tcGFzc0NvbnRyb2xsZXIiLCJpbnN0cnVjdGlvbkNvbnRyb2xsZXIiLCJyZXNldEdhbWUiLCJlbnRlclBsYW50aW5nUGhhc2UiLCJzZXRQaGFzZSIsImVudGVyQmxvd2luZ1BoYXNlIiwiY2hlY2tNZWRpdW1SZXN1bHQiLCJCbG93aW5nIiwiaGlkZSIsInNlbnQiLCJ3YWl0IiwiX2Jsb3ciLCJjaGVja1JvdW5kUmVzdWx0IiwiX3gyIiwiZiIsIl9jaGVja1JvdW5kUmVzdWx0IiwiX2NhbGxlZTMiLCJhbGxDb3ZlcmVkIiwiX2NvbnRleHQzIiwiaXNCb2FyZEZ1bGx5Q292ZXJlZCIsIkdhbWVPdmVyIiwicm91bmRPdmVyIiwic2hvd1Jlc3VsdCIsIl9zaG93UmVzdWx0IiwiX2NhbGxlZTQiLCJpc1dpbiIsIl9jb250ZXh0NCIsInJlc3VsdFBvcHVwIiwic2hvdyIsIm9uR2FtZVdpbiIsIl94MyIsIkdhbWVTY2VuZSIsImluaXRHYW1lIiwiZ2FtZU1hbmFnZXIiLCJuZXh0TGV2ZWwiLCJiaW5kIiwiY3VycmVudExldmVsIiwicGFyc2VJbnQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZ2V0TGV2ZWxDb25maWciLCJpc0xhc3RMZXZlbCIsInNldEl0ZW0iLCJ0b1N0cmluZyIsIkdlbmVyYWxNb2RpZmllciIsInRpbGVOb2RlIiwiZW1wdHlOb2RlIiwiZ2V0Q2hpbGRCeU5hbWUiLCJjYW5Ib2xkU2VlZCIsIkdyYXNzTW9kaWZpZXIiLCJncmFzc1Nwcml0ZSIsIm9uU2VlZExhbmRlZCIsInN3aXRjaFRvRmxvd2VyIiwiUHJlZmFiIiwiR3JpZEFuaW1hdGlvbiIsInNlZWRGbHkiLCJmcm9tVGlsZSIsInRvVGlsZSIsInNlZWRGbHlQcmVmYWIiLCJzZWVkIiwiaW5zdGFudGlhdGUiLCJhZGRDaGlsZCIsImNhbnZhcyIsImdldFNjZW5lIiwic3RhcnRQb3MiLCJlbmRQb3MiLCJjb250cm9sUG9zIiwibGVycCIsInN0YXJ0TG9jYWwiLCJjb250cm9sTG9jYWwiLCJlbmRMb2NhbCIsInNldFBvc2l0aW9uIiwidCIsImFuZ2xlRW5kIiwib3BhY2l0eUNvbXAiLCJVSU9wYWNpdHkiLCJvcGFjaXR5Iiwib25VcGRhdGUiLCJ0aW1lIiwib25lTWludXNUIiwiZGVzdHJveSIsIkRJUkVDVElPTl9PRkZTRVQiLCJHcmlkQ29udHJvbGxlciIsInRpbGVTaXplIiwic3BhY2luZyIsInRpbGVOb2RlcyIsInJlbW92ZUFsbENoaWxkcmVuIiwicm93TnVtYmVyIiwiY29sdW1uTnVtYmVyIiwidGlsZUFyZWEiLCJtaW4iLCJzdGFydFgiLCJzdGFydFkiLCJqIiwidGlsZVByZWZhYiIsImdldFJvd051bWJlciIsImdldENvbHVtbk51bWJlciIsInNldEVtcHR5IiwiX3RtcCIsIl9sb29wIiwiaXNTZWVkIiwic2NoZWR1bGVPbmNlIiwiYmxvd1NlZWRzIiwidHdlZW5zIiwiX0RJUkVDVElPTl9PRkZTRVQkZGlyIiwiaXNGbG93ZXIiLCJfbG9vcDIiLCJjYW5QYXNzV2luZCIsInAiLCJncmlkQW5pbWF0aW9uIiwidGhlbiIsInNldFNlZWQiLCJpbkJvdW5kcyIsImFsbCIsInJvdyIsImlzQ292ZXJlZCIsIklkZWxBbmltYXRpb25zIiwiaWRsZUNsb3VkIiwiY2xvdWRGYWNlIiwiaWRsZVRpbGVGbG93ZXIiLCJpZGxlVGlsZVNlZWQiLCJJbnN0cnVjdGlvbkFuaW1hdGlvbiIsImhpZGVGaW5nZXIiLCJmaW5nZXJOb2RlIiwiaWRsZUZpbmdlciIsIm9yaWdpbmFsUG9zIiwiYW5pbWF0aW9uIiwibGV2ZWxJbmRleCIsIl9yYXckZGlyZWN0aW9uIiwicmF3IiwiTGV2ZWxDb25maWdzIiwiTGV2ZWxUZXN0U2NlbmUiLCJsZXZlbERhdGEiLCJ3aW5kb3ciLCJnZW5lcmFsTW9kaWZpZXIiLCJncmFzc01vZGlmaWVyIiwibXVkTW9kaWZpZXIiLCJNdWRNb2RpZmllciIsInJvY2tNb2RpZmllciIsIlJvY2tNb2RpZmllciIsIlZpY3RvcnlQYXJ0aWNsZSIsInNldFRpbWVvdXQiLCJjdXJyZW50Q291bnQiLCJmbG93ZXJDb250cm9sbGVyIiwiZ3JpZENvbnRyb2xsZXIiLCJzdGF0dXMiLCJfcm91bmRPdmVyIiwiUG9ydHJhaXRTY2VuZSIsIlJlc2l6ZUhhbmRsZXIiLCJvblJlc2l6ZSIsInJlc29sdXRpb24iLCJnZXREZXNpZ25SZXNvbHV0aW9uU2l6ZSIsInBvbGljeSIsImdldFJlc29sdXRpb25Qb2xpY3kiLCJzZXREZXNpZ25SZXNvbHV0aW9uU2l6ZSIsIm9uRGVzdHJveSIsIm9mZiIsIkxhYmVsIiwiQnV0dG9uIiwiUmVzdWx0UG9wdXBBbmltYXRpb24iLCJfb25SZXN0YXJ0IiwicmVzdGFydEJ1dHRvbiIsIkV2ZW50VHlwZSIsIlRPVUNIX1NUQVJUIiwiZW5kU2hvdyIsIl9zaG93Iiwib25SZXN0YXJ0IiwibGFiZWxOb2RlIiwibGFiZWwiLCJ0aXRsZUxhYmVsIiwic3RyaW5nIiwic2hvd1dpbiIsInNob3dMb3NlIiwic3AiLCJTa2VsZXRvbiIsIl9zaG93V2luIiwic2hvd1ZpY3RvcnlQYXJ0aWNsZXMiLCJiYWNrZ3JvdW5kU3BpbmUiLCJzZXRBbmltYXRpb24iLCJwb3B1cFJlc3VsdFBhbmVsIiwiX3Nob3dMb3NlIiwidmljdG9yeVBhcnRpY2xlUHJlZmFiIiwiX3BvcHVwUmVzdWx0UGFuZWwiLCJpc0Jsb2NraW5nVGlsZSIsIlNjZW5lU3dpdGNoQW5pbWF0aW9uIiwidXBkYXRlIiwiZGVsdGFUaW1lIiwidWlPcGFjaXR5Iiwicm9vdE5vZGUiLCJTdGFydE1hbmFnZXIiLCJSZXNvbHV0aW9uUG9saWN5IiwiU0hPV19BTEwiLCJyZXNpemVXaXRoQnJvd3NlclNpemUiLCJvblN0YXJ0R2FtZSIsIl9vblN0YXJ0R2FtZSIsInNjZW5lQW5pbWF0aW9uIiwibG9hZFNjZW5lIiwiVGlsZUFuaW1hdGlvbiIsIl9zd2l0Y2hUb0Zsb3dlciIsInN0YXRlIiwiRW1wdHkiLCJtb2RpZmllciIsInNlZWRTcHJpdGVOb2RlIiwiZGFuZGVsaW9uU3ByaXRlTm9kZSIsInR5cGUiLCJHcmFzcyIsIk1vZGlmaWVyTWFwIiwiUm9jayIsIk5vcm1hbCIsIk11ZCIsIlRPVUNIX0VORCIsIm9uQ2xpY2siLCJTZWVkIiwiX3RoaXMkbW9kaWZpZXIiLCJEYW5kZWxpb24iLCJ1cGRhdGVWaXN1YWwiLCJvbkZsb3dlckxhbmRlZCIsIl90aGlzJG1vZGlmaWVyMiIsImlzRW1wdHkiLCJ0aWxlQW5pbWF0aW9uIiwiX3RoaXMkbW9kaWZpZXIzIiwibXMiLCJUaW1lbGluZUhlbHBlciIsInJ1biIsIl9ydW4iLCJzdGVwcyIsImRlbGF5QmV0d2VlblN0ZXBzIiwic3RlcCIsInJ1bldpdGhEZWxheXMiLCJfcnVuV2l0aERlbGF5cyIsInN0ZXBUdXBsZXMiLCJfc3RlcDIkdmFsdWUiLCJ1bmRlZmluZWQiLCJUb3BCb2FyZEFuaW1hdGlvbiIsInNob3dDaGFsbGVuZ2UiLCJfc2hvd0NoYWxsZW5nZSIsImNoYWxsZW5nZU5vZGUiLCJoaWRlQ2hhbGxlbmdlIiwid29ybGRQb3MiLCJjb252ZXJ0VG9Xb3JsZFNwYWNlQVIiLCJaRVJPIiwiYm9hcmRIZWlnaHQiLCJsb2NhbFBvcyIsImxldmVsTGFiZWwiLCJjaGFsbGVuZ2VMYWJlbCIsIldpbmRTdHJhdGVneSIsImdldEJlc3RXaW5kRGlyZWN0aW9uIiwiZmxvd2VyWCIsImZsb3dlclkiLCJiZXN0RGlyIiwibWF4RW1wdHkiLCJGT1VSX0RJUkVDVElPTlMiLCJfRElSRUNUSU9OX09GRlNFVFMkZGkiLCJESVJFQ1RJT05fT0ZGU0VUUyJdLCJtYXBwaW5ncyI6IjBYQVVBLElBQVFBLEVBQXNCQyxFQUF0QkQsUUFBc0JDLEVBQWJDLHlCQUVoQkYsRUFBUSxjQUFjRyxHQUFBQyxXQUFBQyxHQUFBLFNBQUFDLElBQUEsSUFBQSxJQUFBQyxFQUFBQyxFQUFBQyxVQUFBQyxPQUFBQyxNQUFB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R04sUUFBSU0sRUFBQTNELEVBQUF4RSxFQUFBaUIsNEJBQUE4RyxJQUFBTCxnQkFBQUMsY0FBQUMsWUFBQUMsdUJBQUEsT0FHQSxRQUFJTyxFQUFBNUQsRUFBQXhFLEVBQUFpQix1QkFBQStHLElBQUFOLGdCQUFBQyxjQUFBQyxZQUFBQyx1QkFBQSxPQUdHLFFBREhsRixFQUNPM0MsS0FBQTJDLE1BMEN0Q0MsSUFBQUM7OzJaQ25Ed0IsU0FBQTJiLEtBNEJwQixPQTVCb0JBLEVBQ2RDLHFCQUFQLFNBQ0l2UCxFQUNBd1AsRUFDQUMsR0FLQSxJQUhBLElBR2lDN1YsRUFIN0I4VixFQUFxQjlXLEVBQVVoRCxFQUMvQitaLEdBQVksRUFFaEI5VixFQUFBQyxFQUFrQjhWLEtBQWVoVyxFQUFBQyxLQUFBRSxNQUFFLENBTS9CLElBTitCLElBQXhCdUIsRUFBRzFCLEVBQUFLLE1BQ1Y0VixFQUFtQkMsRUFBa0J4VSxHQUE3QlUsRUFBRTZULEVBQUY3VCxHQUFJQyxFQUFFNFQsRUFBRjVULEdBQ1JtQixFQUFJb1MsRUFBVXhULEVBQ2RtQixFQUFJc1MsRUFBVXhULEVBQ2RpQyxFQUFRLEVBRUxkLEdBQUssR0FBS0EsRUFBSTRDLEVBQU01TyxRQUFVK0wsR0FBSyxHQUFLQSxFQUFJNkMsRUFBTTVPLFFBQ2pENE8sRUFBTTdDLEdBQUdDLEdBQUd1USxXQUFXelAsSUFDM0JkLEdBQUtwQixFQUNMbUIsR0FBS2xCLEVBR0xpQyxFQUFReVIsSUFDUkEsRUFBV3pSLEVBQ1h3UixFQUFVcFUsR0FJbEIsT0FBT29VLEdBQ1ZKLFFBQ0o1YixJQUFBQyIsImZpbGUiOiJhbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhc3NldHMvU2NyaXB0cy9BdWRpb01hbmFnZXIudHNcclxuXHJcbmltcG9ydCB7XHJcbiAgICBfZGVjb3JhdG9yLFxyXG4gICAgQ29tcG9uZW50LFxyXG4gICAgQXVkaW9Tb3VyY2UsXHJcbiAgICByZXNvdXJjZXMsXHJcbiAgICBBdWRpb0NsaXAsXHJcbiAgICBkaXJlY3RvcixcclxufSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiQXVkaW9IZWxwZXJcIilcclxuZXhwb3J0IGNsYXNzIEF1ZGlvSGVscGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIHB1YmxpYyBzdGF0aWMgaW5zdGFuY2U6IEF1ZGlvSGVscGVyO1xyXG5cclxuICAgIHByaXZhdGUgX2JnbTogQXVkaW9Tb3VyY2U7XHJcbiAgICBwcml2YXRlIF9zZng6IEF1ZGlvU291cmNlO1xyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICBBdWRpb0hlbHBlci5pbnN0YW5jZSA9IHRoaXM7XHJcbiAgICAgICAgZGlyZWN0b3IuYWRkUGVyc2lzdFJvb3ROb2RlKHRoaXMubm9kZSk7XHJcblxyXG4gICAgICAgIC8vIOa3u+WKoOS4pOS4qiBBdWRpb1NvdXJjZVxyXG4gICAgICAgIHRoaXMuX2JnbSA9IHRoaXMubm9kZS5hZGRDb21wb25lbnQoQXVkaW9Tb3VyY2UpO1xyXG4gICAgICAgIHRoaXMuX2JnbS52b2x1bWUgPSAwLjU7XHJcbiAgICAgICAgdGhpcy5fc2Z4ID0gdGhpcy5ub2RlLmFkZENvbXBvbmVudChBdWRpb1NvdXJjZSk7XHJcbiAgICAgICAgdGhpcy5fc2Z4LnZvbHVtZSA9IDE7XHJcbiAgICB9XHJcblxyXG4gICAgcGxheUJHTSgpIHtcclxuICAgICAgICByZXNvdXJjZXMubG9hZChcIlNvdW5kcy9iZ21cIiwgQXVkaW9DbGlwLCAoZXJyLCBjbGlwKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgICAgIHRoaXMuX2JnbS5jbGlwID0gY2xpcCE7XHJcbiAgICAgICAgICAgIHRoaXMuX2JnbS5sb29wID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5fYmdtLnBsYXkoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5U0ZYKG5hbWU6IHN0cmluZykge1xyXG4gICAgICAgIHJlc291cmNlcy5sb2FkKGBTb3VuZHMvJHtuYW1lfWAsIEF1ZGlvQ2xpcCwgKGVyciwgY2xpcCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgICAgICB0aGlzLl9zZngucGxheU9uZVNob3QoY2xpcCEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgTm9kZSwgU3ByaXRlLCB2aWV3IH0gZnJvbSBcImNjXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IF9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzcyhcIkJhY2tncm91bmRDb250cm9sbGVyXCIpXHJcbmV4cG9ydCBjbGFzcyBCYWNrZ3JvdW5kQ29udHJvbGxlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICBjb25zdCBzcHJpdGUgPSB0aGlzLmdldENvbXBvbmVudChTcHJpdGUpO1xyXG4gICAgICAgIGlmICghc3ByaXRlIHx8ICFzcHJpdGUuc3ByaXRlRnJhbWUpIHJldHVybjtcclxuXHJcbiAgICAgICAgY29uc3QgdmlzaWJsZVNpemUgPSB2aWV3LmdldFZpc2libGVTaXplKCk7XHJcbiAgICAgICAgY29uc3QgaW1nVyA9IHNwcml0ZS5zcHJpdGVGcmFtZS5yZWN0LndpZHRoO1xyXG4gICAgICAgIGNvbnN0IGltZ0ggPSBzcHJpdGUuc3ByaXRlRnJhbWUucmVjdC5oZWlnaHQ7XHJcblxyXG4gICAgICAgIGNvbnN0IHNjYWxlWCA9IHZpc2libGVTaXplLndpZHRoIC8gaW1nVztcclxuICAgICAgICBjb25zdCBzY2FsZVkgPSB2aXNpYmxlU2l6ZS5oZWlnaHQgLyBpbWdIO1xyXG4gICAgICAgIGNvbnN0IGZpbmFsU2NhbGUgPSBNYXRoLm1heChzY2FsZVgsIHNjYWxlWSk7IC8vIOS/neaMgeavlOS+i++8jOmTuua7oeiDjOaZr1xyXG5cclxuICAgICAgICB0aGlzLm5vZGUuc2V0U2NhbGUoZmluYWxTY2FsZSwgZmluYWxTY2FsZSk7XHJcbiAgICB9XHJcbn1cclxuIiwiZXhwb3J0IGVudW0gQ2VsbFN0YXRlIHtcclxuICAgIEVtcHR5LFxyXG4gICAgRGFuZGVsaW9uLFxyXG4gICAgU2VlZCxcclxufVxyXG5cclxuZXhwb3J0IGVudW0gVGlsZU1vZGlmaWVyIHtcclxuICAgIE5vcm1hbCA9IDEsXHJcbiAgICBNdWQgPSAyLFxyXG4gICAgR3Jhc3MgPSAzLFxyXG4gICAgUm9jayA9IDQsXHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCB0d2VlbiwgUGFydGljbGVTeXN0ZW0yRCwgVmVjMyB9IGZyb20gXCJjY1wiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuaW1wb3J0IHsgQXVkaW9IZWxwZXIgfSBmcm9tIFwiLi4vLi4vVXRpbHMvQXVkaW9IZWxwZXJcIjtcclxuaW1wb3J0IHsgRWZmZWN0c0hlbHBlciB9IGZyb20gXCIuLi8uLi9FZmZlY3RzL0VmZmVjdHNIZWxwZXJcIjtcclxuQGNjY2xhc3MoXCJDb21wYXNzQW5pbWF0aW9uXCIpXHJcbmV4cG9ydCBjbGFzcyBDb21wYXNzQW5pbWF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShOb2RlKVxyXG4gICAgcG9pbnRlcjogTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KE5vZGUpXHJcbiAgICB3aW5kRWZmZWN0OiBOb2RlID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIGFuZ2xlTWFwID0ge1xyXG4gICAgICAgIE46IDAsXHJcbiAgICAgICAgTkU6IDMxNSxcclxuICAgICAgICBFOiAyNzAsXHJcbiAgICAgICAgU0U6IDIyNSxcclxuICAgICAgICBTOiAxODAsXHJcbiAgICAgICAgU1c6IDEzNSxcclxuICAgICAgICBXOiA5MCxcclxuICAgICAgICBOVzogNDUsXHJcbiAgICB9O1xyXG4gICAgcHJpdmF0ZSByb3RhdGlvbk9mZnNldCA9IDA7XHJcblxyXG4gICAgYmxvdyhjaG9zZW5EaXJlY3Rpb246IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHBzID0gdGhpcy53aW5kRWZmZWN0LmdldENvbXBvbmVudChQYXJ0aWNsZVN5c3RlbTJEKTtcclxuICAgICAgICBjb25zdCBhbmdsZSA9IHRoaXMuYW5nbGVNYXBbY2hvc2VuRGlyZWN0aW9uXSA/PyAwO1xyXG4gICAgICAgIHBzLmFuZ2xlID0gYW5nbGUgKyAxODA7IC8vIOavlOWmguS7jiBOVyDlkLnlkJEgU0VcclxuICAgICAgICBwcy5yZXNldFN5c3RlbSgpOyAvLyDmkq3mlL7kuIDmrKFcclxuICAgIH1cclxuXHJcbiAgICBzdG9wSWRsZShub2RlOiBOb2RlKSB7XHJcbiAgICAgICAgdHdlZW4obm9kZSkuc3RvcCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGlkbGVDb21wYXNzKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnBvaW50ZXIpIHtcclxuICAgICAgICAgICAgdHdlZW4odGhpcy5wb2ludGVyKVxyXG4gICAgICAgICAgICAgICAgLnJlcGVhdEZvcmV2ZXIoXHJcbiAgICAgICAgICAgICAgICAgICAgdHdlZW4oKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuYnkoMS4yLCB7IGFuZ2xlOiA1IH0sIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5ieSgxLjIsIHsgYW5nbGU6IC01IH0sIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH0pXHJcbiAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAuc3RhcnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcG9pbnRBbmltYXRlKGNob3NlbkRpcmVjdGlvbjogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgICAgIEF1ZGlvSGVscGVyLmluc3RhbmNlLnBsYXlTRlgoXCJzcGluXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBmaW5hbEFuZ2xlID0gdGhpcy5hbmdsZU1hcFtjaG9zZW5EaXJlY3Rpb25dID8/IDA7XHJcbiAgICAgICAgICAgIGNvbnN0IGZ1bGxTcGluID0gMzYwICogMjsgLy8g5Y+v5Lul5aSa5ZyIXHJcbiAgICAgICAgICAgIGxldCB0YXJnZXRBbmdsZSA9IGZpbmFsQW5nbGUgKyBmdWxsU3BpbiArIHRoaXMucm90YXRpb25PZmZzZXQ7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnJvdGF0aW9uT2Zmc2V0ICs9IGZ1bGxTcGluO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5zdG9wSWRsZSh0aGlzLnBvaW50ZXIpO1xyXG5cclxuICAgICAgICAgICAgdHdlZW4odGhpcy5wb2ludGVyKVxyXG4gICAgICAgICAgICAgICAgLnRvKDMuMCwgeyBhbmdsZTogdGFyZ2V0QW5nbGUgfSwgeyBlYXNpbmc6IFwiY3ViaWNPdXRcIiB9KVxyXG4gICAgICAgICAgICAgICAgLmNhbGwoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIEF1ZGlvSGVscGVyLmluc3RhbmNlLnBsYXlTRlgoXCJibG93aW5nXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaWRsZUNvbXBhc3MoKTtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgcGF0Y2hBbmltYXRlKG5vZGU6IE5vZGUpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgICAgICBhd2FpdCBFZmZlY3RzSGVscGVyLmJvdW5jZVNjYWxlKG5vZGUpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgZGlyZWN0b3IsIE5vZGUsIGZpbmQsIFNwcml0ZSB9IGZyb20gXCJjY1wiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuaW1wb3J0IHsgQ29tcGFzc0FuaW1hdGlvbiB9IGZyb20gXCIuL0NvbXBhc3NBbmltYXRpb25cIjtcclxuXHJcbmVudW0gRGlyZWN0aW9uIHtcclxuICAgIE4gPSAwLFxyXG4gICAgTkUgPSAxLFxyXG4gICAgRSA9IDIsXHJcbiAgICBTRSA9IDMsXHJcbiAgICBTID0gNCxcclxuICAgIFNXID0gNSxcclxuICAgIFcgPSA2LFxyXG4gICAgTlcgPSA3LFxyXG59XHJcblxyXG5AY2NjbGFzcyhcIkNvbXBhc3NDb250cm9sbGVyXCIpXHJcbmV4cG9ydCBjbGFzcyBDb21wYXNzQ29udHJvbGxlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoQ29tcGFzc0FuaW1hdGlvbilcclxuICAgIGNvbXBhc3NBbmltYXRpb246IENvbXBhc3NBbmltYXRpb24gPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShbU3ByaXRlXSlcclxuICAgIGNvdmVyU3ByaXRlczogU3ByaXRlW10gPSBbXTtcclxuXHJcbiAgICBAcHJvcGVydHkoTm9kZSlcclxuICAgIHBvaW50ZXJOb2RlOiBOb2RlID0gbnVsbCE7XHJcblxyXG4gICAgQHByb3BlcnR5KE5vZGUpXHJcbiAgICBjb21wYXNzNFNwcml0ZTogTm9kZSA9IG51bGwhO1xyXG5cclxuICAgIEBwcm9wZXJ0eShOb2RlKVxyXG4gICAgY29tcGFzczhTcHJpdGU6IE5vZGUgPSBudWxsITtcclxuXHJcbiAgICBwcml2YXRlIGRpcmVjdGlvbnM4ID0gW1xyXG4gICAgICAgIERpcmVjdGlvbi5OLFxyXG4gICAgICAgIERpcmVjdGlvbi5ORSxcclxuICAgICAgICBEaXJlY3Rpb24uRSxcclxuICAgICAgICBEaXJlY3Rpb24uU0UsXHJcbiAgICAgICAgRGlyZWN0aW9uLlMsXHJcbiAgICAgICAgRGlyZWN0aW9uLlNXLFxyXG4gICAgICAgIERpcmVjdGlvbi5XLFxyXG4gICAgICAgIERpcmVjdGlvbi5OVyxcclxuICAgIF07XHJcblxyXG4gICAgcHJpdmF0ZSBkaXJlY3Rpb25zNCA9IFtEaXJlY3Rpb24uTiwgRGlyZWN0aW9uLkUsIERpcmVjdGlvbi5TLCBEaXJlY3Rpb24uV107XHJcblxyXG4gICAgcHJpdmF0ZSBhbGxEaXJlY3Rpb25zOiBEaXJlY3Rpb25bXSA9IFtdO1xyXG4gICAgcHJpdmF0ZSBkZXNpZ25lZERpcmVjdGlvbnM6IERpcmVjdGlvbltdID0gW107XHJcbiAgICBwcml2YXRlIHVzZWREaXJlY3Rpb25zOiBEaXJlY3Rpb25bXSA9IFtdOyAvLyDkvovlpoI6IFsnTicsICdTVyddXHJcblxyXG4gICAgaW5pdChkaXJlY3Rpb246IG51bWJlciwgd2luZFNlcXVlbmNlOiBTdHJpbmdbXSkge1xyXG4gICAgICAgIHRoaXMuZGVzaWduZWREaXJlY3Rpb25zID0gW107XHJcblxyXG4gICAgICAgIGlmICh3aW5kU2VxdWVuY2UpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgcyBvZiB3aW5kU2VxdWVuY2UpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVzaWduZWREaXJlY3Rpb25zLnB1c2goXHJcbiAgICAgICAgICAgICAgICAgICAgRGlyZWN0aW9uW3MgYXMga2V5b2YgdHlwZW9mIERpcmVjdGlvbl1cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMucG9pbnRlck5vZGUuYW5nbGUgPSAwO1xyXG5cclxuICAgICAgICB0aGlzLmNvbXBhc3M0U3ByaXRlLnNldFNpYmxpbmdJbmRleCgwKTtcclxuICAgICAgICB0aGlzLmNvbXBhc3M4U3ByaXRlLnNldFNpYmxpbmdJbmRleCgwKTtcclxuXHJcbiAgICAgICAgaWYgKGRpcmVjdGlvbiA9PSA0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29tcGFzczRTcHJpdGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5jb21wYXNzOFNwcml0ZS5hY3RpdmUgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuYWxsRGlyZWN0aW9ucyA9IHRoaXMuZGlyZWN0aW9uczQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5jb21wYXNzOFNwcml0ZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmNvbXBhc3M0U3ByaXRlLmFjdGl2ZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5hbGxEaXJlY3Rpb25zID0gdGhpcy5kaXJlY3Rpb25zODtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaGlkZUFsbENvdmVycygpIHtcclxuICAgICAgICBmb3IgKGNvbnN0IHNwcml0ZSBvZiB0aGlzLmNvdmVyU3ByaXRlcykge1xyXG4gICAgICAgICAgICBzcHJpdGUubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgc2hvd0NvdmVyKGQ6IERpcmVjdGlvbikge1xyXG4gICAgICAgIGxldCBub2RlID0gdGhpcy5jb3ZlclNwcml0ZXNbZF0ubm9kZTtcclxuICAgICAgICBpZiAobm9kZS5hY3RpdmUgPT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgbm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLmNvbXBhc3NBbmltYXRpb24ucGF0Y2hBbmltYXRlKG5vZGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBhdXRvQmxvd1dpbmQoKSB7XHJcbiAgICAgICAgZm9yIChsZXQgZCBvZiB0aGlzLnVzZWREaXJlY3Rpb25zKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuc2hvd0NvdmVyKGQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgYXZhaWxhYmxlID0gdGhpcy5hbGxEaXJlY3Rpb25zLmZpbHRlcihcclxuICAgICAgICAgICAgKGRpcikgPT4gIXRoaXMudXNlZERpcmVjdGlvbnMuaW5jbHVkZXMoZGlyKVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGF2YWlsYWJsZS5sZW5ndGggPT09IDApIHJldHVybjtcclxuXHJcbiAgICAgICAgbGV0IGRpciA9IERpcmVjdGlvbi5FO1xyXG4gICAgICAgIGlmICh0aGlzLnVzZWREaXJlY3Rpb25zLmxlbmd0aCA8IHRoaXMuZGVzaWduZWREaXJlY3Rpb25zLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBkaXIgPSB0aGlzLmRlc2lnbmVkRGlyZWN0aW9uc1t0aGlzLnVzZWREaXJlY3Rpb25zLmxlbmd0aF07XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZGlyID0gYXZhaWxhYmxlW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGF2YWlsYWJsZS5sZW5ndGgpXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMudXNlZERpcmVjdGlvbnMucHVzaChkaXIpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuY29tcGFzc0FuaW1hdGlvbi5wb2ludEFuaW1hdGUoRGlyZWN0aW9uW2Rpcl0pO1xyXG4gICAgICAgIHRoaXMuY29tcGFzc0FuaW1hdGlvbi5ibG93KERpcmVjdGlvbltkaXJdKTtcclxuXHJcbiAgICAgICAgZGlyZWN0b3IuZW1pdChcIldJTkRfQkxPV1wiLCBEaXJlY3Rpb25bZGlyXSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzZXQoKSB7XHJcbiAgICAgICAgdGhpcy51c2VkRGlyZWN0aW9ucyA9IFtdO1xyXG4gICAgICAgIHRoaXMuaGlkZUFsbENvdmVycygpO1xyXG4gICAgfVxyXG59XHJcbiIsIi8vIHR5cGVzL2VudW1zL0RpcmVjdGlvbi50c1xyXG5cclxuZXhwb3J0IGVudW0gRGlyZWN0aW9uIHtcclxuICAgIE4gPSBcIk5cIixcclxuICAgIE5FID0gXCJORVwiLFxyXG4gICAgRSA9IFwiRVwiLFxyXG4gICAgU0UgPSBcIlNFXCIsXHJcbiAgICBTID0gXCJTXCIsXHJcbiAgICBTVyA9IFwiU1dcIixcclxuICAgIFcgPSBcIldcIixcclxuICAgIE5XID0gXCJOV1wiLFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgRElSRUNUSU9OX09GRlNFVFM6IFJlY29yZDxEaXJlY3Rpb24sIHsgZHg6IG51bWJlcjsgZHk6IG51bWJlciB9PiA9XHJcbiAgICB7XHJcbiAgICAgICAgW0RpcmVjdGlvbi5OXTogeyBkeDogMCwgZHk6IC0xIH0sXHJcbiAgICAgICAgW0RpcmVjdGlvbi5ORV06IHsgZHg6IDEsIGR5OiAtMSB9LFxyXG4gICAgICAgIFtEaXJlY3Rpb24uRV06IHsgZHg6IDEsIGR5OiAwIH0sXHJcbiAgICAgICAgW0RpcmVjdGlvbi5TRV06IHsgZHg6IDEsIGR5OiAxIH0sXHJcbiAgICAgICAgW0RpcmVjdGlvbi5TXTogeyBkeDogMCwgZHk6IDEgfSxcclxuICAgICAgICBbRGlyZWN0aW9uLlNXXTogeyBkeDogLTEsIGR5OiAxIH0sXHJcbiAgICAgICAgW0RpcmVjdGlvbi5XXTogeyBkeDogLTEsIGR5OiAwIH0sXHJcbiAgICAgICAgW0RpcmVjdGlvbi5OV106IHsgZHg6IC0xLCBkeTogLTEgfSxcclxuICAgIH07XHJcblxyXG5leHBvcnQgY29uc3QgRk9VUl9ESVJFQ1RJT05TID0gW1xyXG4gICAgRGlyZWN0aW9uLk4sXHJcbiAgICBEaXJlY3Rpb24uRSxcclxuICAgIERpcmVjdGlvbi5TLFxyXG4gICAgRGlyZWN0aW9uLlcsXHJcbl07XHJcbiIsIi8vIFNjcmlwdHMvRWZmZWN0cy9FZmZlY3RzSGVscGVyLnRzXHJcbmltcG9ydCB7IE5vZGUsIFZlYzMsIHR3ZWVuIH0gZnJvbSBcImNjXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRWZmZWN0c0hlbHBlciB7XHJcbiAgICBzdGF0aWMgYm91bmNlU2NhbGUoXHJcbiAgICAgICAgbm9kZTogTm9kZSxcclxuICAgICAgICBvcHRpb25zOiB7IGR1cmF0aW9uPzogbnVtYmVyOyBzY2FsZT86IG51bWJlciB9ID0ge31cclxuICAgICk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBkdXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24gPz8gMC4yNTtcclxuICAgICAgICAgICAgY29uc3QgYm91bmNlU2NhbGUgPSBvcHRpb25zLnNjYWxlID8/IDEuMjtcclxuXHJcbiAgICAgICAgICAgIG5vZGUuc2V0U2NhbGUobmV3IFZlYzMoMC41LCAwLjUsIDEpKTsgLy8g5Yid5aeL57yp5bCPXHJcbiAgICAgICAgICAgIG5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIHR3ZWVuKG5vZGUpXHJcbiAgICAgICAgICAgICAgICAudG8oXHJcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgeyBzY2FsZTogbmV3IFZlYzMoYm91bmNlU2NhbGUsIGJvdW5jZVNjYWxlLCAxKSB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcImJhY2tPdXRcIiB9XHJcbiAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAudG8oMC4xLCB7IHNjYWxlOiBuZXcgVmVjMygxLCAxLCAxKSB9LCB7IGVhc2luZzogXCJzaW5lSW5cIiB9KVxyXG4gICAgICAgICAgICAgICAgLmNhbGwoKCkgPT4gcmVzb2x2ZSgpKVxyXG4gICAgICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCB0d2VlbiwgVmVjMywgVUlUcmFuc2Zvcm0gfSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuaW1wb3J0IHsgQXVkaW9IZWxwZXIgfSBmcm9tIFwiLi4vLi4vVXRpbHMvQXVkaW9IZWxwZXJcIjtcclxuXHJcbkBjY2NsYXNzKFwiRmxvd2VyQW5pbWF0aW9uXCIpXHJcbmV4cG9ydCBjbGFzcyBGbG93ZXJBbmltYXRpb24gZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KE5vZGUpXHJcbiAgICBmbHlGbG93ZXI6IE5vZGUgPSBudWxsO1xyXG5cclxuICAgIHBsYW50KGZsb3dlckluZGljYXRvcjogTm9kZSwgdGFyZ2V0VGlsZTogTm9kZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICBBdWRpb0hlbHBlci5pbnN0YW5jZS5wbGF5U0ZYKFwiYnViYmxlLXBvcFwiKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0V29ybGRQb3MgPSBmbG93ZXJJbmRpY2F0b3IuZ2V0V29ybGRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICBjb25zdCBlbmRXb3JsZFBvcyA9IHRhcmdldFRpbGUuZ2V0V29ybGRQb3NpdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgLy8g5oqKIGZseUZsb3dlciDmv4DmtLvlubborr7nva7liLDotbfngrlcclxuICAgICAgICAgICAgdGhpcy5mbHlGbG93ZXIuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5mbHlGbG93ZXIuc2V0V29ybGRQb3NpdGlvbihzdGFydFdvcmxkUG9zKTtcclxuXHJcbiAgICAgICAgICAgIC8vIOiuoeeul+S4remXtOmrmOeCuVxyXG4gICAgICAgICAgICBjb25zdCBtaWRkbGUgPSBzdGFydFdvcmxkUG9zLmNsb25lKCk7XHJcbiAgICAgICAgICAgIG1pZGRsZS55ICs9IDEwOyAvLyDkvaDlj6/ku6XosIPpq5jluqZcclxuICAgICAgICAgICAgbWlkZGxlLnggKz0gMTA7XHJcblxyXG4gICAgICAgICAgICAvLyDmkq3mlL4gdHdlZW4g5Yqo55S7XHJcbiAgICAgICAgICAgIHR3ZWVuKHRoaXMuZmx5Rmxvd2VyKVxyXG4gICAgICAgICAgICAgICAgLnRvKFxyXG4gICAgICAgICAgICAgICAgICAgIDAuMixcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLmZseUZsb3dlclxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnBhcmVudCEuZ2V0Q29tcG9uZW50KFVJVHJhbnNmb3JtKSFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb252ZXJ0VG9Ob2RlU3BhY2VBUihtaWRkbGUpLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwicXVhZE91dFwiIH1cclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgIC50byhcclxuICAgICAgICAgICAgICAgICAgICAwLjUsXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5mbHlGbG93ZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5wYXJlbnQhLmdldENvbXBvbmVudChVSVRyYW5zZm9ybSkhXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29udmVydFRvTm9kZVNwYWNlQVIoZW5kV29ybGRQb3MpLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwicXVhZEluT3V0XCIgfVxyXG4gICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgLmNhbGwoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmx5Rmxvd2VyLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAuc3RhcnQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdG9wSWRsZShub2RlOiBOb2RlKSB7XHJcbiAgICAgICAgdHdlZW4obm9kZSkuc3RvcCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGlkbGVJbmRpY2F0b3IoZmxvd2VyOiBOb2RlKSB7XHJcbiAgICAgICAgY29uc3QgZGVsYXlTZWMgPSBNYXRoLnJhbmRvbSgpOyAvLyAwfjHnp5LkuYvpl7Tpmo/mnLpcclxuICAgICAgICB0d2VlbihmbG93ZXIpXHJcbiAgICAgICAgICAgIC5kZWxheShkZWxheVNlYylcclxuICAgICAgICAgICAgLnJlcGVhdEZvcmV2ZXIoXHJcbiAgICAgICAgICAgICAgICB0d2VlbigpXHJcbiAgICAgICAgICAgICAgICAgICAgLmJ5KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHBvc2l0aW9uOiBuZXcgVmVjMygwLCA1LCAwKSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGVhc2luZzogXCJzaW5lSW5PdXRcIiB9XHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgIC5ieShcclxuICAgICAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoMCwgLTUsIDApIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH1cclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCB0d2VlbiwgVmVjMyB9IGZyb20gXCJjY1wiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5pbXBvcnQgeyBGbG93ZXJBbmltYXRpb24gfSBmcm9tIFwiLi9GbG93ZXJBbmltYXRpb25cIjtcclxuaW1wb3J0IHsgVGlsZUNvbnRyb2xsZXIgfSBmcm9tIFwiLi4vVGlsZS9UaWxlQ29udHJvbGxlclwiO1xyXG5cclxuQGNjY2xhc3MoXCJGbG93ZXJDb250cm9sbGVyXCIpXHJcbmV4cG9ydCBjbGFzcyBGbG93ZXJDb250cm9sbGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShOb2RlKVxyXG4gICAgZmxvd2VyQ29udGFpbmVyOiBOb2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoRmxvd2VyQW5pbWF0aW9uKVxyXG4gICAgZmxvd2VyQW5pbWF0aW9uOiBGbG93ZXJBbmltYXRpb24gPSBudWxsO1xyXG5cclxuICAgIHByaXZhdGUgZmxvd2VySWNvbnM6IE5vZGVbXTsgLy8g5Yeg5Liq6Iqx5Zu+5qCH6IqC54K5XHJcbiAgICBwcml2YXRlIF9sYXN0Rmxvd2VySW5kZXggPSAxMCAtIDE7XHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIHRoaXMuZmxvd2VySWNvbnMgPSB0aGlzLmZsb3dlckNvbnRhaW5lci5jaGlsZHJlbjtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KGNvdW50OiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9sYXN0Rmxvd2VySW5kZXggPSBjb3VudCAtIDE7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmZsb3dlckljb25zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZmxvd2VySWNvbnNbaV0uYWN0aXZlID0gaSA8IGNvdW50O1xyXG4gICAgICAgICAgICBpZiAoaSA8PSBjb3VudCAtIDEgJiYgdGhpcy5mbG93ZXJJY29uc1tpXS5hY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmxvd2VyQW5pbWF0aW9uLmlkbGVJbmRpY2F0b3IodGhpcy5mbG93ZXJJY29uc1tpXSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyDlgZzmraLkuYvliY3nmoTliqjnlLtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmxvd2VyQW5pbWF0aW9uLnN0b3BJZGxlKHRoaXMuZmxvd2VySWNvbnNbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHBsYW50KHRpbGU6IE5vZGUpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgICAgICBjb25zdCB0aWxlQ3RsID0gdGlsZS5nZXRDb21wb25lbnQoVGlsZUNvbnRyb2xsZXIpO1xyXG4gICAgICAgIGlmICghdGlsZUN0bC5jYW5QbGFudCgpKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gICAgICAgIGxldCBmbG93ZXIgPSB0aGlzLmZsb3dlckljb25zW3RoaXMuX2xhc3RGbG93ZXJJbmRleC0tXTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZsb3dlckFuaW1hdGlvbi5wbGFudChmbG93ZXIsIHRpbGUpO1xyXG5cclxuICAgICAgICBmbG93ZXIuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5mbG93ZXJBbmltYXRpb24uc3RvcElkbGUoZmxvd2VyKTtcclxuXHJcbiAgICAgICAgdGlsZUN0bC5zZXRGbG93ZXIoKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufVxyXG4iLCIvLyB0eXBlcy9lbnVtcy9HYW1lRW51bXMudHNcclxuZXhwb3J0IGVudW0gR2FtZVBoYXNlIHtcclxuICAgIFBsYW50aW5nLFxyXG4gICAgQmxvd2luZyxcclxuICAgIEdhbWVPdmVyLFxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgTGFiZWwsIGRpcmVjdG9yLCBOb2RlIH0gZnJvbSBcImNjXCI7XHJcbmltcG9ydCB7IFBsYW50Q29udHJvbGxlciB9IGZyb20gXCIuLi9Db21wb25lbnRzL1BsYW50UGFuZWwvUGxhbnRDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IFJlc3VsdFBvcHVwIH0gZnJvbSBcIi4uL0NvbXBvbmVudHMvUmVzdWx0UG9wdXAvUmVzdWx0UG9wdXBcIjtcclxuaW1wb3J0IHsgTGV2ZWxDb25maWcgfSBmcm9tIFwiLi9MZXZlbE1hbmFnZXJcIjtcclxuLy8gaW1wb3J0IHsgc3Bhd25NdWRzIH0gZnJvbSBcIi4vQ29udHJvbGxlcnMvR3JpZENvbnRyb2xsZXJcIjsgLy9CeSBUSE9NQVMgMjAyNS83LzI2IGZvciBNVUQgdGlsZVxyXG5pbXBvcnQgeyBDb21wYXNzQ29udHJvbGxlciB9IGZyb20gXCIuLi9Db21wb25lbnRzL0NvbXBhc3NQYW5lbC9Db21wYXNzQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgeyBBdWRpb0hlbHBlciB9IGZyb20gXCIuLi9VdGlscy9BdWRpb0hlbHBlclwiO1xyXG5pbXBvcnQgeyBUb3BCb2FyZENvbnRyb2xsZXIgfSBmcm9tIFwiLi4vQ29tcG9uZW50cy9MZXZlbFRvcC9Ub3BCb2FyZENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgSW5zdHJ1Y3Rpb25Db250cm9sbGVyIH0gZnJvbSBcIi4uL0NvbXBvbmVudHMvSW5zdHJ1Y3Rpb24vSW5zdHJ1Y3Rpb25Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7IHdhaXQgfSBmcm9tIFwiLi4vVXRpbHMvVGltZWxpbmVIZWxwZXJcIjtcclxuaW1wb3J0IHsgR2FtZVBoYXNlIH0gZnJvbSBcIi4uL0NvbnN0YW50cy9HYW1lRW51bXNcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiR2FtZU1hbmFnZXJcIilcclxuZXhwb3J0IGNsYXNzIEdhbWVNYW5hZ2VyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIHN0YXRpYyBpbnN0YW5jZTogR2FtZU1hbmFnZXI7XHJcblxyXG4gICAgcHJpdmF0ZSBjdXJyZW50Um91bmQgPSAwOyAvLyAwIH4gNiDlhbEgNyDlsYBcclxuICAgIHByaXZhdGUgbWF4Um91bmRzID0gNztcclxuICAgIHByaXZhdGUgaXNDbGlja2FibGUgPSB0cnVlO1xyXG4gICAgcHJpdmF0ZSBwaGFzZTogR2FtZVBoYXNlID0gR2FtZVBoYXNlLlBsYW50aW5nO1xyXG5cclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgb25HYW1lV2luOiBGdW5jdGlvbiB8IG51bGwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShQbGFudENvbnRyb2xsZXIpXHJcbiAgICBwbGFudENvbnRyb2xsZXI6IFBsYW50Q29udHJvbGxlciA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KFRvcEJvYXJkQ29udHJvbGxlcilcclxuICAgIHRvcEJvYXJkQ29udHJvbGxlcjogVG9wQm9hcmRDb250cm9sbGVyID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoSW5zdHJ1Y3Rpb25Db250cm9sbGVyKVxyXG4gICAgaW5zdHJ1Y3Rpb25Db250cm9sbGVyOiBJbnN0cnVjdGlvbkNvbnRyb2xsZXIgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShSZXN1bHRQb3B1cClcclxuICAgIHJlc3VsdFBvcHVwOiBSZXN1bHRQb3B1cCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KENvbXBhc3NDb250cm9sbGVyKVxyXG4gICAgY29tcGFzc0NvbnRyb2xsZXI6IENvbXBhc3NDb250cm9sbGVyID0gbnVsbDtcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcbiAgICAgICAgR2FtZU1hbmFnZXIuaW5zdGFuY2UgPSB0aGlzO1xyXG4gICAgICAgIEF1ZGlvSGVscGVyLmluc3RhbmNlLnBsYXlCR00oKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICBkaXJlY3Rvci5vbihcIlRJTEVfQ0xJQ0tFRFwiLCB0aGlzLnBsYW50LCB0aGlzKTtcclxuICAgICAgICBkaXJlY3Rvci5vbihcIldJTkRfQkxPV1wiLCB0aGlzLmJsb3csIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGxvYWRMZXZlbChsZXZlbENvbmZpZzogTGV2ZWxDb25maWcpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhsZXZlbENvbmZpZy5sZXZlbCk7XHJcbiAgICAgICAgdGhpcy5tYXhSb3VuZHMgPSBsZXZlbENvbmZpZy5yb3VuZDtcclxuXHJcbiAgICAgICAgdGhpcy50b3BCb2FyZENvbnRyb2xsZXIuaW5pdChsZXZlbENvbmZpZy5sZXZlbCwgbGV2ZWxDb25maWcucm91bmQpO1xyXG4gICAgICAgIHRoaXMucGxhbnRDb250cm9sbGVyLmluaXQobGV2ZWxDb25maWcucm91bmQsIGxldmVsQ29uZmlnLmJvYXJkKTtcclxuICAgICAgICB0aGlzLmNvbXBhc3NDb250cm9sbGVyLmluaXQoXHJcbiAgICAgICAgICAgIGxldmVsQ29uZmlnLmRpcmVjdGlvbixcclxuICAgICAgICAgICAgbGV2ZWxDb25maWcud2luZFNlcXVlbmNlXHJcbiAgICAgICAgKTtcclxuICAgICAgICB0aGlzLmluc3RydWN0aW9uQ29udHJvbGxlci5pbml0KGxldmVsQ29uZmlnLmxldmVsKTtcclxuXHJcbiAgICAgICAgdGhpcy5yZXNldEdhbWUoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXNldEdhbWUoKSB7XHJcbiAgICAgICAgLy8gMS4g5riF56m65qOL55uYXHJcbiAgICAgICAgdGhpcy5wbGFudENvbnRyb2xsZXIucmVzZXQoKTtcclxuICAgICAgICB0aGlzLmNvbXBhc3NDb250cm9sbGVyLnJlc2V0KCk7IC8vIOexu+S8vCByZXNldCgpXHJcbiAgICAgICAgdGhpcy5jdXJyZW50Um91bmQgPSAwO1xyXG4gICAgICAgIHRoaXMuZW50ZXJQbGFudGluZ1BoYXNlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZW50ZXJQbGFudGluZ1BoYXNlKCkge1xyXG4gICAgICAgIHRoaXMuY3VycmVudFJvdW5kKys7XHJcbiAgICAgICAgdGhpcy5zZXRQaGFzZShHYW1lUGhhc2UuUGxhbnRpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIGVudGVyQmxvd2luZ1BoYXNlKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5jaGVja01lZGl1bVJlc3VsdCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UGhhc2UoR2FtZVBoYXNlLkJsb3dpbmcpO1xyXG4gICAgICAgICAgICAvLyDnrYnlvoXpo47ngrnlh7tcclxuICAgICAgICAgICAgdGhpcy5jb21wYXNzQ29udHJvbGxlci5hdXRvQmxvd1dpbmQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgcGxhbnQodGlsZTogTm9kZSkge1xyXG4gICAgICAgIHRoaXMuaW5zdHJ1Y3Rpb25Db250cm9sbGVyLmhpZGUoKTtcclxuICAgICAgICBpZiAodGhpcy5waGFzZSA9PSBHYW1lUGhhc2UuUGxhbnRpbmcgJiYgdGhpcy5pc0NsaWNrYWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLmlzQ2xpY2thYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IGF3YWl0IHRoaXMucGxhbnRDb250cm9sbGVyLnBsYW50KHRpbGUpO1xyXG4gICAgICAgICAgICBpZiAoc3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCB3YWl0KDEwMDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbnRlckJsb3dpbmdQaGFzZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pc0NsaWNrYWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB0aGlzLmlzQ2xpY2thYmxlID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgYmxvdyhkaXJlY3Rpb246IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0aGlzLnBoYXNlID09IEdhbWVQaGFzZS5CbG93aW5nKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGxhbnRDb250cm9sbGVyLmJsb3coZGlyZWN0aW9uKTtcclxuICAgICAgICAgICAgdGhpcy5jaGVja1JvdW5kUmVzdWx0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldFBoYXNlKGY6IEdhbWVQaGFzZSkge1xyXG4gICAgICAgIHRoaXMucGhhc2UgPSBmO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGNoZWNrUm91bmRSZXN1bHQoKSB7XHJcbiAgICAgICAgY29uc3QgYWxsQ292ZXJlZCA9IHRoaXMucGxhbnRDb250cm9sbGVyLmlzQm9hcmRGdWxseUNvdmVyZWQoKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudFJvdW5kID49IHRoaXMubWF4Um91bmRzIHx8IGFsbENvdmVyZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQaGFzZShHYW1lUGhhc2UuR2FtZU92ZXIpO1xyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLnBsYW50Q29udHJvbGxlci5yb3VuZE92ZXIoKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChhbGxDb3ZlcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dSZXN1bHQodHJ1ZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dSZXN1bHQoZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5lbnRlclBsYW50aW5nUGhhc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2hlY2tNZWRpdW1SZXN1bHQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3QgYWxsQ292ZXJlZCA9IHRoaXMucGxhbnRDb250cm9sbGVyLmlzQm9hcmRGdWxseUNvdmVyZWQoKTtcclxuICAgICAgICBpZiAoYWxsQ292ZXJlZCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBoYXNlKEdhbWVQaGFzZS5HYW1lT3Zlcik7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd1Jlc3VsdCh0cnVlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBhbGxDb3ZlcmVkO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHNob3dSZXN1bHQoaXNXaW46IGJvb2xlYW4pIHtcclxuICAgICAgICBpZiAoaXNXaW4pIHtcclxuICAgICAgICAgICAgLy8gYXdhaXQgdGhpcy5yZXN1bHRQb3B1cC53aW4oKTtcclxuICAgICAgICAgICAgdGhpcy5yZXN1bHRQb3B1cC5zaG93KHRydWUsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9uR2FtZVdpbikgdGhpcy5vbkdhbWVXaW4oKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5yZXN1bHRQb3B1cC5zaG93KGZhbHNlLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc2V0R2FtZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50IH0gZnJvbSBcImNjXCI7XHJcbmltcG9ydCB7IEdhbWVNYW5hZ2VyIH0gZnJvbSBcIi4uLy4uL01hbmFnZXJzL0dhbWVNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IGdldExldmVsQ29uZmlnLCBpc0xhc3RMZXZlbCB9IGZyb20gXCIuLi8uLi9NYW5hZ2Vycy9MZXZlbE1hbmFnZXJcIjtcclxuXHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IF9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzcyhcIkdhbWVTY2VuZVwiKVxyXG5leHBvcnQgY2xhc3MgR2FtZVNjZW5lIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShHYW1lTWFuYWdlcilcclxuICAgIGdhbWVNYW5hZ2VyOiBHYW1lTWFuYWdlcjtcclxuXHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICB0aGlzLmluaXRHYW1lKCk7XHJcbiAgICAgICAgdGhpcy5nYW1lTWFuYWdlci5vbkdhbWVXaW4gPSB0aGlzLm5leHRMZXZlbC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRHYW1lKCkge1xyXG4gICAgICAgIGxldCBjdXJyZW50TGV2ZWwgPSBwYXJzZUludChcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjdXJyZW50TGV2ZWxcIikgfHwgXCIxXCJcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICB0aGlzLmdhbWVNYW5hZ2VyLmxvYWRMZXZlbChnZXRMZXZlbENvbmZpZyhjdXJyZW50TGV2ZWwpKTtcclxuICAgIH1cclxuXHJcbiAgICBuZXh0TGV2ZWwoKSB7XHJcbiAgICAgICAgbGV0IGxldmVsID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjdXJyZW50TGV2ZWxcIikgfHwgXCIxXCIpO1xyXG4gICAgICAgIGlmIChpc0xhc3RMZXZlbChsZXZlbCkpIGxldmVsID0gMTtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRMZXZlbFwiLCAobGV2ZWwgKyAxKS50b1N0cmluZygpKTtcclxuICAgICAgICB0aGlzLmluaXRHYW1lKCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgVGlsZU1vZGlmaWVySW50ZXJmYWNlIH0gZnJvbSBcIi4vVGlsZU1vZGlmaWVySW50ZXJmYWNlXCI7XHJcbmltcG9ydCB7IENlbGxTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9Db25zdGFudHMvQ2VsbFN0YXRlXCI7XHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tIFwiY2NcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBHZW5lcmFsTW9kaWZpZXIgaW1wbGVtZW50cyBUaWxlTW9kaWZpZXJJbnRlcmZhY2Uge1xyXG4gICAgaW5pdCh0aWxlTm9kZTogTm9kZSkge1xyXG4gICAgICAgIGNvbnN0IGVtcHR5Tm9kZSA9IHRpbGVOb2RlLmdldENoaWxkQnlOYW1lKFwiRW1wdHlOb2RlXCIpO1xyXG4gICAgICAgIGlmICghZW1wdHlOb2RlKSByZXR1cm47XHJcblxyXG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZW1wdHlOb2RlLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIGNoaWxkLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgc3ByaXRlID0gZW1wdHlOb2RlLmdldENoaWxkQnlOYW1lKFwiRW1wdHlTcHJpdGVcIik7XHJcbiAgICAgICAgaWYgKHNwcml0ZSkgc3ByaXRlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBjYW5QbGFudCgpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGNhbkhvbGRTZWVkKCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IFRpbGVNb2RpZmllckludGVyZmFjZSB9IGZyb20gXCIuL1RpbGVNb2RpZmllckludGVyZmFjZVwiO1xyXG5pbXBvcnQgeyBDZWxsU3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vQ29uc3RhbnRzL0NlbGxTdGF0ZVwiO1xyXG5pbXBvcnQgeyBOb2RlIH0gZnJvbSBcImNjXCI7XHJcbmltcG9ydCB7IFRpbGVDb250cm9sbGVyIH0gZnJvbSBcIi4uL1RpbGVDb250cm9sbGVyXCI7XHJcbmV4cG9ydCBjbGFzcyBHcmFzc01vZGlmaWVyIGltcGxlbWVudHMgVGlsZU1vZGlmaWVySW50ZXJmYWNlIHtcclxuICAgIGNhblBsYW50KCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgY2FuSG9sZFNlZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCh0aWxlTm9kZTogTm9kZSkge1xyXG4gICAgICAgIGNvbnN0IGVtcHR5Tm9kZSA9IHRpbGVOb2RlLmdldENoaWxkQnlOYW1lKFwiRW1wdHlOb2RlXCIpO1xyXG4gICAgICAgIGlmICghZW1wdHlOb2RlKSByZXR1cm47XHJcblxyXG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZW1wdHlOb2RlLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIGNoaWxkLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZ3Jhc3NTcHJpdGUgPSBlbXB0eU5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJHcmFzc1Nwcml0ZVwiKTtcclxuICAgICAgICBpZiAoZ3Jhc3NTcHJpdGUpIGdyYXNzU3ByaXRlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBvblNlZWRMYW5kZWQodGlsZTogVGlsZUNvbnRyb2xsZXIpIHtcclxuICAgICAgICB0aWxlLnN3aXRjaFRvRmxvd2VyKCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICAgIF9kZWNvcmF0b3IsXHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBOb2RlLFxyXG4gICAgaW5zdGFudGlhdGUsXHJcbiAgICBVSU9wYWNpdHksXHJcbiAgICBkaXJlY3RvcixcclxuICAgIFByZWZhYixcclxuICAgIFVJVHJhbnNmb3JtLFxyXG4gICAgdHdlZW4sXHJcbiAgICBWZWMzLFxyXG4gICAgUGFydGljbGVTeXN0ZW0yRCxcclxufSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiR3JpZEFuaW1hdGlvblwiKVxyXG5leHBvcnQgY2xhc3MgR3JpZEFuaW1hdGlvbiBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoUHJlZmFiKVxyXG4gICAgc2VlZEZseVByZWZhYjogUHJlZmFiID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoTm9kZSlcclxuICAgIHdpbmRFZmZlY3Q6IE5vZGUgPSBudWxsO1xyXG5cclxuICAgIHNlZWRGbHkoZnJvbVRpbGU6IE5vZGUsIHRvVGlsZTogTm9kZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZWVkRmx5UHJlZmFiKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzZWVkID0gaW5zdGFudGlhdGUodGhpcy5zZWVkRmx5UHJlZmFiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZS5hZGRDaGlsZChzZWVkKTsgLy8g5oyC5ZyoIGNhbnZhcyDmiJYgZ3JpZCDkuIrvvIzliKvmjILlnKggdGlsZSDkuItcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYW52YXMgPSBkaXJlY3Rvci5nZXRTY2VuZSgpLmdldENoaWxkQnlOYW1lKFwiQ2FudmFzXCIpOyAvLyDmiJbogIXkvaDnmoQgR3JpZCDniLboioLngrlcclxuICAgICAgICAgICAgICAgIGNhbnZhcy5hZGRDaGlsZChzZWVkKTsgLy8gc2VlZCDnmoQgcGFyZW50IOimgeaYjuehru+8gVxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0UG9zID0gZnJvbVRpbGUuZ2V0V29ybGRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZW5kUG9zID0gdG9UaWxlLmdldFdvcmxkUG9zaXRpb24oKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb250cm9sUG9zID0gc3RhcnRQb3MuY2xvbmUoKS5sZXJwKGVuZFBvcywgMC41KTsgLy8g5Y+WIHN0YXJ0IOWSjCBlbmQg5Lit54K5XHJcbiAgICAgICAgICAgICAgICBjb250cm9sUG9zLnggKz0gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogODA7IC8vIOa3u+WKoCBYIOWBj+enu1xyXG4gICAgICAgICAgICAgICAgY29udHJvbFBvcy55ICs9IChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDgwOyAvLyDmt7vliqAgWSDlgY/np7tcclxuXHJcbiAgICAgICAgICAgICAgICBzZWVkLnNldFdvcmxkUG9zaXRpb24oc3RhcnRQb3MpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0TG9jYWwgPSBjYW52YXNcclxuICAgICAgICAgICAgICAgICAgICAuZ2V0Q29tcG9uZW50KFVJVHJhbnNmb3JtKSFcclxuICAgICAgICAgICAgICAgICAgICAuY29udmVydFRvTm9kZVNwYWNlQVIoc3RhcnRQb3MpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY29udHJvbExvY2FsID0gY2FudmFzXHJcbiAgICAgICAgICAgICAgICAgICAgLmdldENvbXBvbmVudChVSVRyYW5zZm9ybSkhXHJcbiAgICAgICAgICAgICAgICAgICAgLmNvbnZlcnRUb05vZGVTcGFjZUFSKGNvbnRyb2xQb3MpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZW5kTG9jYWwgPSBjYW52YXNcclxuICAgICAgICAgICAgICAgICAgICAuZ2V0Q29tcG9uZW50KFVJVHJhbnNmb3JtKSFcclxuICAgICAgICAgICAgICAgICAgICAuY29udmVydFRvTm9kZVNwYWNlQVIoZW5kUG9zKTtcclxuXHJcbiAgICAgICAgICAgICAgICBzZWVkLnNldFBvc2l0aW9uKHN0YXJ0TG9jYWwpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGR1cmF0aW9uID0gMjtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHQgPSB7IHZhbHVlOiAwIH07XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgYW5nbGVTdGFydCA9IDA7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBhbmdsZUVuZCA9IDM2MCArIE1hdGgucmFuZG9tKCkgKiAzNjA7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzY2FsZVN0YXJ0ID0gMTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNjYWxlRW5kID0gMS4yO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIOWmguaenOS9v+eUqCBVSU9wYWNpdHkg5o6n5Yi26YCP5piO5bqm77yM5YWI6K6+572u5Yid5aeL5YC8XHJcbiAgICAgICAgICAgICAgICBjb25zdCBvcGFjaXR5Q29tcCA9IHNlZWQuZ2V0Q29tcG9uZW50KFVJT3BhY2l0eSk7XHJcbiAgICAgICAgICAgICAgICBpZiAob3BhY2l0eUNvbXApIG9wYWNpdHlDb21wLm9wYWNpdHkgPSAyNTU7XHJcblxyXG4gICAgICAgICAgICAgICAgdHdlZW4odClcclxuICAgICAgICAgICAgICAgICAgICAudG8oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHZhbHVlOiAxIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZSA9IHQudmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb25lTWludXNUID0gMSAtIHRpbWU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOi0neWhnuWwlOS9jee9rlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHggPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmVNaW51c1QgKiBvbmVNaW51c1QgKiBzdGFydExvY2FsLnggK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyICogb25lTWludXNUICogdGltZSAqIGNvbnRyb2xMb2NhbC54ICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZSAqIHRpbWUgKiBlbmRMb2NhbC54O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB5ID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25lTWludXNUICogb25lTWludXNUICogc3RhcnRMb2NhbC55ICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiAqIG9uZU1pbnVzVCAqIHRpbWUgKiBjb250cm9sTG9jYWwueSArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUgKiB0aW1lICogZW5kTG9jYWwueTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VlZC5zZXRQb3NpdGlvbihuZXcgVmVjMyh4LCB5LCAwKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWQjOatpeinkuW6puOAgee8qeaUvlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlZWQuYW5nbGUgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmdsZVN0YXJ0ICsgKGFuZ2xlRW5kIC0gYW5nbGVTdGFydCkgKiB0aW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjYWxlID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGVTdGFydCArIChzY2FsZUVuZCAtIHNjYWxlU3RhcnQpICogdGltZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWVkLnNldFNjYWxlKG5ldyBWZWMzKHNjYWxlLCBzY2FsZSwgMSkpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDpgI/mmI7luqZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob3BhY2l0eUNvbXApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eUNvbXAub3BhY2l0eSA9IDI1NSAtIHRpbWUgKiA3NTsgLy8g5reh5Ye65LiA54K554K5XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlZWQuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuc3RhcnQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgaW5zdGFudGlhdGUsIE5vZGUsIFByZWZhYiwgVmVjMyB9IGZyb20gXCJjY1wiO1xyXG5pbXBvcnQgeyBUaWxlQ29udHJvbGxlciB9IGZyb20gXCIuLi9UaWxlL1RpbGVDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IEdyaWRBbmltYXRpb24gfSBmcm9tIFwiLi9HcmlkQW5pbWF0aW9uXCI7XHJcbmltcG9ydCB7IFRpbGVNb2RpZmllciB9IGZyb20gXCIuLi8uLi9Db25zdGFudHMvQ2VsbFN0YXRlXCI7XHJcblxyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuY29uc3QgRElSRUNUSU9OX09GRlNFVDogUmVjb3JkPHN0cmluZywgW251bWJlciwgbnVtYmVyXT4gPSB7XHJcbiAgICBOOiBbLTEsIDBdLFxyXG4gICAgTkU6IFstMSwgMV0sXHJcbiAgICBFOiBbMCwgMV0sXHJcbiAgICBTRTogWzEsIDFdLFxyXG4gICAgUzogWzEsIDBdLFxyXG4gICAgU1c6IFsxLCAtMV0sXHJcbiAgICBXOiBbMCwgLTFdLFxyXG4gICAgTlc6IFstMSwgLTFdLFxyXG59O1xyXG5cclxuQGNjY2xhc3MoXCJHcmlkQ29udHJvbGxlclwiKVxyXG5leHBvcnQgY2xhc3MgR3JpZENvbnRyb2xsZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSB0aWxlU2l6ZSA9IDEwMDtcclxuICAgIHByaXZhdGUgc3BhY2luZyA9IDI7XHJcblxyXG4gICAgQHByb3BlcnR5KFByZWZhYilcclxuICAgIHRpbGVQcmVmYWI6IFByZWZhYiA9IG51bGwhO1xyXG5cclxuICAgIEBwcm9wZXJ0eShHcmlkQW5pbWF0aW9uKVxyXG4gICAgZ3JpZEFuaW1hdGlvbjogR3JpZEFuaW1hdGlvbiA9IG51bGw7XHJcblxyXG4gICAgcHJpdmF0ZSB0aWxlTm9kZXM6IE5vZGVbXVtdID0gW107XHJcblxyXG4gICAgaW5pdChib2FyZDogbnVtYmVyW11bXSkge1xyXG4gICAgICAgIHRoaXMubm9kZS5yZW1vdmVBbGxDaGlsZHJlbigpO1xyXG4gICAgICAgIGxldCByb3dOdW1iZXIgPSBib2FyZC5sZW5ndGg7XHJcbiAgICAgICAgaWYgKHJvd051bWJlciA9PSAwKSByZXR1cm47XHJcbiAgICAgICAgbGV0IGNvbHVtbk51bWJlciA9IGJvYXJkWzBdLmxlbmd0aDtcclxuICAgICAgICBpZiAoY29sdW1uTnVtYmVyID09IDApIHJldHVybjtcclxuICAgICAgICAvLyDnlJ/miJAgdGlsZSDkuYvlkI5cclxuICAgICAgICBjb25zdCB0aWxlQXJlYSA9XHJcbiAgICAgICAgICAgIHJvd051bWJlciAqIHRoaXMudGlsZVNpemUgKyAocm93TnVtYmVyIC0gMSkgKiB0aGlzLnNwYWNpbmc7XHJcbiAgICAgICAgY29uc3QgYm9hcmRTaXplID0gNTQwOyAvLyBCb2FyZFBhbmVsIOaYryA1NDB4NTQwXHJcblxyXG4gICAgICAgIC8vIOiuoeeul+e8qeaUvuavlOS+i1xyXG4gICAgICAgIGNvbnN0IHNjYWxlID0gTWF0aC5taW4oYm9hcmRTaXplIC8gdGlsZUFyZWEsIDEuOCk7IC8vIOmZkOWItuacgOWkp+aUvuWkpyAxLjgg5YCNXHJcblxyXG4gICAgICAgIC8vIOWuvSA9IOagvOWtkOWuvSAqIE4gKyDpl7Tot50gKiAoTiAtIDEpXHJcbiAgICAgICAgY29uc3Qgc3RhcnRYID1cclxuICAgICAgICAgICAgLShyb3dOdW1iZXIgKiB0aGlzLnRpbGVTaXplICsgKHJvd051bWJlciAtIDEpICogdGhpcy5zcGFjaW5nKSAvIDIgK1xyXG4gICAgICAgICAgICB0aGlzLnRpbGVTaXplIC8gMjtcclxuICAgICAgICBjb25zdCBzdGFydFkgPVxyXG4gICAgICAgICAgICAoY29sdW1uTnVtYmVyICogdGhpcy50aWxlU2l6ZSArIChjb2x1bW5OdW1iZXIgLSAxKSAqIHRoaXMuc3BhY2luZykgL1xyXG4gICAgICAgICAgICAgICAgMiAtXHJcbiAgICAgICAgICAgIHRoaXMudGlsZVNpemUgLyAyO1xyXG5cclxuICAgICAgICAvLyDnlJ/miJAgbXVkIHRpbGUg55qE6ZqP5py6IGluZGV4IOWIl+ihqFxyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd051bWJlcjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGlsZU5vZGVzW2ldID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgY29sdW1uTnVtYmVyOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHRpbGUgPSBpbnN0YW50aWF0ZSh0aGlzLnRpbGVQcmVmYWIpO1xyXG4gICAgICAgICAgICAgICAgdGlsZS5zZXRQb3NpdGlvbihcclxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjMyhcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRYICsgaiAqICh0aGlzLnRpbGVTaXplICsgdGhpcy5zcGFjaW5nKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRZIC0gaSAqICh0aGlzLnRpbGVTaXplICsgdGhpcy5zcGFjaW5nKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgMFxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUuc2V0U2NhbGUoc2NhbGUsIHNjYWxlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZS5hZGRDaGlsZCh0aWxlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGlsZU5vZGVzW2ldW2pdID0gdGlsZTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aWxlLmdldENvbXBvbmVudChUaWxlQ29udHJvbGxlcikuaW5pdChpLCBqLCBib2FyZFtpXVtqXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Um93TnVtYmVyKGJvYXJkOiBOb2RlW11bXSk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIGJvYXJkLmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb2x1bW5OdW1iZXIoYm9hcmQ6IE5vZGVbXVtdKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gYm9hcmRbMF0ubGVuZ3RoO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0KCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5nZXRSb3dOdW1iZXIodGhpcy50aWxlTm9kZXMpOyBpKyspIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmdldENvbHVtbk51bWJlcih0aGlzLnRpbGVOb2Rlcyk7IGorKykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdGlsZU5vZGUgPSB0aGlzLnRpbGVOb2Rlc1tpXVtqXTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHRpbGUgPSB0aWxlTm9kZS5nZXRDb21wb25lbnQoVGlsZUNvbnRyb2xsZXIpIGFzIGFueTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aWxlLnNldEVtcHR5KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcm91bmRPdmVyKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBkZWxheSA9IDAuMzsgLy8g5q+P5LiqdGlsZeW7tui/n+enkuaVsFxyXG5cclxuICAgICAgICAgICAgbGV0IF90bXAgPSAxO1xyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmdldFJvd051bWJlcih0aGlzLnRpbGVOb2Rlcyk7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmdldENvbHVtbk51bWJlcih0aGlzLnRpbGVOb2Rlcyk7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbGVOb2RlID0gdGhpcy50aWxlTm9kZXNbaV1bal07XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGlsZSA9IHRpbGVOb2RlLmdldENvbXBvbmVudChUaWxlQ29udHJvbGxlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpbGUuaXNTZWVkKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlsZS5zd2l0Y2hUb0Zsb3dlcigpOyAvLyDmkq3mlL7oirHlvIDliqjnlLvmiJbliIfmjaIgc3ByaXRlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIF90bXAgKiBkZWxheSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF90bXArKztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICAgICAgfSwgX3RtcCAqIGRlbGF5ICsgMSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYmxvd1NlZWRzKGRpcmVjdGlvbjogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHR3ZWVuczogUHJvbWlzZTx2b2lkPltdID0gW107XHJcbiAgICAgICAgICAgIGNvbnN0IFtkeCwgZHldID0gRElSRUNUSU9OX09GRlNFVFtkaXJlY3Rpb25dO1xyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmdldFJvd051bWJlcih0aGlzLnRpbGVOb2Rlcyk7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmdldENvbHVtbk51bWJlcih0aGlzLnRpbGVOb2Rlcyk7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbGVOb2RlID0gdGhpcy50aWxlTm9kZXNbaV1bal07XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGlsZSA9IHRpbGVOb2RlLmdldENvbXBvbmVudChUaWxlQ29udHJvbGxlcik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghdGlsZS5pc0Zsb3dlcigpKSBjb250aW51ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8g5LuO6Iqx5qC85a2Q5b6A6K+l5pa55ZCR5ZC5XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHggPSBpICsgZHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHkgPSBqICsgZHk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICh0aGlzLmluQm91bmRzKHgsIHkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldFRpbGUgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aWxlTm9kZXNbeF1beV0uZ2V0Q29tcG9uZW50KFRpbGVDb250cm9sbGVyKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXRUaWxlLmNhblBhc3NXaW5kKCkgPT0gZmFsc2UpIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0VGlsZS5jYW5Ib2xkU2VlZCgpID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHAgPSB0aGlzLmdyaWRBbmltYXRpb25cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2VlZEZseSh0aWxlLm5vZGUsIHRhcmdldFRpbGUubm9kZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFRpbGUuc2V0U2VlZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdlZW5zLnB1c2gocCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgeCArPSBkeDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeSArPSBkeTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHR3ZWVucy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoKTsgLy8g5rKh5pyJIHR3ZWVuIOeahOaDheWGteS5n+imgSByZXNvbHZlIOaOiVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgUHJvbWlzZS5hbGwodHdlZW5zKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7IC8vIOaJgOaciSB0d2VlbiDlrozmiJDkuYvlkI4gcmVzb2x2ZVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpbkJvdW5kcyh4OiBudW1iZXIsIHk6IG51bWJlcik6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIHggPj0gMCAmJlxyXG4gICAgICAgICAgICB4IDwgdGhpcy5nZXRSb3dOdW1iZXIodGhpcy50aWxlTm9kZXMpICYmXHJcbiAgICAgICAgICAgIHkgPj0gMCAmJlxyXG4gICAgICAgICAgICB5IDwgdGhpcy5nZXRDb2x1bW5OdW1iZXIodGhpcy50aWxlTm9kZXMpXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBpc0JvYXJkRnVsbHlDb3ZlcmVkKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGZvciAobGV0IHJvdyBvZiB0aGlzLnRpbGVOb2Rlcykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCB0aWxlIG9mIHJvdykge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aWxlLmdldENvbXBvbmVudChUaWxlQ29udHJvbGxlcikuaXNDb3ZlcmVkKCkpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgTm9kZSwgVmVjMywgdHdlZW4sIGZpbmQgfSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiSWRlbEFuaW1hdGlvbnNcIilcclxuZXhwb3J0IGNsYXNzIElkZWxBbmltYXRpb25zIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShOb2RlKVxyXG4gICAgY2xvdWRGYWNlOiBOb2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoTm9kZSlcclxuICAgIHBvaW50ZXI6IE5vZGUgPSBudWxsO1xyXG5cclxuICAgIHN0YXRpYyBpbnN0YW5jZTogSWRlbEFuaW1hdGlvbnM7XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uTG9hZCgpOiB2b2lkIHtcclxuICAgICAgICBJZGVsQW5pbWF0aW9ucy5pbnN0YW5jZSA9IHRoaXM7XHJcblxyXG4gICAgICAgIHRoaXMuaWRsZUNsb3VkKCk7XHJcbiAgICAgICAgdGhpcy5pZGxlQ29tcGFzcygpO1xyXG4gICAgfVxyXG5cclxuICAgIGlkbGVDbG91ZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5jbG91ZEZhY2UpIHtcclxuICAgICAgICAgICAgdHdlZW4odGhpcy5jbG91ZEZhY2UpXHJcbiAgICAgICAgICAgICAgICAucmVwZWF0Rm9yZXZlcihcclxuICAgICAgICAgICAgICAgICAgICB0d2VlbigpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5ieShcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHBvc2l0aW9uOiBuZXcgVmVjMygyMCwgMCwgMCkgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuYnkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoLTIwLCAwLCAwKSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAuc3RhcnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWRsZUNvbXBhc3MoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucG9pbnRlcikge1xyXG4gICAgICAgICAgICB0d2Vlbih0aGlzLnBvaW50ZXIpXHJcbiAgICAgICAgICAgICAgICAucmVwZWF0Rm9yZXZlcihcclxuICAgICAgICAgICAgICAgICAgICB0d2VlbigpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5ieSgxLjIsIHsgYW5nbGU6IDUgfSwgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmJ5KDEuMiwgeyBhbmdsZTogLTUgfSwgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfSlcclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgIC5zdGFydCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdG9wSWRsZShub2RlOiBOb2RlKSB7XHJcbiAgICAgICAgdHdlZW4obm9kZSkuc3RvcCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGlkbGVJbmRpY2F0b3IoZmxvd2VyOiBOb2RlKSB7XHJcbiAgICAgICAgY29uc3QgZGVsYXlTZWMgPSBNYXRoLnJhbmRvbSgpOyAvLyAwfjHnp5LkuYvpl7Tpmo/mnLpcclxuICAgICAgICB0d2VlbihmbG93ZXIpXHJcbiAgICAgICAgICAgIC5kZWxheShkZWxheVNlYylcclxuICAgICAgICAgICAgLnJlcGVhdEZvcmV2ZXIoXHJcbiAgICAgICAgICAgICAgICB0d2VlbigpXHJcbiAgICAgICAgICAgICAgICAgICAgLmJ5KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHBvc2l0aW9uOiBuZXcgVmVjMygwLCA1LCAwKSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGVhc2luZzogXCJzaW5lSW5PdXRcIiB9XHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgIC5ieShcclxuICAgICAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoMCwgLTUsIDApIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH1cclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWRsZVRpbGVGbG93ZXIoZmxvd2VyOiBOb2RlKSB7XHJcbiAgICAgICAgdHdlZW4oZmxvd2VyKVxyXG4gICAgICAgICAgICAucmVwZWF0Rm9yZXZlcihcclxuICAgICAgICAgICAgICAgIHR3ZWVuKClcclxuICAgICAgICAgICAgICAgICAgICAuYnkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDEuNCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoMCwgNCwgMCkgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfVxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAuYnkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDEuNCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoMCwgLTQsIDApIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH1cclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWRsZVRpbGVTZWVkKHNlZWQ6IE5vZGUpIHtcclxuICAgICAgICB0d2VlbihzZWVkKVxyXG4gICAgICAgICAgICAucmVwZWF0Rm9yZXZlcihcclxuICAgICAgICAgICAgICAgIHR3ZWVuKClcclxuICAgICAgICAgICAgICAgICAgICAuYnkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDIuMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoMCwgMywgMCkgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfVxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAuYnkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDIuMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMoMCwgLTMsIDApIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcInNpbmVJbk91dFwiIH1cclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCB0d2VlbiwgVUlPcGFjaXR5LCBWZWMzIH0gZnJvbSBcImNjXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IF9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzcyhcIkluc3RydWN0aW9uQW5pbWF0aW9uXCIpXHJcbmV4cG9ydCBjbGFzcyBJbnN0cnVjdGlvbkFuaW1hdGlvbiBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoTm9kZSlcclxuICAgIGZpbmdlck5vZGU6IE5vZGUgPSBudWxsO1xyXG5cclxuICAgIGhpZGVGaW5nZXIoKSB7XHJcbiAgICAgICAgdHdlZW4odGhpcy5maW5nZXJOb2RlKS5zdG9wKCk7XHJcbiAgICAgICAgdHdlZW4odGhpcy5maW5nZXJOb2RlLmdldENvbXBvbmVudChVSU9wYWNpdHkpKVxyXG4gICAgICAgICAgICAudG8oMC4zLCB7IG9wYWNpdHk6IDAgfSkgLy8g6YCP5piO5bqm5reh5Ye6XHJcbiAgICAgICAgICAgIC5jYWxsKCgpID0+ICh0aGlzLmZpbmdlck5vZGUuYWN0aXZlID0gZmFsc2UpKVxyXG4gICAgICAgICAgICAuc3RhcnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZGxlRmluZ2VyKCkge1xyXG4gICAgICAgIGNvbnN0IG9yaWdpbmFsUG9zID0gdGhpcy5maW5nZXJOb2RlLnBvc2l0aW9uO1xyXG4gICAgICAgIHRoaXMuZmluZ2VyTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHR3ZWVuKHRoaXMuZmluZ2VyTm9kZSlcclxuICAgICAgICAgICAgLnJlcGVhdEZvcmV2ZXIoXHJcbiAgICAgICAgICAgICAgICB0d2VlbigpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRvKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAwLjQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBuZXcgVmVjMyhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbFBvcy54LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsUG9zLnkgLSAxNVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfVxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAudG8oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDAuNCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBwb3NpdGlvbjogbmV3IFZlYzMob3JpZ2luYWxQb3MueCwgb3JpZ2luYWxQb3MueSkgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlYXNpbmc6IFwic2luZUluT3V0XCIgfVxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAuc3RhcnQoKTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBfZGVjb3JhdG9yLCBDb21wb25lbnQsIE5vZGUgfSBmcm9tIFwiY2NcIjtcclxuaW1wb3J0IHsgSW5zdHJ1Y3Rpb25BbmltYXRpb24gfSBmcm9tIFwiLi9JbnN0cnVjdGlvbkFuaW1hdGlvblwiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoXCJJbnN0cnVjdGlvbkNvbnRyb2xsZXJcIilcclxuZXhwb3J0IGNsYXNzIEluc3RydWN0aW9uQ29udHJvbGxlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoSW5zdHJ1Y3Rpb25BbmltYXRpb24pXHJcbiAgICBhbmltYXRpb246IEluc3RydWN0aW9uQW5pbWF0aW9uID0gbnVsbDtcclxuXHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgaGlkZSgpIHtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbi5oaWRlRmluZ2VyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdChsZXZlbDogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKGxldmVsICE9IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbi5pZGxlRmluZ2VyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IFRpbGVNb2RpZmllciB9IGZyb20gXCIuLi9Db25zdGFudHMvQ2VsbFN0YXRlXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIExldmVsQ29uZmlnIHtcclxuICAgIGxldmVsOiBudW1iZXI7XHJcbiAgICByb3VuZDogbnVtYmVyO1xyXG4gICAgZGlyZWN0aW9uPzogbnVtYmVyO1xyXG4gICAgd2luZFNlcXVlbmNlPzogc3RyaW5nW107XHJcbiAgICBib2FyZDogbnVtYmVyW11bXTsgLy8g5o6o6I2Q55SoIFRpbGVNb2RpZmllcltdW11cclxufVxyXG5jb25zdCBMZXZlbENvbmZpZ3M6IExldmVsQ29uZmlnW10gPSBbXHJcbiAgICB7XHJcbiAgICAgICAgbGV2ZWw6IDEsXHJcbiAgICAgICAgcm91bmQ6IDMsXHJcbiAgICAgICAgZGlyZWN0aW9uOiA0LFxyXG4gICAgICAgIHdpbmRTZXF1ZW5jZTogW1wiV1wiXSxcclxuICAgICAgICBib2FyZDogW1xyXG4gICAgICAgICAgICBbMSwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAxXSxcclxuICAgICAgICBdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBsZXZlbDogMixcclxuICAgICAgICByb3VuZDogMixcclxuICAgICAgICBkaXJlY3Rpb246IDQsXHJcbiAgICAgICAgd2luZFNlcXVlbmNlOiBbXCJXXCIsIFwiRVwiXSxcclxuICAgICAgICBib2FyZDogW1xyXG4gICAgICAgICAgICBbMSwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAxXSxcclxuICAgICAgICBdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBsZXZlbDogMyxcclxuICAgICAgICByb3VuZDogNixcclxuICAgICAgICB3aW5kU2VxdWVuY2U6IFtcIkVcIl0sXHJcbiAgICAgICAgYm9hcmQ6IFtcclxuICAgICAgICAgICAgWzEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMiwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAxLCAxXSxcclxuICAgICAgICBdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBsZXZlbDogNCxcclxuICAgICAgICByb3VuZDogNixcclxuICAgICAgICBib2FyZDogW1xyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAxLCAxLCAxXSxcclxuICAgICAgICAgICAgWzEsIDEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbGV2ZWw6IDUsXHJcbiAgICAgICAgcm91bmQ6IDYsXHJcbiAgICAgICAgYm9hcmQ6IFtcclxuICAgICAgICAgICAgWzEsIDEsIDEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAyLCAzLCAyLCAxXSxcclxuICAgICAgICAgICAgWzEsIDEsIDEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbGV2ZWw6IDYsXHJcbiAgICAgICAgcm91bmQ6IDYsXHJcbiAgICAgICAgYm9hcmQ6IFtcclxuICAgICAgICAgICAgWzEsIDEsIDEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMiwgNCwgMiwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAxLCAxLCAxLCAxXSxcclxuICAgICAgICAgICAgWzEsIDEsIDEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgXSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbGV2ZWw6IDcsXHJcbiAgICAgICAgcm91bmQ6IDYsXHJcbiAgICAgICAgYm9hcmQ6IFtcclxuICAgICAgICAgICAgWzEsIDEsIDEsIDEsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgICAgIFsxLCAxLCAxLCAxLCAxXSxcclxuICAgICAgICAgICAgWzEsIDQsIDQsIDIsIDFdLFxyXG4gICAgICAgICAgICBbMSwgMSwgMSwgMSwgMV0sXHJcbiAgICAgICAgXSxcclxuICAgIH0sXHJcbl07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGV2ZWxDb25maWcobGV2ZWxJbmRleDogbnVtYmVyKTogTGV2ZWxDb25maWcgfCBudWxsIHtcclxuICAgIGNvbnN0IHJhdyA9IExldmVsQ29uZmlnc1tNYXRoLm1pbihsZXZlbEluZGV4IC0gMSwgTGV2ZWxDb25maWdzLmxlbmd0aCAtIDEpXTtcclxuICAgIHJhdy5kaXJlY3Rpb24gPSByYXcuZGlyZWN0aW9uID8/IDg7XHJcbiAgICByZXR1cm4gcmF3O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNMYXN0TGV2ZWwobGV2ZWxJbmRleDogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gbGV2ZWxJbmRleCA+PSBMZXZlbENvbmZpZ3MubGVuZ3RoO1xyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCB9IGZyb20gXCJjY1wiO1xyXG5pbXBvcnQgeyBHYW1lTWFuYWdlciB9IGZyb20gXCIuLi8uLi9NYW5hZ2Vycy9HYW1lTWFuYWdlclwiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoXCJMZXZlbFRlc3RTY2VuZVwiKVxyXG5leHBvcnQgY2xhc3MgTGV2ZWxUZXN0U2NlbmUgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KEdhbWVNYW5hZ2VyKVxyXG4gICAgZ2FtZU1hbmFnZXI6IEdhbWVNYW5hZ2VyO1xyXG4gICAgc3RhcnQoKSB7XHJcbiAgICAgICAgLy8g5LyY5YWI5L2/55So5rWP6KeI5Zmo5rOo5YWl55qEIEpTT07vvIjmnaXoh6ogSFRNTCDkuK0gd2luZG93Ll9fY3VycmVudFRlc3RMZXZlbF9f77yJXHJcbiAgICAgICAgY29uc3QgaW5qZWN0ZWQgPSB3aW5kb3dbXCJfX2N1cnJlbnRUZXN0TGV2ZWxfX1wiXTtcclxuICAgICAgICBjb25zdCBmYWxsYmFja0xldmVsID0ge1xyXG4gICAgICAgICAgICBsZXZlbDogMSxcclxuICAgICAgICAgICAgcm91bmQ6IDMsXHJcbiAgICAgICAgICAgIGRpcmVjdGlvbjogNCxcclxuICAgICAgICAgICAgd2luZFNlcXVlbmNlOiBbXCJXXCJdLFxyXG4gICAgICAgICAgICBib2FyZDogW1xyXG4gICAgICAgICAgICAgICAgWzEsIDFdLFxyXG4gICAgICAgICAgICAgICAgWzEsIDFdLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgbGV2ZWxEYXRhID0gaW5qZWN0ZWQgfHwgZmFsbGJhY2tMZXZlbDtcclxuICAgICAgICBpZiAodGhpcy5nYW1lTWFuYWdlcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhsZXZlbERhdGEpO1xyXG4gICAgICAgICAgICB0aGlzLmdhbWVNYW5hZ2VyLmxvYWRMZXZlbChsZXZlbERhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBNdWRNb2RpZmllciB9IGZyb20gXCIuL011ZE1vZGlmaWVyXCI7XHJcbmltcG9ydCB7IEdyYXNzTW9kaWZpZXIgfSBmcm9tIFwiLi9HcmFzc01vZGlmaWVyXCI7XHJcbmltcG9ydCB7IFJvY2tNb2RpZmllciB9IGZyb20gXCIuL1JvY2tNb2RpZmllclwiO1xyXG5pbXBvcnQgeyBHZW5lcmFsTW9kaWZpZXIgfSBmcm9tIFwiLi9HZW5lcmFsTW9kaWZpZXJcIjtcclxuXHJcbi8vIOWvvOWHuuS4gOS4qiBtYXAg5pa55L6/5p+l5om+XHJcbmV4cG9ydCBjb25zdCBNb2RpZmllck1hcCA9IHtcclxuICAgIGdlbmVyYWxNb2RpZmllcjogR2VuZXJhbE1vZGlmaWVyLFxyXG4gICAgZ3Jhc3NNb2RpZmllcjogR3Jhc3NNb2RpZmllcixcclxuICAgIG11ZE1vZGlmaWVyOiBNdWRNb2RpZmllcixcclxuICAgIHJvY2tNb2RpZmllcjogUm9ja01vZGlmaWVyLFxyXG59O1xyXG4iLCJpbXBvcnQgeyBUaWxlTW9kaWZpZXJJbnRlcmZhY2UgfSBmcm9tIFwiLi9UaWxlTW9kaWZpZXJJbnRlcmZhY2VcIjtcclxuaW1wb3J0IHsgQ2VsbFN0YXRlIH0gZnJvbSBcIi4uLy4uLy4uL0NvbnN0YW50cy9DZWxsU3RhdGVcIjtcclxuaW1wb3J0IHsgTm9kZSB9IGZyb20gXCJjY1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE11ZE1vZGlmaWVyIGltcGxlbWVudHMgVGlsZU1vZGlmaWVySW50ZXJmYWNlIHtcclxuICAgIGluaXQodGlsZU5vZGU6IE5vZGUpIHtcclxuICAgICAgICBjb25zdCBlbXB0eU5vZGUgPSB0aWxlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIkVtcHR5Tm9kZVwiKTtcclxuICAgICAgICBpZiAoIWVtcHR5Tm9kZSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGVtcHR5Tm9kZS5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICBjaGlsZC5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHNwcml0ZSA9IGVtcHR5Tm9kZS5nZXRDaGlsZEJ5TmFtZShcIk11ZFNwcml0ZVwiKTtcclxuICAgICAgICBpZiAoc3ByaXRlKSBzcHJpdGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIGNhblBsYW50KCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGNhbkhvbGRTZWVkKCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgUGFydGljbGVTeXN0ZW0yRCB9IGZyb20gXCJjY1wiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoXCJWaWN0b3J5UGFydGljbGVcIilcclxuZXhwb3J0IGNsYXNzIFZpY3RvcnlQYXJ0aWNsZSBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICAvLyDlsJ3or5Xojrflj5bnspLlrZDns7vnu59cclxuICAgICAgICBjb25zdCBwcyA9IHRoaXMuZ2V0Q29tcG9uZW50KFBhcnRpY2xlU3lzdGVtMkQpO1xyXG5cclxuICAgICAgICAvLyDlpoLmnpznspLlrZDns7vnu5/lrZjlnKjvvIzlsLHmkq3mlL7vvIjlpoLmnpzorr7nva7kuoYgUGxheU9uTG9hZO+8jOS5n+WPr+S7peecgeeVpe+8iVxyXG4gICAgICAgIGlmIChwcykge1xyXG4gICAgICAgICAgICBwcy5yZXNldFN5c3RlbSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g6K6+572u5bu26L+f6ZSA5q+B77yaRHVyYXRpb24gKyBNYXhMaWZlICsg6aKd5aSW57yT5YayXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5kZXN0cm95KCk7XHJcbiAgICAgICAgfSwgNDAwMCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlIH0gZnJvbSBcImNjXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IF9kZWNvcmF0b3I7XHJcbmltcG9ydCB7IEdyaWRDb250cm9sbGVyIH0gZnJvbSBcIi4vR3JpZENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgRmxvd2VyQ29udHJvbGxlciB9IGZyb20gXCIuL0Zsb3dlckNvbnRyb2xsZXJcIjtcclxuXHJcbkBjY2NsYXNzKFwiUGxhbnRDb250cm9sbGVyXCIpXHJcbmV4cG9ydCBjbGFzcyBQbGFudENvbnRyb2xsZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KEZsb3dlckNvbnRyb2xsZXIpXHJcbiAgICBmbG93ZXJDb250cm9sbGVyOiBGbG93ZXJDb250cm9sbGVyID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoR3JpZENvbnRyb2xsZXIpXHJcbiAgICBncmlkQ29udHJvbGxlcjogR3JpZENvbnRyb2xsZXIgPSBudWxsO1xyXG5cclxuICAgIHByaXZhdGUgY291bnQgPSAwO1xyXG4gICAgcHJpdmF0ZSBjdXJyZW50Q291bnQgPSAwO1xyXG5cclxuICAgIGluaXQoY291bnQ6IG51bWJlciwgYm9hcmQ6IG51bWJlcltdW10pIHtcclxuICAgICAgICB0aGlzLmNvdW50ID0gY291bnQ7XHJcbiAgICAgICAgdGhpcy5mbG93ZXJDb250cm9sbGVyLmluaXQoY291bnQpO1xyXG4gICAgICAgIHRoaXMuZ3JpZENvbnRyb2xsZXIuaW5pdChib2FyZCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzZXQoKSB7XHJcbiAgICAgICAgdGhpcy5mbG93ZXJDb250cm9sbGVyLmluaXQodGhpcy5jb3VudCk7XHJcbiAgICAgICAgdGhpcy5ncmlkQ29udHJvbGxlci5yZXNldCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHBsYW50KHRpbGU6IE5vZGUpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgICAgICBjb25zdCBzdGF0dXMgPSBhd2FpdCB0aGlzLmZsb3dlckNvbnRyb2xsZXIucGxhbnQodGlsZSk7XHJcbiAgICAgICAgaWYgKHN0YXR1cykgdGhpcy5jdXJyZW50Q291bnQtLTtcclxuICAgICAgICByZXR1cm4gc3RhdHVzO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGJsb3coZGlyZWN0aW9uOiBzdHJpbmcpIHtcclxuICAgICAgICBhd2FpdCB0aGlzLmdyaWRDb250cm9sbGVyLmJsb3dTZWVkcyhkaXJlY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHJvdW5kT3ZlcigpIHtcclxuICAgICAgICBhd2FpdCB0aGlzLmdyaWRDb250cm9sbGVyLnJvdW5kT3ZlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGlzQm9hcmRGdWxseUNvdmVyZWQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JpZENvbnRyb2xsZXIuaXNCb2FyZEZ1bGx5Q292ZXJlZCgpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCB9IGZyb20gXCJjY1wiO1xyXG5pbXBvcnQgeyBHYW1lTWFuYWdlciB9IGZyb20gXCIuLi8uLi9NYW5hZ2Vycy9HYW1lTWFuYWdlclwiO1xyXG5pbXBvcnQgeyBnZXRMZXZlbENvbmZpZywgaXNMYXN0TGV2ZWwgfSBmcm9tIFwiLi4vLi4vTWFuYWdlcnMvTGV2ZWxNYW5hZ2VyXCI7XHJcblxyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoXCJQb3J0cmFpdFNjZW5lXCIpXHJcbmV4cG9ydCBjbGFzcyBQb3J0cmFpdFNjZW5lIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShHYW1lTWFuYWdlcilcclxuICAgIGdhbWVNYW5hZ2VyOiBHYW1lTWFuYWdlcjtcclxuXHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcInN0YXJ0IHBvcnRyYWl0U2NlbmVcIik7XHJcbiAgICAgICAgdGhpcy5pbml0R2FtZSgpO1xyXG4gICAgICAgIHRoaXMuZ2FtZU1hbmFnZXIub25HYW1lV2luID0gdGhpcy5uZXh0TGV2ZWwuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0R2FtZSgpIHtcclxuICAgICAgICBsZXQgY3VycmVudExldmVsID0gcGFyc2VJbnQoXHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudExldmVsXCIpIHx8IFwiMVwiXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgdGhpcy5nYW1lTWFuYWdlci5sb2FkTGV2ZWwoZ2V0TGV2ZWxDb25maWcoY3VycmVudExldmVsKSk7XHJcbiAgICB9XHJcblxyXG4gICAgbmV4dExldmVsKCkge1xyXG4gICAgICAgIGxldCBsZXZlbCA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudExldmVsXCIpIHx8IFwiMVwiKTtcclxuICAgICAgICBpZiAoaXNMYXN0TGV2ZWwobGV2ZWwpKSBsZXZlbCA9IDE7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50TGV2ZWxcIiwgKGxldmVsICsgMSkudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgdGhpcy5pbml0R2FtZSgpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgdmlldyB9IGZyb20gXCJjY1wiO1xyXG5jb25zdCB7IGNjY2xhc3MgfSA9IF9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzcyhcIlJlc2l6ZUhhbmRsZXJcIilcclxuZXhwb3J0IGNsYXNzIFJlc2l6ZUhhbmRsZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgLy9leHBvcnQgdHlwZSBQYWxTY3JlZW5FdmVudCA9ICd3aW5kb3ctcmVzaXplJyB8ICdvcmllbnRhdGlvbi1jaGFuZ2UnIHwgJ2Z1bGxzY3JlZW4tY2hhbmdlJztcclxuICAgIHN0YXJ0KCkge1xyXG4gICAgICAgIHZpZXcub24oXCJ3aW5kb3ctcmVzaXplXCIsIHRoaXMub25SZXNpemUsIHRoaXMpO1xyXG4gICAgICAgIHZpZXcub24oXCJvcmllbnRhdGlvbi1jaGFuZ2VcIiwgdGhpcy5vblJlc2l6ZSwgdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25SZXNpemUoKSB7XHJcbiAgICAgICAgY29uc3QgcmVzb2x1dGlvbiA9IHZpZXcuZ2V0RGVzaWduUmVzb2x1dGlvblNpemUoKTtcclxuICAgICAgICBjb25zdCBwb2xpY3kgPSB2aWV3LmdldFJlc29sdXRpb25Qb2xpY3koKTtcclxuXHJcbiAgICAgICAgLy8g6YeN5paw5bqU55So5b2T5YmN55qE6K6+6K6h5YiG6L6o546H5ZKM6YCC6YWN562W55Wl77yM6Kem5Y+R6YCC6YWN6YC76L6RXHJcbiAgICAgICAgdmlldy5zZXREZXNpZ25SZXNvbHV0aW9uU2l6ZShcclxuICAgICAgICAgICAgcmVzb2x1dGlvbi53aWR0aCxcclxuICAgICAgICAgICAgcmVzb2x1dGlvbi5oZWlnaHQsXHJcbiAgICAgICAgICAgIHBvbGljeVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiU2NyZWVuIHJlc2l6ZWQsIGxheW91dCB1cGRhdGVkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGVzdHJveSgpIHtcclxuICAgICAgICB2aWV3Lm9mZihcIndpbmRvdy1yZXNpemVcIiwgdGhpcy5vblJlc2l6ZSwgdGhpcyk7XHJcbiAgICAgICAgdmlldy5vZmYoXCJvcmllbnRhdGlvbi1jaGFuZ2VcIiwgdGhpcy5vblJlc2l6ZSwgdGhpcyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIGltcG9ydCB7XHJcbi8vICAgICBfZGVjb3JhdG9yLFxyXG4vLyAgICAgQ29tcG9uZW50LFxyXG4vLyAgICAgc2NyZWVuLFxyXG4vLyAgICAgc3lzLFxyXG4vLyAgICAgbWFjcm8sXHJcbi8vICAgICB2aWV3LFxyXG4vLyAgICAgU2l6ZSxcclxuLy8gICAgIGZpbmQsXHJcbi8vICAgICBDYW52YXMsXHJcbi8vICAgICBXaWRnZXQsXHJcbi8vICAgICBSZXNvbHV0aW9uUG9saWN5LFxyXG4vLyB9IGZyb20gXCJjY1wiO1xyXG4vLyBjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuLyoqXHJcbiAqIFByZWRlZmluZWQgdmFyaWFibGVzXHJcbiAqIE5hbWUgPSBOZXdDb21wb25lbnRcclxuICogRGF0ZVRpbWUgPSBUdWUgRmViIDA4IDIwMjIgMTc6MjI6MDUgR01UKzA4MDAgKOS4reWbveagh+WHhuaXtumXtClcclxuICogQXV0aG9yID0gS29laVxyXG4gKiBGaWxlQmFzZW5hbWUgPSBOZXdDb21wb25lbnQudHNcclxuICogRmlsZUJhc2VuYW1lTm9FeHRlbnNpb24gPSBOZXdDb21wb25lbnRcclxuICogVVJMID0gZGI6Ly9hc3NldHMvTmV3Q29tcG9uZW50LnRzXHJcbiAqIE1hbnVhbFVybCA9IGh0dHBzOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci8zLjQvbWFudWFsL3poL1xyXG4gKlxyXG4gKi9cclxuXHJcbi8vIEBjY2NsYXNzKCdOZXdDb21wb25lbnQnKVxyXG4vLyBleHBvcnQgY2xhc3MgTmV3Q29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcclxuLy8gICAgIC8vIFsxXVxyXG4vLyAgICAgLy8gZHVtbXkgPSAnJztcclxuXHJcbi8vICAgICAvLyBbMl1cclxuLy8gICAgIC8vIEBwcm9wZXJ0eVxyXG4vLyAgICAgLy8gc2VyaWFsaXphYmxlRHVtbXkgPSAwO1xyXG4vLyAgICAgX2RpciA9ICcnO1xyXG4vLyAgICAgY2FudmFzOiBDYW52YXMgPSBudWxsO1xyXG5cclxuLy8gICAgIHN0YXJ0KCkge1xyXG4vLyAgICAgICAgIHRoaXMuY2FudmFzID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChDYW52YXMpXHJcbi8vICAgICAgICAgZmluZCgnQ2FudmFzL2J0Jykub24oJ2NsaWNrJywgdGhpcy5vbkNsaWNrLCB0aGlzKVxyXG5cclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBvbkNsaWNrKCkge1xyXG4vLyAgICAgICAgIHRoaXMuX2RpciA9IHRoaXMuX2RpciA9PSAnVicgPyAnSCcgOiAnVicgIC8vSOaoquWxjyAgVuerluWxj1xyXG4vLyAgICAgICAgIGlmIChzeXMub3MgPT0gc3lzLk9TLkFORFJPSUQpXHJcbi8vICAgICAgICAgICAgIGpzYi5yZWZsZWN0aW9uLmNhbGxTdGF0aWNNZXRob2QoJ2NvbS9jb2Nvcy9nYW1lL0FwcEFjdGl2aXR5JywgJ3NldE9yaWVudGF0aW9uJywgJyhMamF2YS9sYW5nL1N0cmluZzspVicsIHRoaXMuX2RpcilcclxuLy8gICAgICAgICBlbHNlIGlmIChzeXMub3MgPT0gc3lzLk9TLklPUylcclxuLy8gICAgICAgICAgICAganNiLnJlZmxlY3Rpb24uY2FsbFN0YXRpY01ldGhvZCgnQXBwRGVsZWdhdGUnLCAnc2V0T3JpZW50YXRpb246JywgdGhpcy5fZGlyKVxyXG5cclxuLy8gICAgICAgICBsZXQgZnJhbWVTaXplID0gc2NyZWVuLndpbmRvd1NpemU7XHJcbi8vICAgICAgICAgY29uc29sZS5sb2coJ2ZyYW1lU2l6ZTogJyArIGZyYW1lU2l6ZS53aWR0aCArICcgICAnICsgZnJhbWVTaXplLmhlaWdodClcclxuLy8gICAgICAgICAvLyByZXR1cm5cclxuLy8gICAgICAgICBpZiAodGhpcy5fZGlyID09ICdWJykge1xyXG4vLyAgICAgICAgICAgICB2aWV3LnNldE9yaWVudGF0aW9uKG1hY3JvLk9SSUVOVEFUSU9OX1BPUlRSQUlUKVxyXG4vLyAgICAgICAgICAgICBpZiAoZnJhbWVTaXplLndpZHRoID4gZnJhbWVTaXplLmhlaWdodClcclxuLy8gICAgICAgICAgICAgICAgIHNjcmVlbi53aW5kb3dTaXplID0gbmV3IFNpemUoZnJhbWVTaXplLmhlaWdodCwgZnJhbWVTaXplLndpZHRoKVxyXG4vLyAgICAgICAgICAgICAvLyB0aGlzLmNhbnZhcy5kZXNpZ25SZXNvbHV0aW9uID0gbmV3IFNpemUoNzIwLDEyODApXHJcbi8vICAgICAgICAgICAgIHZpZXcuc2V0RGVzaWduUmVzb2x1dGlvblNpemUoNzIwLCAxMjgwLCBSZXNvbHV0aW9uUG9saWN5LkZJWEVEX0hFSUdIVClcclxuXHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIGVsc2Uge1xyXG4vLyAgICAgICAgICAgICB2aWV3LnNldE9yaWVudGF0aW9uKG1hY3JvLk9SSUVOVEFUSU9OX0xBTkRTQ0FQRSlcclxuLy8gICAgICAgICAgICAgaWYgKGZyYW1lU2l6ZS5oZWlnaHQgPiBmcmFtZVNpemUud2lkdGgpXHJcbi8vICAgICAgICAgICAgICAgICBzY3JlZW4ud2luZG93U2l6ZSA9IG5ldyBTaXplKGZyYW1lU2l6ZS5oZWlnaHQsIGZyYW1lU2l6ZS53aWR0aClcclxuLy8gICAgICAgICAgICAgLy8gdGhpcy5jYW52YXMuZGVzaWduUmVzb2x1dGlvbiA9ICBuZXcgU2l6ZSgxMjgwLDcyMClcclxuLy8gICAgICAgICAgICAgdmlldy5zZXREZXNpZ25SZXNvbHV0aW9uU2l6ZSgxMjgwLCA3MjAsIFJlc29sdXRpb25Qb2xpY3kuRklYRURfV0lEVEgpO1xyXG5cclxuLy8gICAgICAgICB9XHJcblxyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIC8vIHVwZGF0ZSAoZGVsdGFUaW1lOiBudW1iZXIpIHtcclxuLy8gICAgIC8vICAgICAvLyBbNF1cclxuLy8gICAgIC8vIH1cclxuLy8gfVxyXG5cclxuLyoqXHJcbiAqIFsxXSBDbGFzcyBtZW1iZXIgY291bGQgYmUgZGVmaW5lZCBsaWtlIHRoaXMuXHJcbiAqIFsyXSBVc2UgYHByb3BlcnR5YCBkZWNvcmF0b3IgaWYgeW91ciB3YW50IHRoZSBtZW1iZXIgdG8gYmUgc2VyaWFsaXphYmxlLlxyXG4gKiBbM10gWW91ciBpbml0aWFsaXphdGlvbiBnb2VzIGhlcmUuXHJcbiAqIFs0XSBZb3VyIHVwZGF0ZSBmdW5jdGlvbiBnb2VzIGhlcmUuXHJcbiAqXHJcbiAqIExlYXJuIG1vcmUgYWJvdXQgc2NyaXB0aW5nOiBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvMy40L21hbnVhbC96aC9zY3JpcHRpbmcvXHJcbiAqIExlYXJuIG1vcmUgYWJvdXQgQ0NDbGFzczogaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yLzMuNC9tYW51YWwvemgvc2NyaXB0aW5nL2NjY2xhc3MuaHRtbFxyXG4gKiBMZWFybiBtb3JlIGFib3V0IGxpZmUtY3ljbGUgY2FsbGJhY2tzOiBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvMy40L21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4gKi9cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCBMYWJlbCwgQnV0dG9uIH0gZnJvbSBcImNjXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IF9kZWNvcmF0b3I7XHJcblxyXG5pbXBvcnQgeyBSZXN1bHRQb3B1cEFuaW1hdGlvbiB9IGZyb20gXCIuL1Jlc3VsdFBvcHVwQW5pbWF0aW9uXCI7XHJcbkBjY2NsYXNzKFwiUmVzdWx0UG9wdXBcIilcclxuZXhwb3J0IGNsYXNzIFJlc3VsdFBvcHVwIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShMYWJlbClcclxuICAgIHRpdGxlTGFiZWw6IExhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoQnV0dG9uKVxyXG4gICAgcmVzdGFydEJ1dHRvbjogQnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoUmVzdWx0UG9wdXBBbmltYXRpb24pXHJcbiAgICBhbmltYXRpb246IFJlc3VsdFBvcHVwQW5pbWF0aW9uID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIF9vblJlc3RhcnQ6IEZ1bmN0aW9uID0gbnVsbDtcclxuXHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcblxyXG4gICAgICAgIC8vIOaMiemSrue7keWumueCueWHu1xyXG4gICAgICAgIHRoaXMucmVzdGFydEJ1dHRvbi5ub2RlLm9uKFxyXG4gICAgICAgICAgICBOb2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCxcclxuICAgICAgICAgICAgdGhpcy5lbmRTaG93LFxyXG4gICAgICAgICAgICB0aGlzXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBlbmRTaG93KCkge1xyXG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICBpZiAodGhpcy5fb25SZXN0YXJ0KSB0aGlzLl9vblJlc3RhcnQoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5bGV56S657uT566X57uT5p6cXHJcbiAgICAgKiBAcGFyYW0gaXNXaW4g5piv5ZCm6IOc5YipXHJcbiAgICAgKiBAcGFyYW0gb25SZXN0YXJ0IOeCueWHu+KAnOWGjeadpeS4gOWxgOKAneWQjueahOWbnuiwg+WHveaVsFxyXG4gICAgICovXHJcbiAgICBhc3luYyBzaG93KGlzV2luOiBib29sZWFuLCBvblJlc3RhcnQ6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5yZXN0YXJ0QnV0dG9uKTtcclxuICAgICAgICBjb25zdCBsYWJlbE5vZGUgPSB0aGlzLnJlc3RhcnRCdXR0b24ubm9kZS5nZXRDaGlsZEJ5TmFtZShcIkxhYmVsXCIpO1xyXG4gICAgICAgIGNvbnN0IGxhYmVsID0gbGFiZWxOb2RlPy5nZXRDb21wb25lbnQoTGFiZWwpO1xyXG5cclxuICAgICAgICB0aGlzLl9vblJlc3RhcnQgPSBvblJlc3RhcnQ7XHJcbiAgICAgICAgaWYgKGlzV2luKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGl0bGVMYWJlbC5zdHJpbmcgPSBcIllPVSBXSU4hXCI7XHJcbiAgICAgICAgICAgIGxhYmVsLnN0cmluZyA9IFwiTkVYVCBMRVZFTFwiO1xyXG5cclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5hbmltYXRpb24uc2hvd1dpbih0aGlzLm5vZGUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudGl0bGVMYWJlbC5zdHJpbmcgPSBcIkxFVkVMIEZBSUxFRFwiO1xyXG4gICAgICAgICAgICBsYWJlbC5zdHJpbmcgPSBcIlJFVFJZXCI7XHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuYW5pbWF0aW9uLnNob3dMb3NlKHRoaXMubm9kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgTm9kZSwgUHJlZmFiLCBpbnN0YW50aWF0ZSwgc3AgfSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuaW1wb3J0IHsgQXVkaW9IZWxwZXIgfSBmcm9tIFwiLi4vLi4vVXRpbHMvQXVkaW9IZWxwZXJcIjtcclxuaW1wb3J0IHsgd2FpdCB9IGZyb20gXCIuLi8uLi9VdGlscy9UaW1lbGluZUhlbHBlclwiO1xyXG5pbXBvcnQgeyBFZmZlY3RzSGVscGVyIH0gZnJvbSBcIi4uLy4uL0VmZmVjdHMvRWZmZWN0c0hlbHBlclwiO1xyXG5cclxuQGNjY2xhc3MoXCJSZXN1bHRQb3B1cEFuaW1hdGlvblwiKVxyXG5leHBvcnQgY2xhc3MgUmVzdWx0UG9wdXBBbmltYXRpb24gZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KFByZWZhYilcclxuICAgIHZpY3RvcnlQYXJ0aWNsZVByZWZhYjogUHJlZmFiID0gbnVsbCE7XHJcblxyXG4gICAgQHByb3BlcnR5KHNwLlNrZWxldG9uKVxyXG4gICAgYmFja2dyb3VuZFNwaW5lOiBzcC5Ta2VsZXRvbiA9IG51bGw7XHJcblxyXG4gICAgYXN5bmMgc2hvd1dpbihub2RlOiBOb2RlKSB7XHJcbiAgICAgICAgdGhpcy5zaG93VmljdG9yeVBhcnRpY2xlcygpOyAvLyDllpzpuYrjgIHokrLlhazoi7Hpo57oiJ5cclxuICAgICAgICBBdWRpb0hlbHBlci5pbnN0YW5jZS5wbGF5U0ZYKFwidGFkYWFcIik7XHJcbiAgICAgICAgYXdhaXQgd2FpdCgxNTAwKTsgLy8g5YGc6aG/5LiA5LiL57uZ546p5a6257yT5Yay5oOF57uqXHJcbiAgICAgICAgbm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZFNwaW5lLnNldEFuaW1hdGlvbigwLCBcInRob21hc0hlZGdlZG9nV2luXCIsIHRydWUpOyAvLyDliqjnlLvlkI3kuIDlrpropoHot58gU3BpbmUg5Lit5a6M5YWo5LiA6Ie0XHJcblxyXG4gICAgICAgIGF3YWl0IHRoaXMucG9wdXBSZXN1bHRQYW5lbChub2RlKTsgLy8gc2NhbGUgKyBlYXNpbmcg5by55Ye657uT566X5qGGXHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgc2hvd0xvc2Uobm9kZTogTm9kZSkge1xyXG4gICAgICAgIEF1ZGlvSGVscGVyLmluc3RhbmNlLnBsYXlTRlgoXCJsb3NlXCIpO1xyXG4gICAgICAgIGF3YWl0IHdhaXQoMTUwMCk7IC8vIOWBnOmhv+S4gOS4i+e7meeOqeWutue8k+WGsuaDhee7qlxyXG4gICAgICAgIG5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmRTcGluZS5zZXRBbmltYXRpb24oMCwgXCJmYWlsXCIsIGZhbHNlKTsgLy8g5Yqo55S75ZCN5LiA5a6a6KaB6LefIFNwaW5lIOS4reWujOWFqOS4gOiHtFxyXG5cclxuICAgICAgICBhd2FpdCB0aGlzLnBvcHVwUmVzdWx0UGFuZWwobm9kZSk7IC8vIHNjYWxlICsgZWFzaW5nIOW8ueWHuue7k+eul+ahhlxyXG4gICAgfVxyXG5cclxuICAgIHNob3dWaWN0b3J5UGFydGljbGVzKCkge1xyXG4gICAgICAgIGNvbnN0IG5vZGUgPSBpbnN0YW50aWF0ZSh0aGlzLnZpY3RvcnlQYXJ0aWNsZVByZWZhYik7XHJcbiAgICAgICAgbm9kZS5zZXRQb3NpdGlvbigwLCAwKTsgLy8g5oiW6K6+5Li65qOL55uY5Lit5aSu5Z2Q5qCHXHJcbiAgICAgICAgdGhpcy5ub2RlLmFkZENoaWxkKG5vZGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHBvcHVwUmVzdWx0UGFuZWwobm9kZTogTm9kZSkge1xyXG4gICAgICAgIGF3YWl0IEVmZmVjdHNIZWxwZXIuYm91bmNlU2NhbGUobm9kZSk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgVGlsZU1vZGlmaWVySW50ZXJmYWNlIH0gZnJvbSBcIi4vVGlsZU1vZGlmaWVySW50ZXJmYWNlXCI7XHJcbmltcG9ydCB7IENlbGxTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9Db25zdGFudHMvQ2VsbFN0YXRlXCI7XHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tIFwiY2NcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBSb2NrTW9kaWZpZXIgaW1wbGVtZW50cyBUaWxlTW9kaWZpZXJJbnRlcmZhY2Uge1xyXG4gICAgY2FuUGxhbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgY2FuSG9sZFNlZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaW5pdCh0aWxlTm9kZTogTm9kZSkge1xyXG4gICAgICAgIGNvbnN0IGVtcHR5Tm9kZSA9IHRpbGVOb2RlLmdldENoaWxkQnlOYW1lKFwiRW1wdHlOb2RlXCIpO1xyXG4gICAgICAgIGlmICghZW1wdHlOb2RlKSByZXR1cm47XHJcblxyXG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZW1wdHlOb2RlLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIGNoaWxkLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgc3ByaXRlID0gZW1wdHlOb2RlLmdldENoaWxkQnlOYW1lKFwiU3RvbmVTcHJpdGVcIik7XHJcbiAgICAgICAgaWYgKHNwcml0ZSkgc3ByaXRlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgY2FuUGFzc1dpbmQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaXNCbG9ja2luZ1RpbGUoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCBVSU9wYWNpdHksIHR3ZWVuLCBWZWMzIH0gZnJvbSBcImNjXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IF9kZWNvcmF0b3I7XHJcbmltcG9ydCB7IEF1ZGlvSGVscGVyIH0gZnJvbSBcIi4uL1V0aWxzL0F1ZGlvSGVscGVyXCI7XHJcblxyXG5AY2NjbGFzcyhcIlNjZW5lU3dpdGNoQW5pbWF0aW9uXCIpXHJcbmV4cG9ydCBjbGFzcyBTY2VuZVN3aXRjaEFuaW1hdGlvbiBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoTm9kZSlcclxuICAgIHJvb3ROb2RlOiBOb2RlID0gbnVsbDsgLy8g5oyH5ZCR5pW05Liq55WM6Z2i5qC56IqC54K577yM5q+U5aaCIENhbnZhcyDmiJYgbWFpblBhbmVsXHJcblxyXG4gICAgc3RhcnQoKSB7fVxyXG5cclxuICAgIHVwZGF0ZShkZWx0YVRpbWU6IG51bWJlcikge31cclxuXHJcbiAgICBzd2l0Y2goKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgICAgIEF1ZGlvSGVscGVyLmluc3RhbmNlLnBsYXlTRlgoXCJzd2lzaFwiKTtcclxuXHJcbiAgICAgICAgICAgIGxldCB1aU9wYWNpdHkgPSB0aGlzLnJvb3ROb2RlLmdldENvbXBvbmVudChVSU9wYWNpdHkpO1xyXG4gICAgICAgICAgICBpZiAoIXVpT3BhY2l0eSkge1xyXG4gICAgICAgICAgICAgICAgdWlPcGFjaXR5ID0gdGhpcy5yb290Tm9kZS5hZGRDb21wb25lbnQoVUlPcGFjaXR5KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8g5Yqo55S75pWI5p6c77ya57yp5pS+ICsg5reh5Ye6ICsg5YiH5o2i5Zy65pmvXHJcbiAgICAgICAgICAgIHR3ZWVuKHRoaXMucm9vdE5vZGUpXHJcbiAgICAgICAgICAgICAgICAudG8oXHJcbiAgICAgICAgICAgICAgICAgICAgMC41LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGU6IG5ldyBWZWMzKDAuMywgMC4zLCAxKSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHsgZWFzaW5nOiBcInF1YWRJbk91dFwiIH1cclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgIC5zdGFydCgpO1xyXG5cclxuICAgICAgICAgICAgdHdlZW4odWlPcGFjaXR5KVxyXG4gICAgICAgICAgICAgICAgLnRvKDAuNSwgeyBvcGFjaXR5OiAwIH0sIHsgZWFzaW5nOiBcInF1YWRJbk91dFwiIH0pXHJcbiAgICAgICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5zdGFydCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgZGlyZWN0b3IsIHZpZXcsIFJlc29sdXRpb25Qb2xpY3kgfSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuXHJcbmltcG9ydCB7IFNjZW5lU3dpdGNoQW5pbWF0aW9uIH0gZnJvbSBcIi4uLy4uL0VmZmVjdHMvU2NlbmVTd2l0Y2hBbmltYXRpb25cIjtcclxuXHJcbkBjY2NsYXNzKFwiU3RhcnRNYW5hZ2VyXCIpXHJcbmV4cG9ydCBjbGFzcyBTdGFydE1hbmFnZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KFNjZW5lU3dpdGNoQW5pbWF0aW9uKVxyXG4gICAgc2NlbmVBbmltYXRpb246IFNjZW5lU3dpdGNoQW5pbWF0aW9uID0gbnVsbDtcclxuXHJcbiAgICBzdGFydCgpIHt9XHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIC8vIOWFs+mUru+8muiuvue9rumAgumFjeetlueVpVxyXG4gICAgICAgIHZpZXcuc2V0RGVzaWduUmVzb2x1dGlvblNpemUoMTI4MCwgNzIwLCBSZXNvbHV0aW9uUG9saWN5LlNIT1dfQUxMKTtcclxuICAgICAgICB2aWV3LnJlc2l6ZVdpdGhCcm93c2VyU2l6ZSh0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoZGVsdGFUaW1lOiBudW1iZXIpIHt9XHJcblxyXG4gICAgYXN5bmMgb25TdGFydEdhbWUoKSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5zY2VuZUFuaW1hdGlvbi5zd2l0Y2goKTtcclxuICAgICAgICBkaXJlY3Rvci5sb2FkU2NlbmUoXCJwb3J0cmFpdFNjZW5lXCIpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgTm9kZSB9IGZyb20gXCJjY1wiO1xyXG5pbXBvcnQgeyBBdWRpb0hlbHBlciB9IGZyb20gXCIuLi8uLi9VdGlscy9BdWRpb0hlbHBlclwiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5pbXBvcnQgeyBFZmZlY3RzSGVscGVyIH0gZnJvbSBcIi4uLy4uL0VmZmVjdHMvRWZmZWN0c0hlbHBlclwiO1xyXG5cclxuQGNjY2xhc3MoXCJUaWxlQW5pbWF0aW9uXCIpXHJcbmV4cG9ydCBjbGFzcyBUaWxlQW5pbWF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIGFzeW5jIHN3aXRjaFRvRmxvd2VyKG5vZGU6IE5vZGUpIHtcclxuICAgICAgICBBdWRpb0hlbHBlci5pbnN0YW5jZS5wbGF5U0ZYKFwic3BhcmtsZVwiKTtcclxuICAgICAgICBhd2FpdCBFZmZlY3RzSGVscGVyLmJvdW5jZVNjYWxlKG5vZGUpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IF9kZWNvcmF0b3IsIENvbXBvbmVudCwgTm9kZSwgZGlyZWN0b3IgfSBmcm9tIFwiY2NcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuaW1wb3J0IHsgVGlsZUFuaW1hdGlvbiB9IGZyb20gXCIuL1RpbGVBbmltYXRpb25cIjtcclxuaW1wb3J0IHsgQ2VsbFN0YXRlLCBUaWxlTW9kaWZpZXIgfSBmcm9tIFwiLi4vLi4vQ29uc3RhbnRzL0NlbGxTdGF0ZVwiO1xyXG5pbXBvcnQgeyBNb2RpZmllck1hcCB9IGZyb20gXCIuL21vZGlmaWVycy9Nb2RpZmllcnNcIjtcclxuaW1wb3J0IHsgVGlsZU1vZGlmaWVySW50ZXJmYWNlIH0gZnJvbSBcIi4vbW9kaWZpZXJzL1RpbGVNb2RpZmllckludGVyZmFjZVwiO1xyXG5cclxuQGNjY2xhc3MoXCJUaWxlQ29udHJvbGxlclwiKVxyXG5leHBvcnQgY2xhc3MgVGlsZUNvbnRyb2xsZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KFRpbGVBbmltYXRpb24pXHJcbiAgICB0aWxlQW5pbWF0aW9uOiBUaWxlQW5pbWF0aW9uID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIHN0YXRlID0gQ2VsbFN0YXRlLkVtcHR5O1xyXG4gICAgcHJpdmF0ZSBtb2RpZmllcjogVGlsZU1vZGlmaWVySW50ZXJmYWNlID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIHNlZWRTcHJpdGVOb2RlOiBOb2RlID0gbnVsbDtcclxuICAgIHByaXZhdGUgZGFuZGVsaW9uU3ByaXRlTm9kZTogTm9kZSA9IG51bGw7XHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIHRoaXMuc2VlZFNwcml0ZU5vZGUgPSB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJTZWVkTm9kZVwiKTtcclxuICAgICAgICB0aGlzLmRhbmRlbGlvblNwcml0ZU5vZGUgPSB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJEYW5kZWxpb25Ob2RlXCIpO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBDZWxsU3RhdGUuRW1wdHk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdChpOiBudW1iZXIsIGo6IG51bWJlciwgdHlwZTogVGlsZU1vZGlmaWVyKSB7XHJcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgVGlsZU1vZGlmaWVyLkdyYXNzOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5tb2RpZmllciA9IG5ldyBNb2RpZmllck1hcC5ncmFzc01vZGlmaWVyKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBUaWxlTW9kaWZpZXIuUm9jazpcclxuICAgICAgICAgICAgICAgIHRoaXMubW9kaWZpZXIgPSBuZXcgTW9kaWZpZXJNYXAucm9ja01vZGlmaWVyKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBUaWxlTW9kaWZpZXIuTm9ybWFsOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5tb2RpZmllciA9IG5ldyBNb2RpZmllck1hcC5nZW5lcmFsTW9kaWZpZXIoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFRpbGVNb2RpZmllci5NdWQ6XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGlmaWVyID0gbmV3IE1vZGlmaWVyTWFwLm11ZE1vZGlmaWVyKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tb2RpZmllci5pbml0KHRoaXMubm9kZSk7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKE5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy5vbkNsaWNrLCB0aGlzKTtcclxuICAgIH1cclxuICAgIG9uQ2xpY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgPT09IENlbGxTdGF0ZS5FbXB0eSB8fCB0aGlzLnN0YXRlID09PSBDZWxsU3RhdGUuU2VlZCkge1xyXG4gICAgICAgICAgICBkaXJlY3Rvci5lbWl0KFwiVElMRV9DTElDS0VEXCIsIHRoaXMubm9kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNhblBsYW50KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1vZGlmaWVyLmNhblBsYW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgY2FuSG9sZFNlZWQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kaWZpZXIuY2FuSG9sZFNlZWQoKTtcclxuICAgIH1cclxuXHJcbiAgICBjYW5QYXNzV2luZCgpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAodGhpcy5tb2RpZmllci5jYW5QYXNzV2luZCkgcmV0dXJuIHRoaXMubW9kaWZpZXIuY2FuUGFzc1dpbmQoKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRGbG93ZXIoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2FuUGxhbnQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gQ2VsbFN0YXRlLkRhbmRlbGlvbjtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVWaXN1YWwoKTtcclxuICAgICAgICAgICAgdGhpcy5tb2RpZmllcj8ub25GbG93ZXJMYW5kZWQ/Lih0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0U2VlZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5jYW5Ib2xkU2VlZCgpICYmIHRoaXMuaXNFbXB0eSgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBDZWxsU3RhdGUuU2VlZDtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVWaXN1YWwoKTtcclxuICAgICAgICAgICAgdGhpcy5tb2RpZmllcj8ub25TZWVkTGFuZGVkPy4odGhpcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldEVtcHR5KCkge1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBDZWxsU3RhdGUuRW1wdHk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVWaXN1YWwoKTtcclxuICAgIH1cclxuXHJcbiAgICBzd2l0Y2hUb0Zsb3dlcigpIHtcclxuICAgICAgICB0aGlzLnNlZWRTcHJpdGVOb2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZGFuZGVsaW9uU3ByaXRlTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBDZWxsU3RhdGUuRGFuZGVsaW9uO1xyXG5cclxuICAgICAgICB0aGlzLnRpbGVBbmltYXRpb24uc3dpdGNoVG9GbG93ZXIodGhpcy5ub2RlKTtcclxuICAgIH1cclxuXHJcbiAgICBpc0Zsb3dlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZSA9PSBDZWxsU3RhdGUuRGFuZGVsaW9uO1xyXG4gICAgfVxyXG5cclxuICAgIGlzRW1wdHkoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUgPT0gQ2VsbFN0YXRlLkVtcHR5O1xyXG4gICAgfVxyXG5cclxuICAgIGlzU2VlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZSA9PSBDZWxsU3RhdGUuU2VlZDtcclxuICAgIH1cclxuXHJcbiAgICBpc0NvdmVyZWQoKSB7XHJcbiAgICAgICAgbGV0IHN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgIGlmICh0aGlzLm1vZGlmaWVyPy5pc0Jsb2NraW5nVGlsZSkge1xyXG4gICAgICAgICAgICBzdGF0dXMgPSB0aGlzLm1vZGlmaWVyLmlzQmxvY2tpbmdUaWxlKCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYmxvY2sgdGlsZSBjb3ZlciBzdGF0dXM6IFwiICsgc3RhdHVzKTtcclxuICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgc3RhdHVzID1cclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUgPT0gQ2VsbFN0YXRlLlNlZWQgfHxcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUgPT0gQ2VsbFN0YXRlLkRhbmRlbGlvbjtcclxuXHJcbiAgICAgICAgcmV0dXJuIHN0YXR1cztcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVWaXN1YWwoKSB7XHJcbiAgICAgICAgLy8g5YWI5YWo6YOo6ZqQ6JePXHJcbiAgICAgICAgdGhpcy5zZWVkU3ByaXRlTm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmRhbmRlbGlvblNwcml0ZU5vZGUuYWN0aXZlID0gZmFsc2U7XHJcblxyXG4gICAgICAgIC8vIOWGjeaYvuekuuWvueW6lOeahOmCo+S4qlxyXG4gICAgICAgIHN3aXRjaCAodGhpcy5zdGF0ZSkge1xyXG4gICAgICAgICAgICBjYXNlIENlbGxTdGF0ZS5FbXB0eTpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENlbGxTdGF0ZS5EYW5kZWxpb246XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhbmRlbGlvblNwcml0ZU5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENlbGxTdGF0ZS5TZWVkOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWVkU3ByaXRlTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi8vIE1vZGlmaWVyLnRzXHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tIFwiY2NcIjtcclxuaW1wb3J0IHsgVGlsZUNvbnRyb2xsZXIgfSBmcm9tIFwiLi4vVGlsZUNvbnRyb2xsZXJcIjtcclxuZXhwb3J0IGludGVyZmFjZSBUaWxlTW9kaWZpZXJJbnRlcmZhY2Uge1xyXG4gICAgY2FuUGxhbnQoKTogYm9vbGVhbjtcclxuICAgIGNhbkhvbGRTZWVkKCk6IGJvb2xlYW47XHJcbiAgICBpbml0KHRpbGVOb2RlOiBOb2RlKTogdm9pZDtcclxuICAgIG9uU2VlZExhbmRlZD8odGlsZTogVGlsZUNvbnRyb2xsZXIpOiB2b2lkO1xyXG4gICAgb25GbG93ZXJMYW5kZWQ/KHRpbGU6IFRpbGVDb250cm9sbGVyKTogdm9pZDtcclxuICAgIGNhblBhc3NXaW5kPygpOiBib29sZWFuO1xyXG4gICAgaXNCbG9ja2luZ1RpbGU/KCk6IGJvb2xlYW47XHJcbn1cclxuIiwiLy8gYXNzZXRzL1NjcmlwdHMvVXRpbHMvVGltZWxpbmVIZWxwZXIudHNcclxuXHJcbmV4cG9ydCBjbGFzcyBUaW1lbGluZUhlbHBlciB7XHJcbiAgICBzdGF0aWMgYXN5bmMgcnVuKFxyXG4gICAgICAgIHN0ZXBzOiAoKCkgPT4gdm9pZCB8IFByb21pc2U8dm9pZD4pW10sXHJcbiAgICAgICAgZGVsYXlCZXR3ZWVuU3RlcHM6IG51bWJlciA9IDBcclxuICAgICkge1xyXG4gICAgICAgIGZvciAoY29uc3Qgc3RlcCBvZiBzdGVwcykge1xyXG4gICAgICAgICAgICBhd2FpdCBzdGVwKCk7XHJcbiAgICAgICAgICAgIGlmIChkZWxheUJldHdlZW5TdGVwcyA+IDApIHtcclxuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMud2FpdChkZWxheUJldHdlZW5TdGVwcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHdhaXQobXM6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBydW5XaXRoRGVsYXlzKFxyXG4gICAgICAgIHN0ZXBUdXBsZXM6IFsoKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPiwgbnVtYmVyP11bXVxyXG4gICAgKSB7XHJcbiAgICAgICAgZm9yIChjb25zdCBbc3RlcCwgZGVsYXldIG9mIHN0ZXBUdXBsZXMpIHtcclxuICAgICAgICAgICAgYXdhaXQgc3RlcCgpO1xyXG4gICAgICAgICAgICBpZiAoZGVsYXkgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy53YWl0KGRlbGF5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gU2NyaXB0cy9VdGlscy9UaW1lVXRpbC50c1xyXG5leHBvcnQgZnVuY3Rpb24gd2FpdChtczogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcclxufVxyXG4iLCJpbXBvcnQgeyBfZGVjb3JhdG9yLCBDb21wb25lbnQsIE5vZGUsIHR3ZWVuLCBWZWMzIH0gZnJvbSBcImNjXCI7XHJcbmltcG9ydCB7IHdhaXQgfSBmcm9tIFwiLi4vLi4vVXRpbHMvVGltZWxpbmVIZWxwZXJcIjtcclxuaW1wb3J0IHsgQXVkaW9IZWxwZXIgfSBmcm9tIFwiLi4vLi4vVXRpbHMvQXVkaW9IZWxwZXJcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiVG9wQm9hcmRBbmltYXRpb25cIilcclxuZXhwb3J0IGNsYXNzIFRvcEJvYXJkQW5pbWF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIEBwcm9wZXJ0eShOb2RlKVxyXG4gICAgY2hhbGxlbmdlTm9kZTogTm9kZSA9IG51bGw7XHJcblxyXG4gICAgc3RhcnQoKSB7fVxyXG5cclxuICAgIGFzeW5jIHNob3dDaGFsbGVuZ2UoKSB7XHJcbiAgICAgICAgQXVkaW9IZWxwZXIuaW5zdGFuY2UucGxheVNGWChcInBhcGVyLXJpcFwiKTtcclxuICAgICAgICAvL+WxleW8gOWKqOeUu++8iOWNt+S4i+adpSlcclxuICAgICAgICB0d2Vlbih0aGlzLmNoYWxsZW5nZU5vZGUpXHJcbiAgICAgICAgICAgIC50bygxLCB7IHNjYWxlOiBuZXcgVmVjMygxLCAxLCAxKSB9LCB7IGVhc2luZzogXCJxdWFkT3V0XCIgfSlcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcblxyXG4gICAgICAgIGF3YWl0IHdhaXQoMzAwMCk7XHJcblxyXG4gICAgICAgIHRoaXMuaGlkZUNoYWxsZW5nZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGhpZGVDaGFsbGVuZ2UoKSB7XHJcbiAgICAgICAgQXVkaW9IZWxwZXIuaW5zdGFuY2UucGxheVNGWChcInBhcGVyLWNvbGxlY3RcIik7XHJcbiAgICAgICAgLy8g5ruR5Yqo5Yiw5pi+56S65L2N572uXHJcbiAgICAgICAgdHdlZW4odGhpcy5jaGFsbGVuZ2VOb2RlKVxyXG4gICAgICAgICAgICAudG8oMSwgeyBzY2FsZTogbmV3IFZlYzMoMSwgMCwgMSkgfSwgeyBlYXNpbmc6IFwicXVhZEluXCIgfSlcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgX2RlY29yYXRvciwgQ29tcG9uZW50LCBOb2RlLCBVSVRyYW5zZm9ybSwgVmVjMywgTGFiZWwgfSBmcm9tIFwiY2NcIjtcclxuaW1wb3J0IHsgVG9wQm9hcmRBbmltYXRpb24gfSBmcm9tIFwiLi9Ub3BCb2FyZEFuaW1hdGlvblwiO1xyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBfZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoXCJUb3BCb2FyZENvbnRyb2xsZXJcIilcclxuZXhwb3J0IGNsYXNzIFRvcEJvYXJkQ29udHJvbGxlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIGxldmVsOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIEBwcm9wZXJ0eShOb2RlKVxyXG4gICAgY2hhbGxlbmdlTm9kZTogTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KExhYmVsKVxyXG4gICAgbGV2ZWxMYWJlbDogTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShMYWJlbClcclxuICAgIGNoYWxsZW5nZUxhYmVsOiBMYWJlbCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KFRvcEJvYXJkQW5pbWF0aW9uKVxyXG4gICAgYW5pbWF0aW9uOiBUb3BCb2FyZEFuaW1hdGlvbiA9IG51bGw7XHJcblxyXG4gICAgc3RhcnQoKSB7XHJcbiAgICAgICAgLy8g6I635Y+WIGxldmVsQm9hcmQg5Zyo5LiW55WM5Z2Q5qCH55qE5L2N572u5ZKM5bC65a+4XHJcbiAgICAgICAgY29uc3Qgd29ybGRQb3MgPSB0aGlzLm5vZGVcclxuICAgICAgICAgICAgLmdldENvbXBvbmVudChVSVRyYW5zZm9ybSlcclxuICAgICAgICAgICAgLmNvbnZlcnRUb1dvcmxkU3BhY2VBUihWZWMzLlpFUk8pO1xyXG4gICAgICAgIGNvbnN0IGJvYXJkSGVpZ2h0ID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChVSVRyYW5zZm9ybSkuaGVpZ2h0O1xyXG5cclxuICAgICAgICAvLyDmioogd29ybGRQb3Mg6L2s5ZueIGNoYWxsZW5nZSDnmoTniLboioLngrnlnZDmoIfvvIjmr5TlpoIgY2FudmFzIOS4i++8iVxyXG4gICAgICAgIGNvbnN0IGxvY2FsUG9zID0gdGhpcy5jaGFsbGVuZ2VOb2RlXHJcbiAgICAgICAgICAgIC5nZXRDb21wb25lbnQoVUlUcmFuc2Zvcm0pXHJcbiAgICAgICAgICAgIC5jb252ZXJ0VG9Ob2RlU3BhY2VBUih3b3JsZFBvcyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZUhlaWdodCA9XHJcbiAgICAgICAgICAgIHRoaXMuY2hhbGxlbmdlTm9kZS5nZXRDb21wb25lbnQoVUlUcmFuc2Zvcm0pLmhlaWdodDtcclxuXHJcbiAgICAgICAgLy8g6K6+572uIGNoYWxsZW5nZSDnmoTkvY3nva7vvIzotLTlnKggbGV2ZWwgYm9hcmQg5LiL5pa5XHJcbiAgICAgICAgdGhpcy5jaGFsbGVuZ2VOb2RlLnNldFBvc2l0aW9uKFxyXG4gICAgICAgICAgICBsb2NhbFBvcy54LFxyXG4gICAgICAgICAgICBsb2NhbFBvcy55IC0gYm9hcmRIZWlnaHQgLyAyICsgMjJcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICB0aGlzLmNoYWxsZW5nZU5vZGUuc2V0U2NhbGUobmV3IFZlYzMoMSwgMCwgMSkpO1xyXG5cclxuICAgICAgICB0aGlzLm5vZGUub24oTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCB0aGlzLnNob3dDaGFsbGVuZ2UsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQobGV2ZWw6IG51bWJlciwgY291bnQ6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMubGV2ZWxMYWJlbC5zdHJpbmcgPSBsZXZlbC50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMuY2hhbGxlbmdlTGFiZWwuc3RyaW5nID0gXCJvbmx5IFwiICsgY291bnQgKyBcIiBtb3ZlcyFcIjtcclxuXHJcbiAgICAgICAgaWYgKGxldmVsID4gMSkge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dDaGFsbGVuZ2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2hvd0NoYWxsZW5nZSgpIHtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbi5zaG93Q2hhbGxlbmdlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKGRlbHRhVGltZTogbnVtYmVyKSB7fVxyXG59XHJcbiIsIi8vIFNjcmlwdHMvU3RyYXRlZ3kvV2luZFN0cmF0ZWd5LnRzXHJcblxyXG5pbXBvcnQge1xyXG4gICAgRGlyZWN0aW9uLFxyXG4gICAgRElSRUNUSU9OX09GRlNFVFMsXHJcbiAgICBGT1VSX0RJUkVDVElPTlMsXHJcbn0gZnJvbSBcIi4uLy4uL0NvbnN0YW50cy9EaXJlY3Rpb25cIjtcclxuaW1wb3J0IHsgVGlsZUNvbnRyb2xsZXIgfSBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9UaWxlL1RpbGVDb250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgV2luZFN0cmF0ZWd5IHtcclxuICAgIHN0YXRpYyBnZXRCZXN0V2luZERpcmVjdGlvbihcclxuICAgICAgICBib2FyZDogVGlsZUNvbnRyb2xsZXJbXVtdLFxyXG4gICAgICAgIGZsb3dlclg6IG51bWJlcixcclxuICAgICAgICBmbG93ZXJZOiBudW1iZXJcclxuICAgICk6IERpcmVjdGlvbiB7XHJcbiAgICAgICAgbGV0IGJlc3REaXI6IERpcmVjdGlvbiA9IERpcmVjdGlvbi5OO1xyXG4gICAgICAgIGxldCBtYXhFbXB0eSA9IC0xO1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IGRpciBvZiBGT1VSX0RJUkVDVElPTlMpIHtcclxuICAgICAgICAgICAgY29uc3QgeyBkeCwgZHkgfSA9IERJUkVDVElPTl9PRkZTRVRTW2Rpcl07XHJcbiAgICAgICAgICAgIGxldCB4ID0gZmxvd2VyWCArIGR4O1xyXG4gICAgICAgICAgICBsZXQgeSA9IGZsb3dlclkgKyBkeTtcclxuICAgICAgICAgICAgbGV0IGNvdW50ID0gMDtcclxuXHJcbiAgICAgICAgICAgIHdoaWxlICh4ID49IDAgJiYgeCA8IGJvYXJkLmxlbmd0aCAmJiB5ID49IDAgJiYgeSA8IGJvYXJkLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGJvYXJkW3ldW3hdLmlzRW1wdHkoKSkgY291bnQrKztcclxuICAgICAgICAgICAgICAgIHggKz0gZHg7XHJcbiAgICAgICAgICAgICAgICB5ICs9IGR5O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoY291bnQgPiBtYXhFbXB0eSkge1xyXG4gICAgICAgICAgICAgICAgbWF4RW1wdHkgPSBjb3VudDtcclxuICAgICAgICAgICAgICAgIGJlc3REaXIgPSBkaXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBiZXN0RGlyO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==