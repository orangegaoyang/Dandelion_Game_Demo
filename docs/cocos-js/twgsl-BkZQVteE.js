System.register([],(function(n){"use strict";return{execute:function(){var t,r=function(n){n=void 0!==(n=n||{})?n:{};var t,r,e,i,o,u=Object.assign({},n),f="./this.program",a=function(n,t){throw t},c="object"==typeof window,s="function"==typeof importScripts,w="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h="";w?(h=s?require("path").dirname(h)+"/":__dirname+"/","function"==typeof require&&(i=require("fs"),o=require("path")),t=function(n,t){return n=o.normalize(n),i.readFileSync(n,t?void 0:"utf8")},e=function(n){var r=t(n,!0);return r.buffer||(r=new Uint8Array(r)),r},r=function(n,t,r){n=o.normalize(n),i.readFile(n,(function(n,e){n?r(n):t(e.buffer)}))},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),"undefined"!=typeof module&&(module.exports=n),process.on("uncaughtException",(function(n){if(!(n instanceof Y))throw n})),process.on("unhandledRejection",(function(n){throw n})),a=function(n,t){throw process.exitCode=n,t},n.inspect=function(){return"[Emscripten Module object]"}):(c||s)&&(s?h=self.location.href:"undefined"!=typeof document&&document.currentScript&&(h=document.currentScript.src),h=0!==h.indexOf("blob:")?h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):"",t=function(n){var t=new XMLHttpRequest;return t.open("GET",n,!1),t.send(null),t.responseText},s&&(e=function(n){var t=new XMLHttpRequest;return t.open("GET",n,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),r=function(n,t,r){var e=new XMLHttpRequest;e.open("GET",n,!0),e.responseType="arraybuffer",e.onload=function(){200==e.status||0==e.status&&e.response?t(e.response):r()},e.onerror=r,e.send(null)});var l,v=n.print||console.log.bind(console),d=n.printErr||console.warn.bind(console);Object.assign(n,u),u=null,n.arguments&&n.arguments,n.thisProgram&&(f=n.thisProgram),n.quit&&(a=n.quit),n.wasmBinary&&(l=n.wasmBinary);var y,m=n.noExitRuntime||!0;"object"!=typeof WebAssembly&&C("no native wasm support detected");var p,g,b,M,A,D=!1,k="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function S(n,t,r){for(var e=t+r,i=t;n[i]&&!(i>=e);)++i;if(i-t>16&&n.buffer&&k)return k.decode(n.subarray(t,i));for(var o="";t<i;){var u=n[t++];if(128&u){var f=63&n[t++];if(192!=(224&u)){var a=63&n[t++];if((u=224==(240&u)?(15&u)<<12|f<<6|a:(7&u)<<18|f<<12|a<<6|63&n[t++])<65536)o+=String.fromCharCode(u);else{var c=u-65536;o+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else o+=String.fromCharCode((31&u)<<6|f)}else o+=String.fromCharCode(u)}return o}function _(n,t){return n?S(b,n,t):""}function E(n,t,r,e){if(!(e>0))return 0;for(var i=r,o=r+e-1,u=0;u<n.length;++u){var f=n.charCodeAt(u);if(f>=55296&&f<=57343&&(f=65536+((1023&f)<<10)|1023&n.charCodeAt(++u)),f<=127){if(r>=o)break;t[r++]=f}else if(f<=2047){if(r+1>=o)break;t[r++]=192|f>>6,t[r++]=128|63&f}else if(f<=65535){if(r+2>=o)break;t[r++]=224|f>>12,t[r++]=128|f>>6&63,t[r++]=128|63&f}else{if(r+3>=o)break;t[r++]=240|f>>18,t[r++]=128|f>>12&63,t[r++]=128|f>>6&63,t[r++]=128|63&f}}return t[r]=0,r-i}function F(n){for(var t=0,r=0;r<n.length;++r){var e=n.charCodeAt(r);e<=127?t++:e<=2047?t+=2:e>=55296&&e<=57343?(t+=4,++r):t+=3}return t}function O(t){p=t,n.HEAP8=g=new Int8Array(t),n.HEAP16=new Int16Array(t),n.HEAP32=M=new Int32Array(t),n.HEAPU8=b=new Uint8Array(t),n.HEAPU16=new Uint16Array(t),n.HEAPU32=A=new Uint32Array(t),n.HEAPF32=new Float32Array(t),n.HEAPF64=new Float64Array(t)}n.INITIAL_MEMORY;var j=[],R=[],U=[];function x(){if(n.preRun)for("function"==typeof n.preRun&&(n.preRun=[n.preRun]);n.preRun.length;)t=n.preRun.shift(),j.unshift(t);var t;J(j)}function L(){if(n.postRun)for("function"==typeof n.postRun&&(n.postRun=[n.postRun]);n.postRun.length;)t=n.postRun.shift(),U.unshift(t);var t;J(U)}var T,H,N,P,z=0,q=null;function I(){z++,n.monitorRunDependencies&&n.monitorRunDependencies(z)}function B(){if(z--,n.monitorRunDependencies&&n.monitorRunDependencies(z),0==z&&q){var t=q;q=null,t()}}function C(t){throw n.onAbort&&n.onAbort(t),d(t="Aborted("+t+")"),D=!0,t+=". Build with -sASSERTIONS for more info.",new WebAssembly.RuntimeError(t)}function W(n){return n.startsWith("data:application/octet-stream;base64,")}function X(n){return n.startsWith("file://")}function G(n){try{if(n==T&&l)return new Uint8Array(l);if(e)return e(n);throw"both async and sync fetching of the wasm failed"}catch(n){C(n)}}function V(){if(!l&&(c||s)){if("function"==typeof fetch&&!X(T))return fetch(T,{credentials:"same-origin"}).then((function(n){if(!n.ok)throw"failed to load wasm binary file at '"+T+"'";return n.arrayBuffer()})).catch((function(){return G(T)}));if(r)return new Promise((function(n,t){r(T,(function(t){n(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return G(T)}))}function Y(n){this.name="ExitStatus",this.message="Program terminated with exit("+n+")",this.status=n}function J(t){for(;t.length>0;)t.shift()(n)}function $(n){this.excPtr=n,this.ptr=n-24,this.set_type=function(n){A[this.ptr+4>>2]=n},this.get_type=function(){return A[this.ptr+4>>2]},this.set_destructor=function(n){A[this.ptr+8>>2]=n},this.get_destructor=function(){return A[this.ptr+8>>2]},this.set_refcount=function(n){M[this.ptr>>2]=n},this.set_caught=function(n){n=n?1:0,g[this.ptr+12|0]=n},this.get_caught=function(){return 0!=g[this.ptr+12|0]},this.set_rethrown=function(n){n=n?1:0,g[this.ptr+13|0]=n},this.get_rethrown=function(){return 0!=g[this.ptr+13|0]},this.init=function(n,t){this.set_adjusted_ptr(0),this.set_type(n),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var n=M[this.ptr>>2];M[this.ptr>>2]=n+1},this.release_ref=function(){var n=M[this.ptr>>2];return M[this.ptr>>2]=n-1,1===n},this.set_adjusted_ptr=function(n){A[this.ptr+16>>2]=n},this.get_adjusted_ptr=function(){return A[this.ptr+16>>2]},this.get_exception_ptr=function(){if(Sn(this.get_type()))return A[this.excPtr>>2];var n=this.get_adjusted_ptr();return 0!==n?n:this.excPtr}}function K(n){try{return y.grow(n-p.byteLength+65535>>>16),O(y.buffer),1}catch(n){}}W(T="twgsl.wasm")||(H=T,T=n.locateFile?n.locateFile(H,h):h+H);var Z={};function Q(){if(!Q.strings){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:f||"./this.program"};for(var t in Z)void 0===Z[t]?delete n[t]:n[t]=Z[t];var r=[];for(var t in n)r.push(t+"="+n[t]);Q.strings=r}return Q.strings}function nn(n,t){for(var r=0;r<n.length;++r)g[0|t++]=n.charCodeAt(r);g[0|t]=0}var tn={isAbs:function(n){return"/"===n.charAt(0)},splitPath:function(n){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(n).slice(1)},normalizeArray:function(n,t){for(var r=0,e=n.length-1;e>=0;e--){var i=n[e];"."===i?n.splice(e,1):".."===i?(n.splice(e,1),r++):r&&(n.splice(e,1),r--)}if(t)for(;r;r--)n.unshift("..");return n},normalize:function(n){var t=tn.isAbs(n),r="/"===n.substr(-1);return(n=tn.normalizeArray(n.split("/").filter((function(n){return!!n})),!t).join("/"))||t||(n="."),n&&r&&(n+="/"),(t?"/":"")+n},dirname:function(n){var t=tn.splitPath(n),r=t[0],e=t[1];return r||e?(e&&(e=e.substr(0,e.length-1)),r+e):"."},basename:function(n){if("/"===n)return"/";var t=(n=(n=tn.normalize(n)).replace(/\/$/,"")).lastIndexOf("/");return-1===t?n:n.substr(t+1)},join:function(){var n=Array.prototype.slice.call(arguments);return tn.normalize(n.join("/"))},join2:function(n,t){return tn.normalize(n+"/"+t)}};function rn(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var n=new Uint8Array(1);return function(){return crypto.getRandomValues(n),n[0]}}if(w)try{var t=require("crypto");return function(){return t.randomBytes(1)[0]}}catch(n){}return function(){return C("randomDevice")}}var en={resolve:function(){for(var n="",t=!1,r=arguments.length-1;r>=-1&&!t;r--){var e=r>=0?arguments[r]:sn.cwd();if("string"!=typeof e)throw new TypeError("Arguments to path.resolve must be strings");if(!e)return"";n=e+"/"+n,t=tn.isAbs(e)}return(t?"/":"")+(n=tn.normalizeArray(n.split("/").filter((function(n){return!!n})),!t).join("/"))||"."},relative:function(n,t){function r(n){for(var t=0;t<n.length&&""===n[t];t++);for(var r=n.length-1;r>=0&&""===n[r];r--);return t>r?[]:n.slice(t,r-t+1)}n=en.resolve(n).substr(1),t=en.resolve(t).substr(1);for(var e=r(n.split("/")),i=r(t.split("/")),o=Math.min(e.length,i.length),u=o,f=0;f<o;f++)if(e[f]!==i[f]){u=f;break}var a=[];for(f=u;f<e.length;f++)a.push("..");return(a=a.concat(i.slice(u))).join("/")}};function on(n,t){var r=F(n)+1,e=new Array(r),i=E(n,e,0,e.length);return t&&(e.length=i),e}var un={ttys:[],init:function(){},shutdown:function(){},register:function(n,t){un.ttys[n]={input:[],output:[],ops:t},sn.registerDevice(n,un.stream_ops)},stream_ops:{open:function(n){var t=un.ttys[n.node.rdev];if(!t)throw new sn.ErrnoError(43);n.tty=t,n.seekable=!1},close:function(n){n.tty.ops.fsync(n.tty)},fsync:function(n){n.tty.ops.fsync(n.tty)},read:function(n,t,r,e){if(!n.tty||!n.tty.ops.get_char)throw new sn.ErrnoError(60);for(var i=0,o=0;o<e;o++){var u;try{u=n.tty.ops.get_char(n.tty)}catch(n){throw new sn.ErrnoError(29)}if(void 0===u&&0===i)throw new sn.ErrnoError(6);if(null==u)break;i++,t[r+o]=u}return i&&(n.node.timestamp=Date.now()),i},write:function(n,t,r,e){if(!n.tty||!n.tty.ops.put_char)throw new sn.ErrnoError(60);try{for(var i=0;i<e;i++)n.tty.ops.put_char(n.tty,t[r+i])}catch(n){throw new sn.ErrnoError(29)}return e&&(n.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(n){if(!n.input.length){var t=null;if(w){var r=Buffer.alloc(256),e=0;try{e=i.readSync(process.stdin.fd,r,0,256,-1)}catch(n){if(!n.toString().includes("EOF"))throw n;e=0}t=e>0?r.slice(0,e).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(t=window.prompt("Input: "))&&(t+="\n"):"function"==typeof readline&&null!==(t=readline())&&(t+="\n");if(!t)return null;n.input=on(t,!0)}return n.input.shift()},put_char:function(n,t){null===t||10===t?(v(S(n.output,0)),n.output=[]):0!=t&&n.output.push(t)},fsync:function(n){n.output&&n.output.length>0&&(v(S(n.output,0)),n.output=[])}},default_tty1_ops:{put_char:function(n,t){null===t||10===t?(d(S(n.output,0)),n.output=[]):0!=t&&n.output.push(t)},fsync:function(n){n.output&&n.output.length>0&&(d(S(n.output,0)),n.output=[])}}};function fn(){C()}var an={ops_table:null,mount:function(){return an.createNode(null,"/",16895,0)},createNode:function(n,t,r,e){if(sn.isBlkdev(r)||sn.isFIFO(r))throw new sn.ErrnoError(63);an.ops_table||(an.ops_table={dir:{node:{getattr:an.node_ops.getattr,setattr:an.node_ops.setattr,lookup:an.node_ops.lookup,mknod:an.node_ops.mknod,rename:an.node_ops.rename,unlink:an.node_ops.unlink,rmdir:an.node_ops.rmdir,readdir:an.node_ops.readdir,symlink:an.node_ops.symlink},stream:{llseek:an.stream_ops.llseek}},file:{node:{getattr:an.node_ops.getattr,setattr:an.node_ops.setattr},stream:{llseek:an.stream_ops.llseek,read:an.stream_ops.read,write:an.stream_ops.write,allocate:an.stream_ops.allocate,mmap:an.stream_ops.mmap,msync:an.stream_ops.msync}},link:{node:{getattr:an.node_ops.getattr,setattr:an.node_ops.setattr,readlink:an.node_ops.readlink},stream:{}},chrdev:{node:{getattr:an.node_ops.getattr,setattr:an.node_ops.setattr},stream:sn.chrdev_stream_ops}});var i=sn.createNode(n,t,r,e);return sn.isDir(i.mode)?(i.node_ops=an.ops_table.dir.node,i.stream_ops=an.ops_table.dir.stream,i.contents={}):sn.isFile(i.mode)?(i.node_ops=an.ops_table.file.node,i.stream_ops=an.ops_table.file.stream,i.usedBytes=0,i.contents=null):sn.isLink(i.mode)?(i.node_ops=an.ops_table.link.node,i.stream_ops=an.ops_table.link.stream):sn.isChrdev(i.mode)&&(i.node_ops=an.ops_table.chrdev.node,i.stream_ops=an.ops_table.chrdev.stream),i.timestamp=Date.now(),n&&(n.contents[t]=i,n.timestamp=i.timestamp),i},getFileDataAsTypedArray:function(n){return n.contents?n.contents.subarray?n.contents.subarray(0,n.usedBytes):new Uint8Array(n.contents):new Uint8Array(0)},expandFileStorage:function(n,t){var r=n.contents?n.contents.length:0;if(!(r>=t)){t=Math.max(t,r*(r<1048576?2:1.125)>>>0),0!=r&&(t=Math.max(t,256));var e=n.contents;n.contents=new Uint8Array(t),n.usedBytes>0&&n.contents.set(e.subarray(0,n.usedBytes),0)}},resizeFileStorage:function(n,t){if(n.usedBytes!=t)if(0==t)n.contents=null,n.usedBytes=0;else{var r=n.contents;n.contents=new Uint8Array(t),r&&n.contents.set(r.subarray(0,Math.min(t,n.usedBytes))),n.usedBytes=t}},node_ops:{getattr:function(n){var t={};return t.dev=sn.isChrdev(n.mode)?n.id:1,t.ino=n.id,t.mode=n.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=n.rdev,sn.isDir(n.mode)?t.size=4096:sn.isFile(n.mode)?t.size=n.usedBytes:sn.isLink(n.mode)?t.size=n.link.length:t.size=0,t.atime=new Date(n.timestamp),t.mtime=new Date(n.timestamp),t.ctime=new Date(n.timestamp),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},setattr:function(n,t){void 0!==t.mode&&(n.mode=t.mode),void 0!==t.timestamp&&(n.timestamp=t.timestamp),void 0!==t.size&&an.resizeFileStorage(n,t.size)},lookup:function(){throw sn.genericErrors[44]},mknod:function(n,t,r,e){return an.createNode(n,t,r,e)},rename:function(n,t,r){if(sn.isDir(n.mode)){var e;try{e=sn.lookupNode(t,r)}catch(n){}if(e)for(var i in e.contents)throw new sn.ErrnoError(55)}delete n.parent.contents[n.name],n.parent.timestamp=Date.now(),n.name=r,t.contents[r]=n,t.timestamp=n.parent.timestamp,n.parent=t},unlink:function(n,t){delete n.contents[t],n.timestamp=Date.now()},rmdir:function(n,t){var r=sn.lookupNode(n,t);for(var e in r.contents)throw new sn.ErrnoError(55);delete n.contents[t],n.timestamp=Date.now()},readdir:function(n){var t=[".",".."];for(var r in n.contents)n.contents.hasOwnProperty(r)&&t.push(r);return t},symlink:function(n,t,r){var e=an.createNode(n,t,41471,0);return e.link=r,e},readlink:function(n){if(!sn.isLink(n.mode))throw new sn.ErrnoError(28);return n.link}},stream_ops:{read:function(n,t,r,e,i){var o=n.node.contents;if(i>=n.node.usedBytes)return 0;var u=Math.min(n.node.usedBytes-i,e);if(u>8&&o.subarray)t.set(o.subarray(i,i+u),r);else for(var f=0;f<u;f++)t[r+f]=o[i+f];return u},write:function(n,t,r,e,i,o){if(t.buffer===g.buffer&&(o=!1),!e)return 0;var u=n.node;if(u.timestamp=Date.now(),t.subarray&&(!u.contents||u.contents.subarray)){if(o)return u.contents=t.subarray(r,r+e),u.usedBytes=e,e;if(0===u.usedBytes&&0===i)return u.contents=t.slice(r,r+e),u.usedBytes=e,e;if(i+e<=u.usedBytes)return u.contents.set(t.subarray(r,r+e),i),e}if(an.expandFileStorage(u,i+e),u.contents.subarray&&t.subarray)u.contents.set(t.subarray(r,r+e),i);else for(var f=0;f<e;f++)u.contents[i+f]=t[r+f];return u.usedBytes=Math.max(u.usedBytes,i+e),e},llseek:function(n,t,r){var e=t;if(1===r?e+=n.position:2===r&&sn.isFile(n.node.mode)&&(e+=n.node.usedBytes),e<0)throw new sn.ErrnoError(28);return e},allocate:function(n,t,r){an.expandFileStorage(n.node,t+r),n.node.usedBytes=Math.max(n.node.usedBytes,t+r)},mmap:function(n,t,r,e,i){if(!sn.isFile(n.node.mode))throw new sn.ErrnoError(43);var o,u,f=n.node.contents;if(2&i||f.buffer!==p){if((r>0||r+t<f.length)&&(f=f.subarray?f.subarray(r,r+t):Array.prototype.slice.call(f,r,r+t)),u=!0,!(o=fn()))throw new sn.ErrnoError(48);g.set(f,o)}else u=!1,o=f.byteOffset;return{ptr:o,allocated:u}},msync:function(n,t,r,e){return an.stream_ops.write(n,t,0,e,r,!1),0}}};function cn(n,t,e){var i="al "+n;r(n,(function(r){r||C('Loading data file "'+n+'" failed (no arrayBuffer).'),t(new Uint8Array(r)),i&&B()}),(function(){if(!e)throw'Loading data file "'+n+'" failed.';e()})),i&&I()}var sn={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(n,t){if(void 0===t&&(t={}),!(n=en.resolve(sn.cwd(),n)))return{path:"",node:null};if((t=Object.assign({follow_mount:!0,recurse_count:0},t)).recurse_count>8)throw new sn.ErrnoError(32);for(var r=tn.normalizeArray(n.split("/").filter((function(n){return!!n})),!1),e=sn.root,i="/",o=0;o<r.length;o++){var u=o===r.length-1;if(u&&t.parent)break;if(e=sn.lookupNode(e,r[o]),i=tn.join2(i,r[o]),sn.isMountpoint(e)&&(!u||u&&t.follow_mount)&&(e=e.mounted.root),!u||t.follow)for(var f=0;sn.isLink(e.mode);){var a=sn.readlink(i);if(i=en.resolve(tn.dirname(i),a),e=sn.lookupPath(i,{recurse_count:t.recurse_count+1}).node,f++>40)throw new sn.ErrnoError(32)}}return{path:i,node:e}},getPath:function(n){for(var t;;){if(sn.isRoot(n)){var r=n.mount.mountpoint;return t?"/"!==r[r.length-1]?r+"/"+t:r+t:r}t=t?n.name+"/"+t:n.name,n=n.parent}},hashName:function(n,t){for(var r=0,e=0;e<t.length;e++)r=(r<<5)-r+t.charCodeAt(e)|0;return(n+r>>>0)%sn.nameTable.length},hashAddNode:function(n){var t=sn.hashName(n.parent.id,n.name);n.name_next=sn.nameTable[t],sn.nameTable[t]=n},hashRemoveNode:function(n){var t=sn.hashName(n.parent.id,n.name);if(sn.nameTable[t]===n)sn.nameTable[t]=n.name_next;else for(var r=sn.nameTable[t];r;){if(r.name_next===n){r.name_next=n.name_next;break}r=r.name_next}},lookupNode:function(n,t){var r=sn.mayLookup(n);if(r)throw new sn.ErrnoError(r,n);for(var e=sn.hashName(n.id,t),i=sn.nameTable[e];i;i=i.name_next){var o=i.name;if(i.parent.id===n.id&&o===t)return i}return sn.lookup(n,t)},createNode:function(n,t,r,e){var i=new sn.FSNode(n,t,r,e);return sn.hashAddNode(i),i},destroyNode:function(n){sn.hashRemoveNode(n)},isRoot:function(n){return n===n.parent},isMountpoint:function(n){return!!n.mounted},isFile:function(n){return 32768==(61440&n)},isDir:function(n){return 16384==(61440&n)},isLink:function(n){return 40960==(61440&n)},isChrdev:function(n){return 8192==(61440&n)},isBlkdev:function(n){return 24576==(61440&n)},isFIFO:function(n){return 4096==(61440&n)},isSocket:function(n){return!(49152&~n)},flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:function(n){var t=sn.flagModes[n];if(void 0===t)throw new Error("Unknown file open mode: "+n);return t},flagsToPermissionString:function(n){var t=["r","w","rw"][3&n];return 512&n&&(t+="w"),t},nodePermissions:function(n,t){return sn.ignorePermissions||(!t.includes("r")||292&n.mode)&&(!t.includes("w")||146&n.mode)&&(!t.includes("x")||73&n.mode)?0:2},mayLookup:function(n){return sn.nodePermissions(n,"x")||(n.node_ops.lookup?0:2)},mayCreate:function(n,t){try{return sn.lookupNode(n,t),20}catch(n){}return sn.nodePermissions(n,"wx")},mayDelete:function(n,t,r){var e;try{e=sn.lookupNode(n,t)}catch(n){return n.errno}var i=sn.nodePermissions(n,"wx");if(i)return i;if(r){if(!sn.isDir(e.mode))return 54;if(sn.isRoot(e)||sn.getPath(e)===sn.cwd())return 10}else if(sn.isDir(e.mode))return 31;return 0},mayOpen:function(n,t){return n?sn.isLink(n.mode)?32:sn.isDir(n.mode)&&("r"!==sn.flagsToPermissionString(t)||512&t)?31:sn.nodePermissions(n,sn.flagsToPermissionString(t)):44},MAX_OPEN_FDS:4096,nextfd:function(n,t){void 0===n&&(n=0),void 0===t&&(t=sn.MAX_OPEN_FDS);for(var r=n;r<=t;r++)if(!sn.streams[r])return r;throw new sn.ErrnoError(33)},getStream:function(n){return sn.streams[n]},createStream:function(n,t,r){sn.FSStream||(sn.FSStream=function(){this.shared={}},sn.FSStream.prototype={},Object.defineProperties(sn.FSStream.prototype,{object:{get:function(){return this.node},set:function(n){this.node=n}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return!!(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(n){this.shared.flags=n}},position:{get:function(){return this.shared.position},set:function(n){this.shared.position=n}}})),n=Object.assign(new sn.FSStream,n);var e=sn.nextfd(t,r);return n.fd=e,sn.streams[e]=n,n},closeStream:function(n){sn.streams[n]=null},chrdev_stream_ops:{open:function(n){var t=sn.getDevice(n.node.rdev);n.stream_ops=t.stream_ops,n.stream_ops.open&&n.stream_ops.open(n)},llseek:function(){throw new sn.ErrnoError(70)}},major:function(n){return n>>8},minor:function(n){return 255&n},makedev:function(n,t){return n<<8|t},registerDevice:function(n,t){sn.devices[n]={stream_ops:t}},getDevice:function(n){return sn.devices[n]},getMounts:function(n){for(var t=[],r=[n];r.length;){var e=r.pop();t.push(e),r.push.apply(r,e.mounts)}return t},syncfs:function(n,t){"function"==typeof n&&(t=n,n=!1),sn.syncFSRequests++,sn.syncFSRequests>1&&d("warning: "+sn.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var r=sn.getMounts(sn.root.mount),e=0;function i(n){return sn.syncFSRequests--,t(n)}function o(n){if(n)return o.errored?void 0:(o.errored=!0,i(n));++e>=r.length&&i(null)}r.forEach((function(t){if(!t.type.syncfs)return o(null);t.type.syncfs(t,n,o)}))},mount:function(n,t,r){var e,i="/"===r,o=!r;if(i&&sn.root)throw new sn.ErrnoError(10);if(!i&&!o){var u=sn.lookupPath(r,{follow_mount:!1});if(r=u.path,e=u.node,sn.isMountpoint(e))throw new sn.ErrnoError(10);if(!sn.isDir(e.mode))throw new sn.ErrnoError(54)}var f={type:n,opts:t,mountpoint:r,mounts:[]},a=n.mount(f);return a.mount=f,f.root=a,i?sn.root=a:e&&(e.mounted=f,e.mount&&e.mount.mounts.push(f)),a},unmount:function(n){var t=sn.lookupPath(n,{follow_mount:!1});if(!sn.isMountpoint(t.node))throw new sn.ErrnoError(28);var r=t.node,e=r.mounted,i=sn.getMounts(e);Object.keys(sn.nameTable).forEach((function(n){for(var t=sn.nameTable[n];t;){var r=t.name_next;i.includes(t.mount)&&sn.destroyNode(t),t=r}})),r.mounted=null;var o=r.mount.mounts.indexOf(e);r.mount.mounts.splice(o,1)},lookup:function(n,t){return n.node_ops.lookup(n,t)},mknod:function(n,t,r){var e=sn.lookupPath(n,{parent:!0}).node,i=tn.basename(n);if(!i||"."===i||".."===i)throw new sn.ErrnoError(28);var o=sn.mayCreate(e,i);if(o)throw new sn.ErrnoError(o);if(!e.node_ops.mknod)throw new sn.ErrnoError(63);return e.node_ops.mknod(e,i,t,r)},create:function(n,t){return t=void 0!==t?t:438,t&=4095,t|=32768,sn.mknod(n,t,0)},mkdir:function(n,t){return t=void 0!==t?t:511,t&=1023,t|=16384,sn.mknod(n,t,0)},mkdirTree:function(n,t){for(var r=n.split("/"),e="",i=0;i<r.length;++i)if(r[i]){e+="/"+r[i];try{sn.mkdir(e,t)}catch(n){if(20!=n.errno)throw n}}},mkdev:function(n,t,r){return void 0===r&&(r=t,t=438),t|=8192,sn.mknod(n,t,r)},symlink:function(n,t){if(!en.resolve(n))throw new sn.ErrnoError(44);var r=sn.lookupPath(t,{parent:!0}).node;if(!r)throw new sn.ErrnoError(44);var e=tn.basename(t),i=sn.mayCreate(r,e);if(i)throw new sn.ErrnoError(i);if(!r.node_ops.symlink)throw new sn.ErrnoError(63);return r.node_ops.symlink(r,e,n)},rename:function(n,t){var r,e,i=tn.dirname(n),o=tn.dirname(t),u=tn.basename(n),f=tn.basename(t);if(r=sn.lookupPath(n,{parent:!0}).node,e=sn.lookupPath(t,{parent:!0}).node,!r||!e)throw new sn.ErrnoError(44);if(r.mount!==e.mount)throw new sn.ErrnoError(75);var a,c=sn.lookupNode(r,u),s=en.relative(n,o);if("."!==s.charAt(0))throw new sn.ErrnoError(28);if("."!==(s=en.relative(t,i)).charAt(0))throw new sn.ErrnoError(55);try{a=sn.lookupNode(e,f)}catch(n){}if(c!==a){var w=sn.isDir(c.mode),h=sn.mayDelete(r,u,w);if(h)throw new sn.ErrnoError(h);if(h=a?sn.mayDelete(e,f,w):sn.mayCreate(e,f))throw new sn.ErrnoError(h);if(!r.node_ops.rename)throw new sn.ErrnoError(63);if(sn.isMountpoint(c)||a&&sn.isMountpoint(a))throw new sn.ErrnoError(10);if(e!==r&&(h=sn.nodePermissions(r,"w")))throw new sn.ErrnoError(h);sn.hashRemoveNode(c);try{r.node_ops.rename(c,e,f)}catch(n){throw n}finally{sn.hashAddNode(c)}}},rmdir:function(n){var t=sn.lookupPath(n,{parent:!0}).node,r=tn.basename(n),e=sn.lookupNode(t,r),i=sn.mayDelete(t,r,!0);if(i)throw new sn.ErrnoError(i);if(!t.node_ops.rmdir)throw new sn.ErrnoError(63);if(sn.isMountpoint(e))throw new sn.ErrnoError(10);t.node_ops.rmdir(t,r),sn.destroyNode(e)},readdir:function(n){var t=sn.lookupPath(n,{follow:!0}).node;if(!t.node_ops.readdir)throw new sn.ErrnoError(54);return t.node_ops.readdir(t)},unlink:function(n){var t=sn.lookupPath(n,{parent:!0}).node;if(!t)throw new sn.ErrnoError(44);var r=tn.basename(n),e=sn.lookupNode(t,r),i=sn.mayDelete(t,r,!1);if(i)throw new sn.ErrnoError(i);if(!t.node_ops.unlink)throw new sn.ErrnoError(63);if(sn.isMountpoint(e))throw new sn.ErrnoError(10);t.node_ops.unlink(t,r),sn.destroyNode(e)},readlink:function(n){var t=sn.lookupPath(n).node;if(!t)throw new sn.ErrnoError(44);if(!t.node_ops.readlink)throw new sn.ErrnoError(28);return en.resolve(sn.getPath(t.parent),t.node_ops.readlink(t))},stat:function(n,t){var r=sn.lookupPath(n,{follow:!t}).node;if(!r)throw new sn.ErrnoError(44);if(!r.node_ops.getattr)throw new sn.ErrnoError(63);return r.node_ops.getattr(r)},lstat:function(n){return sn.stat(n,!0)},chmod:function(n,t,r){var e;if(!(e="string"==typeof n?sn.lookupPath(n,{follow:!r}).node:n).node_ops.setattr)throw new sn.ErrnoError(63);e.node_ops.setattr(e,{mode:4095&t|-4096&e.mode,timestamp:Date.now()})},lchmod:function(n,t){sn.chmod(n,t,!0)},fchmod:function(n,t){var r=sn.getStream(n);if(!r)throw new sn.ErrnoError(8);sn.chmod(r.node,t)},chown:function(n,t,r,e){var i;if(!(i="string"==typeof n?sn.lookupPath(n,{follow:!e}).node:n).node_ops.setattr)throw new sn.ErrnoError(63);i.node_ops.setattr(i,{timestamp:Date.now()})},lchown:function(n,t,r){sn.chown(n,t,r,!0)},fchown:function(n,t,r){var e=sn.getStream(n);if(!e)throw new sn.ErrnoError(8);sn.chown(e.node,t,r)},truncate:function(n,t){if(t<0)throw new sn.ErrnoError(28);var r;if(!(r="string"==typeof n?sn.lookupPath(n,{follow:!0}).node:n).node_ops.setattr)throw new sn.ErrnoError(63);if(sn.isDir(r.mode))throw new sn.ErrnoError(31);if(!sn.isFile(r.mode))throw new sn.ErrnoError(28);var e=sn.nodePermissions(r,"w");if(e)throw new sn.ErrnoError(e);r.node_ops.setattr(r,{size:t,timestamp:Date.now()})},ftruncate:function(n,t){var r=sn.getStream(n);if(!r)throw new sn.ErrnoError(8);if(!(2097155&r.flags))throw new sn.ErrnoError(28);sn.truncate(r.node,t)},utime:function(n,t,r){var e=sn.lookupPath(n,{follow:!0}).node;e.node_ops.setattr(e,{timestamp:Math.max(t,r)})},open:function(t,r,e){if(""===t)throw new sn.ErrnoError(44);var i;if(e=void 0===e?438:e,e=64&(r="string"==typeof r?sn.modeStringToFlags(r):r)?4095&e|32768:0,"object"==typeof t)i=t;else{t=tn.normalize(t);try{i=sn.lookupPath(t,{follow:!(131072&r)}).node}catch(n){}}var o=!1;if(64&r)if(i){if(128&r)throw new sn.ErrnoError(20)}else i=sn.mknod(t,e,0),o=!0;if(!i)throw new sn.ErrnoError(44);if(sn.isChrdev(i.mode)&&(r&=-513),65536&r&&!sn.isDir(i.mode))throw new sn.ErrnoError(54);if(!o){var u=sn.mayOpen(i,r);if(u)throw new sn.ErrnoError(u)}512&r&&!o&&sn.truncate(i,0),r&=-131713;var f=sn.createStream({node:i,path:sn.getPath(i),flags:r,seekable:!0,position:0,stream_ops:i.stream_ops,ungotten:[],error:!1});return f.stream_ops.open&&f.stream_ops.open(f),!n.logReadFiles||1&r||(sn.readFiles||(sn.readFiles={}),t in sn.readFiles||(sn.readFiles[t]=1)),f},close:function(n){if(sn.isClosed(n))throw new sn.ErrnoError(8);n.getdents&&(n.getdents=null);try{n.stream_ops.close&&n.stream_ops.close(n)}catch(n){throw n}finally{sn.closeStream(n.fd)}n.fd=null},isClosed:function(n){return null===n.fd},llseek:function(n,t,r){if(sn.isClosed(n))throw new sn.ErrnoError(8);if(!n.seekable||!n.stream_ops.llseek)throw new sn.ErrnoError(70);if(0!=r&&1!=r&&2!=r)throw new sn.ErrnoError(28);return n.position=n.stream_ops.llseek(n,t,r),n.ungotten=[],n.position},read:function(n,t,r,e,i){if(e<0||i<0)throw new sn.ErrnoError(28);if(sn.isClosed(n))throw new sn.ErrnoError(8);if(1==(2097155&n.flags))throw new sn.ErrnoError(8);if(sn.isDir(n.node.mode))throw new sn.ErrnoError(31);if(!n.stream_ops.read)throw new sn.ErrnoError(28);var o=void 0!==i;if(o){if(!n.seekable)throw new sn.ErrnoError(70)}else i=n.position;var u=n.stream_ops.read(n,t,r,e,i);return o||(n.position+=u),u},write:function(n,t,r,e,i,o){if(e<0||i<0)throw new sn.ErrnoError(28);if(sn.isClosed(n))throw new sn.ErrnoError(8);if(!(2097155&n.flags))throw new sn.ErrnoError(8);if(sn.isDir(n.node.mode))throw new sn.ErrnoError(31);if(!n.stream_ops.write)throw new sn.ErrnoError(28);n.seekable&&1024&n.flags&&sn.llseek(n,0,2);var u=void 0!==i;if(u){if(!n.seekable)throw new sn.ErrnoError(70)}else i=n.position;var f=n.stream_ops.write(n,t,r,e,i,o);return u||(n.position+=f),f},allocate:function(n,t,r){if(sn.isClosed(n))throw new sn.ErrnoError(8);if(t<0||r<=0)throw new sn.ErrnoError(28);if(!(2097155&n.flags))throw new sn.ErrnoError(8);if(!sn.isFile(n.node.mode)&&!sn.isDir(n.node.mode))throw new sn.ErrnoError(43);if(!n.stream_ops.allocate)throw new sn.ErrnoError(138);n.stream_ops.allocate(n,t,r)},mmap:function(n,t,r,e,i){if(2&e&&!(2&i)&&2!=(2097155&n.flags))throw new sn.ErrnoError(2);if(1==(2097155&n.flags))throw new sn.ErrnoError(2);if(!n.stream_ops.mmap)throw new sn.ErrnoError(43);return n.stream_ops.mmap(n,t,r,e,i)},msync:function(n,t,r,e,i){return n.stream_ops.msync?n.stream_ops.msync(n,t,r,e,i):0},munmap:function(){return 0},ioctl:function(n,t,r){if(!n.stream_ops.ioctl)throw new sn.ErrnoError(59);return n.stream_ops.ioctl(n,t,r)},readFile:function(n,t){if(void 0===t&&(t={}),t.flags=t.flags||0,t.encoding=t.encoding||"binary","utf8"!==t.encoding&&"binary"!==t.encoding)throw new Error('Invalid encoding type "'+t.encoding+'"');var r,e=sn.open(n,t.flags),i=sn.stat(n).size,o=new Uint8Array(i);return sn.read(e,o,0,i,0),"utf8"===t.encoding?r=S(o,0):"binary"===t.encoding&&(r=o),sn.close(e),r},writeFile:function(n,t,r){void 0===r&&(r={}),r.flags=r.flags||577;var e=sn.open(n,r.flags,r.mode);if("string"==typeof t){var i=new Uint8Array(F(t)+1),o=E(t,i,0,i.length);sn.write(e,i,0,o,void 0,r.canOwn)}else{if(!ArrayBuffer.isView(t))throw new Error("Unsupported data type");sn.write(e,t,0,t.byteLength,void 0,r.canOwn)}sn.close(e)},cwd:function(){return sn.currentPath},chdir:function(n){var t=sn.lookupPath(n,{follow:!0});if(null===t.node)throw new sn.ErrnoError(44);if(!sn.isDir(t.node.mode))throw new sn.ErrnoError(54);var r=sn.nodePermissions(t.node,"x");if(r)throw new sn.ErrnoError(r);sn.currentPath=t.path},createDefaultDirectories:function(){sn.mkdir("/tmp"),sn.mkdir("/home"),sn.mkdir("/home/web_user")},createDefaultDevices:function(){sn.mkdir("/dev"),sn.registerDevice(sn.makedev(1,3),{read:function(){return 0},write:function(n,t,r,e){return e}}),sn.mkdev("/dev/null",sn.makedev(1,3)),un.register(sn.makedev(5,0),un.default_tty_ops),un.register(sn.makedev(6,0),un.default_tty1_ops),sn.mkdev("/dev/tty",sn.makedev(5,0)),sn.mkdev("/dev/tty1",sn.makedev(6,0));var n=rn();sn.createDevice("/dev","random",n),sn.createDevice("/dev","urandom",n),sn.mkdir("/dev/shm"),sn.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){sn.mkdir("/proc");var n=sn.mkdir("/proc/self");sn.mkdir("/proc/self/fd"),sn.mount({mount:function(){var t=sn.createNode(n,"fd",16895,73);return t.node_ops={lookup:function(n,t){var r=+t,e=sn.getStream(r);if(!e)throw new sn.ErrnoError(8);var i={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return e.path}}};return i.parent=i,i}},t}},{},"/proc/self/fd")},createStandardStreams:function(){n.stdin?sn.createDevice("/dev","stdin",n.stdin):sn.symlink("/dev/tty","/dev/stdin"),n.stdout?sn.createDevice("/dev","stdout",null,n.stdout):sn.symlink("/dev/tty","/dev/stdout"),n.stderr?sn.createDevice("/dev","stderr",null,n.stderr):sn.symlink("/dev/tty1","/dev/stderr"),sn.open("/dev/stdin",0),sn.open("/dev/stdout",1),sn.open("/dev/stderr",1)},ensureErrnoError:function(){sn.ErrnoError||(sn.ErrnoError=function(n,t){this.node=t,this.setErrno=function(n){this.errno=n},this.setErrno(n),this.message="FS error"},sn.ErrnoError.prototype=new Error,sn.ErrnoError.prototype.constructor=sn.ErrnoError,[44].forEach((function(n){sn.genericErrors[n]=new sn.ErrnoError(n),sn.genericErrors[n].stack="<generic error, no stack>"})))},staticInit:function(){sn.ensureErrnoError(),sn.nameTable=new Array(4096),sn.mount(an,{},"/"),sn.createDefaultDirectories(),sn.createDefaultDevices(),sn.createSpecialDirectories(),sn.filesystems={MEMFS:an}},init:function(t,r,e){sn.init.initialized=!0,sn.ensureErrnoError(),n.stdin=t||n.stdin,n.stdout=r||n.stdout,n.stderr=e||n.stderr,sn.createStandardStreams()},quit:function(){sn.init.initialized=!1;for(var n=0;n<sn.streams.length;n++){var t=sn.streams[n];t&&sn.close(t)}},getMode:function(n,t){var r=0;return n&&(r|=365),t&&(r|=146),r},findObject:function(n,t){var r=sn.analyzePath(n,t);return r.exists?r.object:null},analyzePath:function(n,t){try{n=(e=sn.lookupPath(n,{follow:!t})).path}catch(n){}var r={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var e=sn.lookupPath(n,{parent:!0});r.parentExists=!0,r.parentPath=e.path,r.parentObject=e.node,r.name=tn.basename(n),e=sn.lookupPath(n,{follow:!t}),r.exists=!0,r.path=e.path,r.object=e.node,r.name=e.node.name,r.isRoot="/"===e.path}catch(n){r.error=n.errno}return r},createPath:function(n,t){n="string"==typeof n?n:sn.getPath(n);for(var r=t.split("/").reverse();r.length;){var e=r.pop();if(e){var i=tn.join2(n,e);try{sn.mkdir(i)}catch(n){}n=i}}return i},createFile:function(n,t,r,e,i){var o=tn.join2("string"==typeof n?n:sn.getPath(n),t),u=sn.getMode(e,i);return sn.create(o,u)},createDataFile:function(n,t,r,e,i,o){var u=t;n&&(n="string"==typeof n?n:sn.getPath(n),u=t?tn.join2(n,t):n);var f=sn.getMode(e,i),a=sn.create(u,f);if(r){if("string"==typeof r){for(var c=new Array(r.length),s=0,w=r.length;s<w;++s)c[s]=r.charCodeAt(s);r=c}sn.chmod(a,146|f);var h=sn.open(a,577);sn.write(h,r,0,r.length,0,o),sn.close(h),sn.chmod(a,f)}return a},createDevice:function(n,t,r,e){var i=tn.join2("string"==typeof n?n:sn.getPath(n),t),o=sn.getMode(!!r,!!e);sn.createDevice.major||(sn.createDevice.major=64);var u=sn.makedev(sn.createDevice.major++,0);return sn.registerDevice(u,{open:function(n){n.seekable=!1},close:function(){e&&e.buffer&&e.buffer.length&&e(10)},read:function(n,t,e,i){for(var o=0,u=0;u<i;u++){var f;try{f=r()}catch(n){throw new sn.ErrnoError(29)}if(void 0===f&&0===o)throw new sn.ErrnoError(6);if(null==f)break;o++,t[e+u]=f}return o&&(n.node.timestamp=Date.now()),o},write:function(n,t,r,i){for(var o=0;o<i;o++)try{e(t[r+o])}catch(n){throw new sn.ErrnoError(29)}return i&&(n.node.timestamp=Date.now()),o}}),sn.mkdev(i,o,u)},forceLoadFile:function(n){if(n.isDevice||n.isFolder||n.link||n.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!t)throw new Error("Cannot load without read() or XMLHttpRequest.");try{n.contents=on(t(n.url),!0),n.usedBytes=n.contents.length}catch(n){throw new sn.ErrnoError(29)}},createLazyFile:function(n,t,r,e,i){function o(){this.lengthKnown=!1,this.chunks=[]}if(o.prototype.get=function(n){if(!(n>this.length-1||n<0)){var t=n%this.chunkSize,r=n/this.chunkSize|0;return this.getter(r)[t]}},o.prototype.setDataGetter=function(n){this.getter=n},o.prototype.cacheLength=function(){var n=new XMLHttpRequest;if(n.open("HEAD",r,!1),n.send(null),!(n.status>=200&&n.status<300||304===n.status))throw new Error("Couldn't load "+r+". Status: "+n.status);var t,e=Number(n.getResponseHeader("Content-length")),i=(t=n.getResponseHeader("Accept-Ranges"))&&"bytes"===t,o=(t=n.getResponseHeader("Content-Encoding"))&&"gzip"===t,u=1048576;i||(u=e);var f=function(n,t){if(n>t)throw new Error("invalid range ("+n+", "+t+") or no bytes requested!");if(t>e-1)throw new Error("only "+e+" bytes available! programmer error!");var i=new XMLHttpRequest;if(i.open("GET",r,!1),e!==u&&i.setRequestHeader("Range","bytes="+n+"-"+t),i.responseType="arraybuffer",i.overrideMimeType&&i.overrideMimeType("text/plain; charset=x-user-defined"),i.send(null),!(i.status>=200&&i.status<300||304===i.status))throw new Error("Couldn't load "+r+". Status: "+i.status);return void 0!==i.response?new Uint8Array(i.response||[]):on(i.responseText||"",!0)},a=this;a.setDataGetter((function(n){var t=n*u,r=(n+1)*u-1;if(r=Math.min(r,e-1),void 0===a.chunks[n]&&(a.chunks[n]=f(t,r)),void 0===a.chunks[n])throw new Error("doXHR failed!");return a.chunks[n]})),!o&&e||(u=e=1,e=this.getter(0).length,u=e,v("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=e,this._chunkSize=u,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!s)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var u=new o;Object.defineProperties(u,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var f={isDevice:!1,contents:u}}else f={isDevice:!1,url:r};var a=sn.createFile(n,t,f,e,i);f.contents?a.contents=f.contents:f.url&&(a.contents=null,a.url=f.url),Object.defineProperties(a,{usedBytes:{get:function(){return this.contents.length}}});var c={};function w(n,t,r,e,i){var o=n.node.contents;if(i>=o.length)return 0;var u=Math.min(o.length-i,e);if(o.slice)for(var f=0;f<u;f++)t[r+f]=o[i+f];else for(f=0;f<u;f++)t[r+f]=o.get(i+f);return u}return Object.keys(a.stream_ops).forEach((function(n){var t=a.stream_ops[n];c[n]=function(){return sn.forceLoadFile(a),t.apply(null,arguments)}})),c.read=function(n,t,r,e,i){return sn.forceLoadFile(a),w(n,t,r,e,i)},c.mmap=function(n,t,r){sn.forceLoadFile(a);var e=fn();if(!e)throw new sn.ErrnoError(48);return w(n,g,e,t,r),{ptr:e,allocated:!0}},a.stream_ops=c,a},createPreloadedFile:function(n,t,r,e,i,o,u,f,a,c){var s=t?en.resolve(tn.join2(n,t)):n;function w(r){function w(r){c&&c(),f||sn.createDataFile(n,t,r,e,i,a),o&&o(),B()}Browser.handledByPreloadPlugin(r,s,w,(function(){u&&u(),B()}))||w(r)}I(),"string"==typeof r?cn(r,(function(n){return w(n)}),u):w(r)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(n,t,r){t=t||function(){},r=r||function(){};var e=sn.indexedDB();try{var i=e.open(sn.DB_NAME(),sn.DB_VERSION)}catch(n){return r(n)}i.onupgradeneeded=function(){v("creating db"),i.result.createObjectStore(sn.DB_STORE_NAME)},i.onsuccess=function(){var e=i.result.transaction([sn.DB_STORE_NAME],"readwrite"),o=e.objectStore(sn.DB_STORE_NAME),u=0,f=0,a=n.length;function c(){0==f?t():r()}n.forEach((function(n){var t=o.put(sn.analyzePath(n).object.contents,n);t.onsuccess=function(){++u+f==a&&c()},t.onerror=function(){f++,u+f==a&&c()}})),e.onerror=r},i.onerror=r},loadFilesFromDB:function(n,t,r){t=t||function(){},r=r||function(){};var e=sn.indexedDB();try{var i=e.open(sn.DB_NAME(),sn.DB_VERSION)}catch(n){return r(n)}i.onupgradeneeded=r,i.onsuccess=function(){var e=i.result;try{var o=e.transaction([sn.DB_STORE_NAME],"readonly")}catch(n){return void r(n)}var u=o.objectStore(sn.DB_STORE_NAME),f=0,a=0,c=n.length;function s(){0==a?t():r()}n.forEach((function(n){var t=u.get(n);t.onsuccess=function(){sn.analyzePath(n).exists&&sn.unlink(n),sn.createDataFile(tn.dirname(n),tn.basename(n),t.result,!0,!0,!0),++f+a==c&&s()},t.onerror=function(){a++,f+a==c&&s()}})),o.onerror=r},i.onerror=r}},wn={DEFAULT_POLLMASK:5,calculateAt:function(n,t,r){if(tn.isAbs(t))return t;var e;if(e=-100===n?sn.cwd():wn.getStreamFromFD(n).path,0==t.length){if(!r)throw new sn.ErrnoError(44);return e}return tn.join2(e,t)},doStat:function(n,t,r){try{var e=n(t)}catch(n){if(n&&n.node&&tn.normalize(t)!==tn.normalize(sn.getPath(n.node)))return-54;throw n}return M[r>>2]=e.dev,M[r+8>>2]=e.ino,M[r+12>>2]=e.mode,A[r+16>>2]=e.nlink,M[r+20>>2]=e.uid,M[r+24>>2]=e.gid,M[r+28>>2]=e.rdev,P=[e.size>>>0,(N=e.size,+Math.abs(N)>=1?N>0?(0|Math.min(+Math.floor(N/4294967296),4294967295))>>>0:~~+Math.ceil((N-+(~~N>>>0))/4294967296)>>>0:0)],M[r+40>>2]=P[0],M[r+44>>2]=P[1],M[r+48>>2]=4096,M[r+52>>2]=e.blocks,P=[Math.floor(e.atime.getTime()/1e3)>>>0,(N=Math.floor(e.atime.getTime()/1e3),+Math.abs(N)>=1?N>0?(0|Math.min(+Math.floor(N/4294967296),4294967295))>>>0:~~+Math.ceil((N-+(~~N>>>0))/4294967296)>>>0:0)],M[r+56>>2]=P[0],M[r+60>>2]=P[1],A[r+64>>2]=0,P=[Math.floor(e.mtime.getTime()/1e3)>>>0,(N=Math.floor(e.mtime.getTime()/1e3),+Math.abs(N)>=1?N>0?(0|Math.min(+Math.floor(N/4294967296),4294967295))>>>0:~~+Math.ceil((N-+(~~N>>>0))/4294967296)>>>0:0)],M[r+72>>2]=P[0],M[r+76>>2]=P[1],A[r+80>>2]=0,P=[Math.floor(e.ctime.getTime()/1e3)>>>0,(N=Math.floor(e.ctime.getTime()/1e3),+Math.abs(N)>=1?N>0?(0|Math.min(+Math.floor(N/4294967296),4294967295))>>>0:~~+Math.ceil((N-+(~~N>>>0))/4294967296)>>>0:0)],M[r+88>>2]=P[0],M[r+92>>2]=P[1],A[r+96>>2]=0,P=[e.ino>>>0,(N=e.ino,+Math.abs(N)>=1?N>0?(0|Math.min(+Math.floor(N/4294967296),4294967295))>>>0:~~+Math.ceil((N-+(~~N>>>0))/4294967296)>>>0:0)],M[r+104>>2]=P[0],M[r+108>>2]=P[1],0},doMsync:function(n,t,r,e,i){if(!sn.isFile(t.node.mode))throw new sn.ErrnoError(43);if(2&e)return 0;var o=b.slice(n,n+r);sn.msync(t,o,i,r,e)},varargs:void 0,get:function(){return wn.varargs+=4,M[wn.varargs-4>>2]},getStr:function(n){return _(n)},getStreamFromFD:function(n){var t=sn.getStream(n);if(!t)throw new sn.ErrnoError(8);return t}};function hn(n,t,r,e){for(var i=0,o=0;o<r;o++){var u=A[t>>2],f=A[t+4>>2];t+=8;var a=sn.read(n,g,u,f,e);if(a<0)return-1;if(i+=a,a<f)break}return i}function ln(n,t,r,e){for(var i=0,o=0;o<r;o++){var u=A[t>>2],f=A[t+4>>2];t+=8;var a=sn.write(n,g,u,f,e);if(a<0)return-1;i+=a}return i}function vn(n){return n%4==0&&(n%100!=0||n%400==0)}function dn(n,t){for(var r=0,e=0;e<=t;r+=n[e++]);return r}var yn=[31,29,31,30,31,30,31,31,30,31,30,31],mn=[31,28,31,30,31,30,31,31,30,31,30,31];function pn(n,t){for(var r=new Date(n.getTime());t>0;){var e=vn(r.getFullYear()),i=r.getMonth(),o=(e?yn:mn)[i];if(!(t>o-r.getDate()))return r.setDate(r.getDate()+t),r;t-=o-r.getDate()+1,r.setDate(1),i<11?r.setMonth(i+1):(r.setMonth(0),r.setFullYear(r.getFullYear()+1))}return r}function gn(n,t){g.set(n,t)}function bn(n,t,r,e){var i=M[e+40>>2],o={tm_sec:M[e>>2],tm_min:M[e+4>>2],tm_hour:M[e+8>>2],tm_mday:M[e+12>>2],tm_mon:M[e+16>>2],tm_year:M[e+20>>2],tm_wday:M[e+24>>2],tm_yday:M[e+28>>2],tm_isdst:M[e+32>>2],tm_gmtoff:M[e+36>>2],tm_zone:i?_(i):""},u=_(r),f={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var a in f)u=u.replace(new RegExp(a,"g"),f[a]);var c=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],s=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(n,t,r){for(var e="number"==typeof n?n.toString():n||"";e.length<t;)e=r[0]+e;return e}function h(n,t){return w(n,t,"0")}function l(n,t){function r(n){return n<0?-1:n>0?1:0}var e;return 0===(e=r(n.getFullYear()-t.getFullYear()))&&0===(e=r(n.getMonth()-t.getMonth()))&&(e=r(n.getDate()-t.getDate())),e}function v(n){switch(n.getDay()){case 0:return new Date(n.getFullYear()-1,11,29);case 1:return n;case 2:return new Date(n.getFullYear(),0,3);case 3:return new Date(n.getFullYear(),0,2);case 4:return new Date(n.getFullYear(),0,1);case 5:return new Date(n.getFullYear()-1,11,31);case 6:return new Date(n.getFullYear()-1,11,30)}}function d(n){var t=pn(new Date(n.tm_year+1900,0,1),n.tm_yday),r=new Date(t.getFullYear(),0,4),e=new Date(t.getFullYear()+1,0,4),i=v(r),o=v(e);return l(i,t)<=0?l(o,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var y={"%a":function(n){return c[n.tm_wday].substring(0,3)},"%A":function(n){return c[n.tm_wday]},"%b":function(n){return s[n.tm_mon].substring(0,3)},"%B":function(n){return s[n.tm_mon]},"%C":function(n){return h((n.tm_year+1900)/100|0,2)},"%d":function(n){return h(n.tm_mday,2)},"%e":function(n){return w(n.tm_mday,2," ")},"%g":function(n){return d(n).toString().substring(2)},"%G":function(n){return d(n)},"%H":function(n){return h(n.tm_hour,2)},"%I":function(n){var t=n.tm_hour;return 0==t?t=12:t>12&&(t-=12),h(t,2)},"%j":function(n){return h(n.tm_mday+dn(vn(n.tm_year+1900)?yn:mn,n.tm_mon-1),3)},"%m":function(n){return h(n.tm_mon+1,2)},"%M":function(n){return h(n.tm_min,2)},"%n":function(){return"\n"},"%p":function(n){return n.tm_hour>=0&&n.tm_hour<12?"AM":"PM"},"%S":function(n){return h(n.tm_sec,2)},"%t":function(){return"\t"},"%u":function(n){return n.tm_wday||7},"%U":function(n){var t=n.tm_yday+7-n.tm_wday;return h(Math.floor(t/7),2)},"%V":function(n){var t=Math.floor((n.tm_yday+7-(n.tm_wday+6)%7)/7);if((n.tm_wday+371-n.tm_yday-2)%7<=2&&t++,t){if(53==t){var r=(n.tm_wday+371-n.tm_yday)%7;4==r||3==r&&vn(n.tm_year)||(t=1)}}else{t=52;var e=(n.tm_wday+7-n.tm_yday-1)%7;(4==e||5==e&&vn(n.tm_year%400-1))&&t++}return h(t,2)},"%w":function(n){return n.tm_wday},"%W":function(n){var t=n.tm_yday+7-(n.tm_wday+6)%7;return h(Math.floor(t/7),2)},"%y":function(n){return(n.tm_year+1900).toString().substring(2)},"%Y":function(n){return n.tm_year+1900},"%z":function(n){var t=n.tm_gmtoff,r=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(r?"+":"-")+String("0000"+t).slice(-4)},"%Z":function(n){return n.tm_zone},"%%":function(){return"%"}};for(var a in u=u.replace(/%%/g,"\0\0"),y)u.includes(a)&&(u=u.replace(new RegExp(a,"g"),y[a](o)));var m=on(u=u.replace(/\0\0/g,"%"),!1);return m.length>t?0:(gn(m,n),m.length-1)}var Mn=function(n,t,r,e){n||(n=this),this.parent=n,this.mount=n.mount,this.mounted=null,this.id=sn.nextInode++,this.name=t,this.mode=r,this.node_ops={},this.stream_ops={},this.rdev=e};Object.defineProperties(Mn.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(n){n?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(n){n?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return sn.isDir(this.mode)}},isDevice:{get:function(){return sn.isChrdev(this.mode)}}}),sn.FSNode=Mn,sn.staticInit();var An={a:function(n,t,r,e){C("Assertion failed: "+_(n)+", at: "+[t?_(t):"unknown filename",r,e?_(e):"unknown function"])},f:function(n){return Dn(n+24)+24},e:function(n,t,r){throw new $(n).init(t,r),n},b:function(){C("")},i:function(n){var t=b.length,r=2147483648;if((n>>>=0)>r)return!1;for(var e,i=1;i<=4;i*=2){var o=t*(1+.2/i);if(o=Math.min(o,n+100663296),K(Math.min(r,(e=Math.max(n,o))+(65536-e%65536)%65536)))return!0}return!1},l:function(n,t){var r=0;return Q().forEach((function(e,i){var o=t+r;A[n+4*i>>2]=o,nn(e,o),r+=e.length+1})),0},m:function(n,t){var r=Q();A[n>>2]=r.length;var e=0;return r.forEach((function(n){e+=n.length+1})),A[t>>2]=e,0},d:function(t){var r;r=t,m||(n.onExit&&n.onExit(r),D=!0),a(r,new Y(r))},g:function(n){try{var t=wn.getStreamFromFD(n);return sn.close(t),0}catch(n){if(void 0===sn||!(n instanceof sn.ErrnoError))throw n;return n.errno}},h:function(n,t,r,e){try{var i=hn(wn.getStreamFromFD(n),t,r);return A[e>>2]=i,0}catch(n){if(void 0===sn||!(n instanceof sn.ErrnoError))throw n;return n.errno}},k:function(n,t,r,e,i){try{var o=(a=r)+2097152>>>0<4194305-!!(f=t)?(f>>>0)+4294967296*a:NaN;if(isNaN(o))return 61;var u=wn.getStreamFromFD(n);return sn.llseek(u,o,e),P=[u.position>>>0,(N=u.position,+Math.abs(N)>=1?N>0?(0|Math.min(+Math.floor(N/4294967296),4294967295))>>>0:~~+Math.ceil((N-+(~~N>>>0))/4294967296)>>>0:0)],M[i>>2]=P[0],M[i+4>>2]=P[1],u.getdents&&0===o&&0===e&&(u.getdents=null),0}catch(n){if(void 0===sn||!(n instanceof sn.ErrnoError))throw n;return n.errno}var f,a},j:function(n,t,r,e){try{var i=ln(wn.getStreamFromFD(n),t,r);return A[e>>2]=i,0}catch(n){if(void 0===sn||!(n instanceof sn.ErrnoError))throw n;return n.errno}},n:function(t,r){n._return_string_callback(t,r)},c:function(n,t,r,e){return bn(n,t,r,e)}};!function(){var t={a:An};function r(t){var r,e=t.exports;n.asm=e,O((y=n.asm.o).buffer),n.asm.s,r=n.asm.p,R.unshift(r),B()}function e(n){r(n.instance)}function i(n){return V().then((function(n){return WebAssembly.instantiate(n,t)})).then((function(n){return n})).then(n,(function(n){d("failed to asynchronously prepare wasm: "+n),C(n)}))}if(I(),n.instantiateWasm)try{return n.instantiateWasm(t,r)}catch(n){return d("Module.instantiateWasm callback failed with error: "+n),!1}l||"function"!=typeof WebAssembly.instantiateStreaming||W(T)||X(T)||w||"function"!=typeof fetch?i(e):fetch(T,{credentials:"same-origin"}).then((function(n){return WebAssembly.instantiateStreaming(n,t).then(e,(function(n){return d("wasm streaming compile failed: "+n),d("falling back to ArrayBuffer instantiation"),i(e)}))}))}(),n.___wasm_call_ctors=function(){return(n.___wasm_call_ctors=n.asm.p).apply(null,arguments)},n._test=function(){return(n._test=n.asm.q).apply(null,arguments)},n._spirv_to_wgsl=function(){return(n._spirv_to_wgsl=n.asm.r).apply(null,arguments)};var Dn=n._malloc=function(){return(Dn=n._malloc=n.asm.t).apply(null,arguments)};n._free=function(){return(n._free=n.asm.u).apply(null,arguments)};var kn,Sn=n.___cxa_is_pointer_type=function(){return(Sn=n.___cxa_is_pointer_type=n.asm.v).apply(null,arguments)};function _n(){function t(){kn||(kn=!0,n.calledRun=!0,D||(n.noFSInit||sn.init.initialized||sn.init(),sn.ignorePermissions=!1,J(R),n.onRuntimeInitialized&&n.onRuntimeInitialized(),L()))}z>0||(x(),z>0||(n.setStatus?(n.setStatus("Running..."),setTimeout((function(){setTimeout((function(){n.setStatus("")}),1),t()}),1)):t()))}if(q=function n(){kn||_n(),kn||(q=n)},n.preInit)for("function"==typeof n.preInit&&(n.preInit=[n.preInit]);n.preInit.length>0;)n.preInit.pop()();return _n(),n},e=function(n){return new Promise((function(t){r({locateFile:function(){return n.wasmPath},instantiateWasm:n.instantiateWasm,onRuntimeInitialized:function(){var n=this,r="",e=new TextDecoder;t({convertSpirV2WGSL:function(t){n._return_string_callback||(n._return_string_callback=function(t,i){var o=new Uint8ClampedArray(n.HEAPU8.subarray(t,t+i));r=e.decode(o)});var i=n._malloc(t.byteLength);return n.HEAPU32.set(t,i/4),n._spirv_to_wgsl(i,t.byteLength),n._free(i),r}})}})}))};n("default",(function(n){return t||(t=e(n)),t}))}}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
